{"version":3,"file":"swiper-bundle.min.js","sources":["../src/swiper-bundle.js"],"sourcesContent":["/**\r\n * Swiper 9.3.2\r\n * Most modern mobile touch slider and framework with hardware accelerated transitions\r\n * https://swiperjs.com\r\n *\r\n * Copyright 2014-2023 Vladimir Kharlampidi\r\n *\r\n * Released under the MIT License\r\n *\r\n * Released on: May 15, 2023\r\n */\r\ndefine(['module'], function(module) {\r\n(function (global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n    typeof define === 'function' && define.amd ? define(factory) :\r\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Swiper = factory());\r\n})(this, (function () { 'use strict';\r\n\r\n    /**\r\n     * SSR Window 4.0.2\r\n     * Better handling for window object in SSR environment\r\n     * https://github.com/nolimits4web/ssr-window\r\n     *\r\n     * Copyright 2021, Vladimir Kharlampidi\r\n     *\r\n     * Licensed under MIT\r\n     *\r\n     * Released on: December 13, 2021\r\n     */\r\n    /* eslint-disable no-param-reassign */\r\n    function isObject$1(obj) {\r\n      return obj !== null && typeof obj === 'object' && 'constructor' in obj && obj.constructor === Object;\r\n    }\r\n    function extend$1(target, src) {\r\n      if (target === void 0) {\r\n        target = {};\r\n      }\r\n      if (src === void 0) {\r\n        src = {};\r\n      }\r\n      Object.keys(src).forEach(key => {\r\n        if (typeof target[key] === 'undefined') target[key] = src[key];else if (isObject$1(src[key]) && isObject$1(target[key]) && Object.keys(src[key]).length > 0) {\r\n          extend$1(target[key], src[key]);\r\n        }\r\n      });\r\n    }\r\n    const ssrDocument = {\r\n      body: {},\r\n      addEventListener() {},\r\n      removeEventListener() {},\r\n      activeElement: {\r\n        blur() {},\r\n        nodeName: ''\r\n      },\r\n      querySelector() {\r\n        return null;\r\n      },\r\n      querySelectorAll() {\r\n        return [];\r\n      },\r\n      getElementById() {\r\n        return null;\r\n      },\r\n      createEvent() {\r\n        return {\r\n          initEvent() {}\r\n        };\r\n      },\r\n      createElement() {\r\n        return {\r\n          children: [],\r\n          childNodes: [],\r\n          style: {},\r\n          setAttribute() {},\r\n          getElementsByTagName() {\r\n            return [];\r\n          }\r\n        };\r\n      },\r\n      createElementNS() {\r\n        return {};\r\n      },\r\n      importNode() {\r\n        return null;\r\n      },\r\n      location: {\r\n        hash: '',\r\n        host: '',\r\n        hostname: '',\r\n        href: '',\r\n        origin: '',\r\n        pathname: '',\r\n        protocol: '',\r\n        search: ''\r\n      }\r\n    };\r\n    function getDocument() {\r\n      const doc = typeof document !== 'undefined' ? document : {};\r\n      extend$1(doc, ssrDocument);\r\n      return doc;\r\n    }\r\n    const ssrWindow = {\r\n      document: ssrDocument,\r\n      navigator: {\r\n        userAgent: ''\r\n      },\r\n      location: {\r\n        hash: '',\r\n        host: '',\r\n        hostname: '',\r\n        href: '',\r\n        origin: '',\r\n        pathname: '',\r\n        protocol: '',\r\n        search: ''\r\n      },\r\n      history: {\r\n        replaceState() {},\r\n        pushState() {},\r\n        go() {},\r\n        back() {}\r\n      },\r\n      CustomEvent: function CustomEvent() {\r\n        return this;\r\n      },\r\n      addEventListener() {},\r\n      removeEventListener() {},\r\n      getComputedStyle() {\r\n        return {\r\n          getPropertyValue() {\r\n            return '';\r\n          }\r\n        };\r\n      },\r\n      Image() {},\r\n      Date() {},\r\n      screen: {},\r\n      setTimeout() {},\r\n      clearTimeout() {},\r\n      matchMedia() {\r\n        return {};\r\n      },\r\n      requestAnimationFrame(callback) {\r\n        if (typeof setTimeout === 'undefined') {\r\n          callback();\r\n          return null;\r\n        }\r\n        return setTimeout(callback, 0);\r\n      },\r\n      cancelAnimationFrame(id) {\r\n        if (typeof setTimeout === 'undefined') {\r\n          return;\r\n        }\r\n        clearTimeout(id);\r\n      }\r\n    };\r\n    function getWindow() {\r\n      const win = typeof window !== 'undefined' ? window : {};\r\n      extend$1(win, ssrWindow);\r\n      return win;\r\n    }\r\n\r\n    function deleteProps(obj) {\r\n      const object = obj;\r\n      Object.keys(object).forEach(key => {\r\n        try {\r\n          object[key] = null;\r\n        } catch (e) {\r\n          // no getter for object\r\n        }\r\n        try {\r\n          delete object[key];\r\n        } catch (e) {\r\n          // something got wrong\r\n        }\r\n      });\r\n    }\r\n    function nextTick(callback, delay) {\r\n      if (delay === void 0) {\r\n        delay = 0;\r\n      }\r\n      return setTimeout(callback, delay);\r\n    }\r\n    function now() {\r\n      return Date.now();\r\n    }\r\n    function getComputedStyle$1(el) {\r\n      const window = getWindow();\r\n      let style;\r\n      if (window.getComputedStyle) {\r\n        style = window.getComputedStyle(el, null);\r\n      }\r\n      if (!style && el.currentStyle) {\r\n        style = el.currentStyle;\r\n      }\r\n      if (!style) {\r\n        style = el.style;\r\n      }\r\n      return style;\r\n    }\r\n    function getTranslate(el, axis) {\r\n      if (axis === void 0) {\r\n        axis = 'x';\r\n      }\r\n      const window = getWindow();\r\n      let matrix;\r\n      let curTransform;\r\n      let transformMatrix;\r\n      const curStyle = getComputedStyle$1(el);\r\n      if (window.WebKitCSSMatrix) {\r\n        curTransform = curStyle.transform || curStyle.webkitTransform;\r\n        if (curTransform.split(',').length > 6) {\r\n          curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\r\n        }\r\n        // Some old versions of Webkit choke when 'none' is passed; pass\r\n        // empty string instead in this case\r\n        transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\r\n      } else {\r\n        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\r\n        matrix = transformMatrix.toString().split(',');\r\n      }\r\n      if (axis === 'x') {\r\n        // Latest Chrome and webkits Fix\r\n        if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\r\n        // Crazy IE10 Matrix\r\n        else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\r\n        // Normal Browsers\r\n        else curTransform = parseFloat(matrix[4]);\r\n      }\r\n      if (axis === 'y') {\r\n        // Latest Chrome and webkits Fix\r\n        if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\r\n        // Crazy IE10 Matrix\r\n        else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\r\n        // Normal Browsers\r\n        else curTransform = parseFloat(matrix[5]);\r\n      }\r\n      return curTransform || 0;\r\n    }\r\n    function isObject(o) {\r\n      return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\r\n    }\r\n    function isNode(node) {\r\n      // eslint-disable-next-line\r\n      if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\r\n        return node instanceof HTMLElement;\r\n      }\r\n      return node && (node.nodeType === 1 || node.nodeType === 11);\r\n    }\r\n    function extend() {\r\n      const to = Object(arguments.length <= 0 ? undefined : arguments[0]);\r\n      const noExtend = ['__proto__', 'constructor', 'prototype'];\r\n      for (let i = 1; i < arguments.length; i += 1) {\r\n        const nextSource = i < 0 || arguments.length <= i ? undefined : arguments[i];\r\n        if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\r\n          const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\r\n          for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\r\n            const nextKey = keysArray[nextIndex];\r\n            const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\r\n            if (desc !== undefined && desc.enumerable) {\r\n              if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\r\n                if (nextSource[nextKey].__swiper__) {\r\n                  to[nextKey] = nextSource[nextKey];\r\n                } else {\r\n                  extend(to[nextKey], nextSource[nextKey]);\r\n                }\r\n              } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\r\n                to[nextKey] = {};\r\n                if (nextSource[nextKey].__swiper__) {\r\n                  to[nextKey] = nextSource[nextKey];\r\n                } else {\r\n                  extend(to[nextKey], nextSource[nextKey]);\r\n                }\r\n              } else {\r\n                to[nextKey] = nextSource[nextKey];\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return to;\r\n    }\r\n    function setCSSProperty(el, varName, varValue) {\r\n      el.style.setProperty(varName, varValue);\r\n    }\r\n    function animateCSSModeScroll(_ref) {\r\n      let {\r\n        swiper,\r\n        targetPosition,\r\n        side\r\n      } = _ref;\r\n      const window = getWindow();\r\n      const startPosition = -swiper.translate;\r\n      let startTime = null;\r\n      let time;\r\n      const duration = swiper.params.speed;\r\n      swiper.wrapperEl.style.scrollSnapType = 'none';\r\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\r\n      const dir = targetPosition > startPosition ? 'next' : 'prev';\r\n      const isOutOfBound = (current, target) => {\r\n        return dir === 'next' && current >= target || dir === 'prev' && current <= target;\r\n      };\r\n      const animate = () => {\r\n        time = new Date().getTime();\r\n        if (startTime === null) {\r\n          startTime = time;\r\n        }\r\n        const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\r\n        const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\r\n        let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\r\n        if (isOutOfBound(currentPosition, targetPosition)) {\r\n          currentPosition = targetPosition;\r\n        }\r\n        swiper.wrapperEl.scrollTo({\r\n          [side]: currentPosition\r\n        });\r\n        if (isOutOfBound(currentPosition, targetPosition)) {\r\n          swiper.wrapperEl.style.overflow = 'hidden';\r\n          swiper.wrapperEl.style.scrollSnapType = '';\r\n          setTimeout(() => {\r\n            swiper.wrapperEl.style.overflow = '';\r\n            swiper.wrapperEl.scrollTo({\r\n              [side]: currentPosition\r\n            });\r\n          });\r\n          window.cancelAnimationFrame(swiper.cssModeFrameID);\r\n          return;\r\n        }\r\n        swiper.cssModeFrameID = window.requestAnimationFrame(animate);\r\n      };\r\n      animate();\r\n    }\r\n    function getSlideTransformEl(slideEl) {\r\n      return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\r\n    }\r\n    function elementChildren(element, selector) {\r\n      if (selector === void 0) {\r\n        selector = '';\r\n      }\r\n      return [...element.children].filter(el => el.matches(selector));\r\n    }\r\n    function createElement(tag, classes) {\r\n      if (classes === void 0) {\r\n        classes = [];\r\n      }\r\n      const el = document.createElement(tag);\r\n      el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\r\n      return el;\r\n    }\r\n    function elementOffset(el) {\r\n      const window = getWindow();\r\n      const document = getDocument();\r\n      const box = el.getBoundingClientRect();\r\n      const body = document.body;\r\n      const clientTop = el.clientTop || body.clientTop || 0;\r\n      const clientLeft = el.clientLeft || body.clientLeft || 0;\r\n      const scrollTop = el === window ? window.scrollY : el.scrollTop;\r\n      const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\r\n      return {\r\n        top: box.top + scrollTop - clientTop,\r\n        left: box.left + scrollLeft - clientLeft\r\n      };\r\n    }\r\n    function elementPrevAll(el, selector) {\r\n      const prevEls = [];\r\n      while (el.previousElementSibling) {\r\n        const prev = el.previousElementSibling; // eslint-disable-line\r\n        if (selector) {\r\n          if (prev.matches(selector)) prevEls.push(prev);\r\n        } else prevEls.push(prev);\r\n        el = prev;\r\n      }\r\n      return prevEls;\r\n    }\r\n    function elementNextAll(el, selector) {\r\n      const nextEls = [];\r\n      while (el.nextElementSibling) {\r\n        const next = el.nextElementSibling; // eslint-disable-line\r\n        if (selector) {\r\n          if (next.matches(selector)) nextEls.push(next);\r\n        } else nextEls.push(next);\r\n        el = next;\r\n      }\r\n      return nextEls;\r\n    }\r\n    function elementStyle(el, prop) {\r\n      const window = getWindow();\r\n      return window.getComputedStyle(el, null).getPropertyValue(prop);\r\n    }\r\n    function elementIndex(el) {\r\n      let child = el;\r\n      let i;\r\n      if (child) {\r\n        i = 0;\r\n        // eslint-disable-next-line\r\n        while ((child = child.previousSibling) !== null) {\r\n          if (child.nodeType === 1) i += 1;\r\n        }\r\n        return i;\r\n      }\r\n      return undefined;\r\n    }\r\n    function elementParents(el, selector) {\r\n      const parents = []; // eslint-disable-line\r\n      let parent = el.parentElement; // eslint-disable-line\r\n      while (parent) {\r\n        if (selector) {\r\n          if (parent.matches(selector)) parents.push(parent);\r\n        } else {\r\n          parents.push(parent);\r\n        }\r\n        parent = parent.parentElement;\r\n      }\r\n      return parents;\r\n    }\r\n    function elementTransitionEnd(el, callback) {\r\n      function fireCallBack(e) {\r\n        if (e.target !== el) return;\r\n        callback.call(el, e);\r\n        el.removeEventListener('transitionend', fireCallBack);\r\n      }\r\n      if (callback) {\r\n        el.addEventListener('transitionend', fireCallBack);\r\n      }\r\n    }\r\n    function elementOuterSize(el, size, includeMargins) {\r\n      const window = getWindow();\r\n      if (includeMargins) {\r\n        return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\r\n      }\r\n      return el.offsetWidth;\r\n    }\r\n\r\n    let support;\r\n    function calcSupport() {\r\n      const window = getWindow();\r\n      const document = getDocument();\r\n      return {\r\n        smoothScroll: document.documentElement && document.documentElement.style && 'scrollBehavior' in document.documentElement.style,\r\n        touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\r\n      };\r\n    }\r\n    function getSupport() {\r\n      if (!support) {\r\n        support = calcSupport();\r\n      }\r\n      return support;\r\n    }\r\n\r\n    let deviceCached;\r\n    function calcDevice(_temp) {\r\n      let {\r\n        userAgent\r\n      } = _temp === void 0 ? {} : _temp;\r\n      const support = getSupport();\r\n      const window = getWindow();\r\n      const platform = window.navigator.platform;\r\n      const ua = userAgent || window.navigator.userAgent;\r\n      const device = {\r\n        ios: false,\r\n        android: false\r\n      };\r\n      const screenWidth = window.screen.width;\r\n      const screenHeight = window.screen.height;\r\n      const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\r\n      let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\r\n      const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\r\n      const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\r\n      const windows = platform === 'Win32';\r\n      let macos = platform === 'MacIntel';\r\n\r\n      // iPadOs 13 fix\r\n      const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\r\n      if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\r\n        ipad = ua.match(/(Version)\\/([\\d.]+)/);\r\n        if (!ipad) ipad = [0, 1, '13_0_0'];\r\n        macos = false;\r\n      }\r\n\r\n      // Android\r\n      if (android && !windows) {\r\n        device.os = 'android';\r\n        device.android = true;\r\n      }\r\n      if (ipad || iphone || ipod) {\r\n        device.os = 'ios';\r\n        device.ios = true;\r\n      }\r\n\r\n      // Export object\r\n      return device;\r\n    }\r\n    function getDevice(overrides) {\r\n      if (overrides === void 0) {\r\n        overrides = {};\r\n      }\r\n      if (!deviceCached) {\r\n        deviceCached = calcDevice(overrides);\r\n      }\r\n      return deviceCached;\r\n    }\r\n\r\n    let browser;\r\n    function calcBrowser() {\r\n      const window = getWindow();\r\n      let needPerspectiveFix = false;\r\n      function isSafari() {\r\n        const ua = window.navigator.userAgent.toLowerCase();\r\n        return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\r\n      }\r\n      if (isSafari()) {\r\n        const ua = String(window.navigator.userAgent);\r\n        if (ua.includes('Version/')) {\r\n          const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\r\n          needPerspectiveFix = major < 16 || major === 16 && minor < 2;\r\n        }\r\n      }\r\n      return {\r\n        isSafari: needPerspectiveFix || isSafari(),\r\n        needPerspectiveFix,\r\n        isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\r\n      };\r\n    }\r\n    function getBrowser() {\r\n      if (!browser) {\r\n        browser = calcBrowser();\r\n      }\r\n      return browser;\r\n    }\r\n\r\n    function Resize(_ref) {\r\n      let {\r\n        swiper,\r\n        on,\r\n        emit\r\n      } = _ref;\r\n      const window = getWindow();\r\n      let observer = null;\r\n      let animationFrame = null;\r\n      const resizeHandler = () => {\r\n        if (!swiper || swiper.destroyed || !swiper.initialized) return;\r\n        emit('beforeResize');\r\n        emit('resize');\r\n      };\r\n      const createObserver = () => {\r\n        if (!swiper || swiper.destroyed || !swiper.initialized) return;\r\n        observer = new ResizeObserver(entries => {\r\n          animationFrame = window.requestAnimationFrame(() => {\r\n            const {\r\n              width,\r\n              height\r\n            } = swiper;\r\n            let newWidth = width;\r\n            let newHeight = height;\r\n            entries.forEach(_ref2 => {\r\n              let {\r\n                contentBoxSize,\r\n                contentRect,\r\n                target\r\n              } = _ref2;\r\n              if (target && target !== swiper.el) return;\r\n              newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\r\n              newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\r\n            });\r\n            if (newWidth !== width || newHeight !== height) {\r\n              resizeHandler();\r\n            }\r\n          });\r\n        });\r\n        observer.observe(swiper.el);\r\n      };\r\n      const removeObserver = () => {\r\n        if (animationFrame) {\r\n          window.cancelAnimationFrame(animationFrame);\r\n        }\r\n        if (observer && observer.unobserve && swiper.el) {\r\n          observer.unobserve(swiper.el);\r\n          observer = null;\r\n        }\r\n      };\r\n      const orientationChangeHandler = () => {\r\n        if (!swiper || swiper.destroyed || !swiper.initialized) return;\r\n        emit('orientationchange');\r\n      };\r\n      on('init', () => {\r\n        if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\r\n          createObserver();\r\n          return;\r\n        }\r\n        window.addEventListener('resize', resizeHandler);\r\n        window.addEventListener('orientationchange', orientationChangeHandler);\r\n      });\r\n      on('destroy', () => {\r\n        removeObserver();\r\n        window.removeEventListener('resize', resizeHandler);\r\n        window.removeEventListener('orientationchange', orientationChangeHandler);\r\n      });\r\n    }\r\n\r\n    function Observer(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on,\r\n        emit\r\n      } = _ref;\r\n      const observers = [];\r\n      const window = getWindow();\r\n      const attach = function (target, options) {\r\n        if (options === void 0) {\r\n          options = {};\r\n        }\r\n        const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\r\n        const observer = new ObserverFunc(mutations => {\r\n          // The observerUpdate event should only be triggered\r\n          // once despite the number of mutations.  Additional\r\n          // triggers are redundant and are very costly\r\n          if (swiper.__preventObserver__) return;\r\n          if (mutations.length === 1) {\r\n            emit('observerUpdate', mutations[0]);\r\n            return;\r\n          }\r\n          const observerUpdate = function observerUpdate() {\r\n            emit('observerUpdate', mutations[0]);\r\n          };\r\n          if (window.requestAnimationFrame) {\r\n            window.requestAnimationFrame(observerUpdate);\r\n          } else {\r\n            window.setTimeout(observerUpdate, 0);\r\n          }\r\n        });\r\n        observer.observe(target, {\r\n          attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\r\n          childList: typeof options.childList === 'undefined' ? true : options.childList,\r\n          characterData: typeof options.characterData === 'undefined' ? true : options.characterData\r\n        });\r\n        observers.push(observer);\r\n      };\r\n      const init = () => {\r\n        if (!swiper.params.observer) return;\r\n        if (swiper.params.observeParents) {\r\n          const containerParents = elementParents(swiper.el);\r\n          for (let i = 0; i < containerParents.length; i += 1) {\r\n            attach(containerParents[i]);\r\n          }\r\n        }\r\n        // Observe container\r\n        attach(swiper.el, {\r\n          childList: swiper.params.observeSlideChildren\r\n        });\r\n\r\n        // Observe wrapper\r\n        attach(swiper.wrapperEl, {\r\n          attributes: false\r\n        });\r\n      };\r\n      const destroy = () => {\r\n        observers.forEach(observer => {\r\n          observer.disconnect();\r\n        });\r\n        observers.splice(0, observers.length);\r\n      };\r\n      extendParams({\r\n        observer: false,\r\n        observeParents: false,\r\n        observeSlideChildren: false\r\n      });\r\n      on('init', init);\r\n      on('destroy', destroy);\r\n    }\r\n\r\n    /* eslint-disable no-underscore-dangle */\r\n\r\n    var eventsEmitter = {\r\n      on(events, handler, priority) {\r\n        const self = this;\r\n        if (!self.eventsListeners || self.destroyed) return self;\r\n        if (typeof handler !== 'function') return self;\r\n        const method = priority ? 'unshift' : 'push';\r\n        events.split(' ').forEach(event => {\r\n          if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\r\n          self.eventsListeners[event][method](handler);\r\n        });\r\n        return self;\r\n      },\r\n      once(events, handler, priority) {\r\n        const self = this;\r\n        if (!self.eventsListeners || self.destroyed) return self;\r\n        if (typeof handler !== 'function') return self;\r\n        function onceHandler() {\r\n          self.off(events, onceHandler);\r\n          if (onceHandler.__emitterProxy) {\r\n            delete onceHandler.__emitterProxy;\r\n          }\r\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n            args[_key] = arguments[_key];\r\n          }\r\n          handler.apply(self, args);\r\n        }\r\n        onceHandler.__emitterProxy = handler;\r\n        return self.on(events, onceHandler, priority);\r\n      },\r\n      onAny(handler, priority) {\r\n        const self = this;\r\n        if (!self.eventsListeners || self.destroyed) return self;\r\n        if (typeof handler !== 'function') return self;\r\n        const method = priority ? 'unshift' : 'push';\r\n        if (self.eventsAnyListeners.indexOf(handler) < 0) {\r\n          self.eventsAnyListeners[method](handler);\r\n        }\r\n        return self;\r\n      },\r\n      offAny(handler) {\r\n        const self = this;\r\n        if (!self.eventsListeners || self.destroyed) return self;\r\n        if (!self.eventsAnyListeners) return self;\r\n        const index = self.eventsAnyListeners.indexOf(handler);\r\n        if (index >= 0) {\r\n          self.eventsAnyListeners.splice(index, 1);\r\n        }\r\n        return self;\r\n      },\r\n      off(events, handler) {\r\n        const self = this;\r\n        if (!self.eventsListeners || self.destroyed) return self;\r\n        if (!self.eventsListeners) return self;\r\n        events.split(' ').forEach(event => {\r\n          if (typeof handler === 'undefined') {\r\n            self.eventsListeners[event] = [];\r\n          } else if (self.eventsListeners[event]) {\r\n            self.eventsListeners[event].forEach((eventHandler, index) => {\r\n              if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\r\n                self.eventsListeners[event].splice(index, 1);\r\n              }\r\n            });\r\n          }\r\n        });\r\n        return self;\r\n      },\r\n      emit() {\r\n        const self = this;\r\n        if (!self.eventsListeners || self.destroyed) return self;\r\n        if (!self.eventsListeners) return self;\r\n        let events;\r\n        let data;\r\n        let context;\r\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n          args[_key2] = arguments[_key2];\r\n        }\r\n        if (typeof args[0] === 'string' || Array.isArray(args[0])) {\r\n          events = args[0];\r\n          data = args.slice(1, args.length);\r\n          context = self;\r\n        } else {\r\n          events = args[0].events;\r\n          data = args[0].data;\r\n          context = args[0].context || self;\r\n        }\r\n        data.unshift(context);\r\n        const eventsArray = Array.isArray(events) ? events : events.split(' ');\r\n        eventsArray.forEach(event => {\r\n          if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\r\n            self.eventsAnyListeners.forEach(eventHandler => {\r\n              eventHandler.apply(context, [event, ...data]);\r\n            });\r\n          }\r\n          if (self.eventsListeners && self.eventsListeners[event]) {\r\n            self.eventsListeners[event].forEach(eventHandler => {\r\n              eventHandler.apply(context, data);\r\n            });\r\n          }\r\n        });\r\n        return self;\r\n      }\r\n    };\r\n\r\n    function updateSize() {\r\n      const swiper = this;\r\n      let width;\r\n      let height;\r\n      const el = swiper.el;\r\n      if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\r\n        width = swiper.params.width;\r\n      } else {\r\n        width = el.clientWidth;\r\n      }\r\n      if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\r\n        height = swiper.params.height;\r\n      } else {\r\n        height = el.clientHeight;\r\n      }\r\n      if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\r\n        return;\r\n      }\r\n\r\n      // Subtract paddings\r\n      width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\r\n      height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\r\n      if (Number.isNaN(width)) width = 0;\r\n      if (Number.isNaN(height)) height = 0;\r\n      Object.assign(swiper, {\r\n        width,\r\n        height,\r\n        size: swiper.isHorizontal() ? width : height\r\n      });\r\n    }\r\n\r\n    function updateSlides() {\r\n      const swiper = this;\r\n      function getDirectionLabel(property) {\r\n        if (swiper.isHorizontal()) {\r\n          return property;\r\n        }\r\n        // prettier-ignore\r\n        return {\r\n          'width': 'height',\r\n          'margin-top': 'margin-left',\r\n          'margin-bottom ': 'margin-right',\r\n          'margin-left': 'margin-top',\r\n          'margin-right': 'margin-bottom',\r\n          'padding-left': 'padding-top',\r\n          'padding-right': 'padding-bottom',\r\n          'marginRight': 'marginBottom'\r\n        }[property];\r\n      }\r\n      function getDirectionPropertyValue(node, label) {\r\n        return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\r\n      }\r\n      const params = swiper.params;\r\n      const {\r\n        wrapperEl,\r\n        slidesEl,\r\n        size: swiperSize,\r\n        rtlTranslate: rtl,\r\n        wrongRTL\r\n      } = swiper;\r\n      const isVirtual = swiper.virtual && params.virtual.enabled;\r\n      const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\r\n      const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\r\n      const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\r\n      let snapGrid = [];\r\n      const slidesGrid = [];\r\n      const slidesSizesGrid = [];\r\n      let offsetBefore = params.slidesOffsetBefore;\r\n      if (typeof offsetBefore === 'function') {\r\n        offsetBefore = params.slidesOffsetBefore.call(swiper);\r\n      }\r\n      let offsetAfter = params.slidesOffsetAfter;\r\n      if (typeof offsetAfter === 'function') {\r\n        offsetAfter = params.slidesOffsetAfter.call(swiper);\r\n      }\r\n      const previousSnapGridLength = swiper.snapGrid.length;\r\n      const previousSlidesGridLength = swiper.slidesGrid.length;\r\n      let spaceBetween = params.spaceBetween;\r\n      let slidePosition = -offsetBefore;\r\n      let prevSlideSize = 0;\r\n      let index = 0;\r\n      if (typeof swiperSize === 'undefined') {\r\n        return;\r\n      }\r\n      if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\r\n        spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\r\n      } else if (typeof spaceBetween === 'string') {\r\n        spaceBetween = parseFloat(spaceBetween);\r\n      }\r\n      swiper.virtualSize = -spaceBetween;\r\n\r\n      // reset margins\r\n      slides.forEach(slideEl => {\r\n        if (rtl) {\r\n          slideEl.style.marginLeft = '';\r\n        } else {\r\n          slideEl.style.marginRight = '';\r\n        }\r\n        slideEl.style.marginBottom = '';\r\n        slideEl.style.marginTop = '';\r\n      });\r\n\r\n      // reset cssMode offsets\r\n      if (params.centeredSlides && params.cssMode) {\r\n        setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\r\n        setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\r\n      }\r\n      const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\r\n      if (gridEnabled) {\r\n        swiper.grid.initSlides(slidesLength);\r\n      }\r\n\r\n      // Calc slides\r\n      let slideSize;\r\n      const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\r\n        return typeof params.breakpoints[key].slidesPerView !== 'undefined';\r\n      }).length > 0;\r\n      for (let i = 0; i < slidesLength; i += 1) {\r\n        slideSize = 0;\r\n        let slide;\r\n        if (slides[i]) slide = slides[i];\r\n        if (gridEnabled) {\r\n          swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\r\n        }\r\n        if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\r\n\r\n        if (params.slidesPerView === 'auto') {\r\n          if (shouldResetSlideSize) {\r\n            slides[i].style[getDirectionLabel('width')] = ``;\r\n          }\r\n          const slideStyles = getComputedStyle(slide);\r\n          const currentTransform = slide.style.transform;\r\n          const currentWebKitTransform = slide.style.webkitTransform;\r\n          if (currentTransform) {\r\n            slide.style.transform = 'none';\r\n          }\r\n          if (currentWebKitTransform) {\r\n            slide.style.webkitTransform = 'none';\r\n          }\r\n          if (params.roundLengths) {\r\n            slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\r\n          } else {\r\n            // eslint-disable-next-line\r\n            const width = getDirectionPropertyValue(slideStyles, 'width');\r\n            const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\r\n            const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\r\n            const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\r\n            const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\r\n            const boxSizing = slideStyles.getPropertyValue('box-sizing');\r\n            if (boxSizing && boxSizing === 'border-box') {\r\n              slideSize = width + marginLeft + marginRight;\r\n            } else {\r\n              const {\r\n                clientWidth,\r\n                offsetWidth\r\n              } = slide;\r\n              slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\r\n            }\r\n          }\r\n          if (currentTransform) {\r\n            slide.style.transform = currentTransform;\r\n          }\r\n          if (currentWebKitTransform) {\r\n            slide.style.webkitTransform = currentWebKitTransform;\r\n          }\r\n          if (params.roundLengths) slideSize = Math.floor(slideSize);\r\n        } else {\r\n          slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\r\n          if (params.roundLengths) slideSize = Math.floor(slideSize);\r\n          if (slides[i]) {\r\n            slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\r\n          }\r\n        }\r\n        if (slides[i]) {\r\n          slides[i].swiperSlideSize = slideSize;\r\n        }\r\n        slidesSizesGrid.push(slideSize);\r\n        if (params.centeredSlides) {\r\n          slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\r\n          if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\r\n          if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\r\n          if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\r\n          if (params.roundLengths) slidePosition = Math.floor(slidePosition);\r\n          if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\r\n          slidesGrid.push(slidePosition);\r\n        } else {\r\n          if (params.roundLengths) slidePosition = Math.floor(slidePosition);\r\n          if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\r\n          slidesGrid.push(slidePosition);\r\n          slidePosition = slidePosition + slideSize + spaceBetween;\r\n        }\r\n        swiper.virtualSize += slideSize + spaceBetween;\r\n        prevSlideSize = slideSize;\r\n        index += 1;\r\n      }\r\n      swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\r\n      if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\r\n        wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;\r\n      }\r\n      if (params.setWrapperSize) {\r\n        wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\r\n      }\r\n      if (gridEnabled) {\r\n        swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\r\n      }\r\n\r\n      // Remove last grid elements depending on width\r\n      if (!params.centeredSlides) {\r\n        const newSlidesGrid = [];\r\n        for (let i = 0; i < snapGrid.length; i += 1) {\r\n          let slidesGridItem = snapGrid[i];\r\n          if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\r\n          if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\r\n            newSlidesGrid.push(slidesGridItem);\r\n          }\r\n        }\r\n        snapGrid = newSlidesGrid;\r\n        if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\r\n          snapGrid.push(swiper.virtualSize - swiperSize);\r\n        }\r\n      }\r\n      if (isVirtual && params.loop) {\r\n        const size = slidesSizesGrid[0] + spaceBetween;\r\n        if (params.slidesPerGroup > 1) {\r\n          const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\r\n          const groupSize = size * params.slidesPerGroup;\r\n          for (let i = 0; i < groups; i += 1) {\r\n            snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\r\n          }\r\n        }\r\n        for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\r\n          if (params.slidesPerGroup === 1) {\r\n            snapGrid.push(snapGrid[snapGrid.length - 1] + size);\r\n          }\r\n          slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\r\n          swiper.virtualSize += size;\r\n        }\r\n      }\r\n      if (snapGrid.length === 0) snapGrid = [0];\r\n      if (spaceBetween !== 0) {\r\n        const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\r\n        slides.filter((_, slideIndex) => {\r\n          if (!params.cssMode || params.loop) return true;\r\n          if (slideIndex === slides.length - 1) {\r\n            return false;\r\n          }\r\n          return true;\r\n        }).forEach(slideEl => {\r\n          slideEl.style[key] = `${spaceBetween}px`;\r\n        });\r\n      }\r\n      if (params.centeredSlides && params.centeredSlidesBounds) {\r\n        let allSlidesSize = 0;\r\n        slidesSizesGrid.forEach(slideSizeValue => {\r\n          allSlidesSize += slideSizeValue + (spaceBetween || 0);\r\n        });\r\n        allSlidesSize -= spaceBetween;\r\n        const maxSnap = allSlidesSize - swiperSize;\r\n        snapGrid = snapGrid.map(snap => {\r\n          if (snap < 0) return -offsetBefore;\r\n          if (snap > maxSnap) return maxSnap + offsetAfter;\r\n          return snap;\r\n        });\r\n      }\r\n      if (params.centerInsufficientSlides) {\r\n        let allSlidesSize = 0;\r\n        slidesSizesGrid.forEach(slideSizeValue => {\r\n          allSlidesSize += slideSizeValue + (spaceBetween || 0);\r\n        });\r\n        allSlidesSize -= spaceBetween;\r\n        if (allSlidesSize < swiperSize) {\r\n          const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\r\n          snapGrid.forEach((snap, snapIndex) => {\r\n            snapGrid[snapIndex] = snap - allSlidesOffset;\r\n          });\r\n          slidesGrid.forEach((snap, snapIndex) => {\r\n            slidesGrid[snapIndex] = snap + allSlidesOffset;\r\n          });\r\n        }\r\n      }\r\n      Object.assign(swiper, {\r\n        slides,\r\n        snapGrid,\r\n        slidesGrid,\r\n        slidesSizesGrid\r\n      });\r\n      if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\r\n        setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\r\n        setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\r\n        const addToSnapGrid = -swiper.snapGrid[0];\r\n        const addToSlidesGrid = -swiper.slidesGrid[0];\r\n        swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\r\n        swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\r\n      }\r\n      if (slidesLength !== previousSlidesLength) {\r\n        swiper.emit('slidesLengthChange');\r\n      }\r\n      if (snapGrid.length !== previousSnapGridLength) {\r\n        if (swiper.params.watchOverflow) swiper.checkOverflow();\r\n        swiper.emit('snapGridLengthChange');\r\n      }\r\n      if (slidesGrid.length !== previousSlidesGridLength) {\r\n        swiper.emit('slidesGridLengthChange');\r\n      }\r\n      if (params.watchSlidesProgress) {\r\n        swiper.updateSlidesOffset();\r\n      }\r\n      if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\r\n        const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\r\n        const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\r\n        if (slidesLength <= params.maxBackfaceHiddenSlides) {\r\n          if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\r\n        } else if (hasClassBackfaceClassAdded) {\r\n          swiper.el.classList.remove(backFaceHiddenClass);\r\n        }\r\n      }\r\n    }\r\n\r\n    function updateAutoHeight(speed) {\r\n      const swiper = this;\r\n      const activeSlides = [];\r\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\r\n      let newHeight = 0;\r\n      let i;\r\n      if (typeof speed === 'number') {\r\n        swiper.setTransition(speed);\r\n      } else if (speed === true) {\r\n        swiper.setTransition(swiper.params.speed);\r\n      }\r\n      const getSlideByIndex = index => {\r\n        if (isVirtual) {\r\n          return swiper.slides[swiper.getSlideIndexByData(index)];\r\n        }\r\n        return swiper.slides[index];\r\n      };\r\n      // Find slides currently in view\r\n      if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\r\n        if (swiper.params.centeredSlides) {\r\n          (swiper.visibleSlides || []).forEach(slide => {\r\n            activeSlides.push(slide);\r\n          });\r\n        } else {\r\n          for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\r\n            const index = swiper.activeIndex + i;\r\n            if (index > swiper.slides.length && !isVirtual) break;\r\n            activeSlides.push(getSlideByIndex(index));\r\n          }\r\n        }\r\n      } else {\r\n        activeSlides.push(getSlideByIndex(swiper.activeIndex));\r\n      }\r\n\r\n      // Find new height from highest slide in view\r\n      for (i = 0; i < activeSlides.length; i += 1) {\r\n        if (typeof activeSlides[i] !== 'undefined') {\r\n          const height = activeSlides[i].offsetHeight;\r\n          newHeight = height > newHeight ? height : newHeight;\r\n        }\r\n      }\r\n\r\n      // Update Height\r\n      if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\r\n    }\r\n\r\n    function updateSlidesOffset() {\r\n      const swiper = this;\r\n      const slides = swiper.slides;\r\n      // eslint-disable-next-line\r\n      const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\r\n      for (let i = 0; i < slides.length; i += 1) {\r\n        slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\r\n      }\r\n    }\r\n\r\n    function updateSlidesProgress(translate) {\r\n      if (translate === void 0) {\r\n        translate = this && this.translate || 0;\r\n      }\r\n      const swiper = this;\r\n      const params = swiper.params;\r\n      const {\r\n        slides,\r\n        rtlTranslate: rtl,\r\n        snapGrid\r\n      } = swiper;\r\n      if (slides.length === 0) return;\r\n      if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\r\n      let offsetCenter = -translate;\r\n      if (rtl) offsetCenter = translate;\r\n\r\n      // Visible Slides\r\n      slides.forEach(slideEl => {\r\n        slideEl.classList.remove(params.slideVisibleClass);\r\n      });\r\n      swiper.visibleSlidesIndexes = [];\r\n      swiper.visibleSlides = [];\r\n      let spaceBetween = params.spaceBetween;\r\n      if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\r\n        spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\r\n      } else if (typeof spaceBetween === 'string') {\r\n        spaceBetween = parseFloat(spaceBetween);\r\n      }\r\n      for (let i = 0; i < slides.length; i += 1) {\r\n        const slide = slides[i];\r\n        let slideOffset = slide.swiperSlideOffset;\r\n        if (params.cssMode && params.centeredSlides) {\r\n          slideOffset -= slides[0].swiperSlideOffset;\r\n        }\r\n        const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\r\n        const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\r\n        const slideBefore = -(offsetCenter - slideOffset);\r\n        const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\r\n        const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\r\n        if (isVisible) {\r\n          swiper.visibleSlides.push(slide);\r\n          swiper.visibleSlidesIndexes.push(i);\r\n          slides[i].classList.add(params.slideVisibleClass);\r\n        }\r\n        slide.progress = rtl ? -slideProgress : slideProgress;\r\n        slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\r\n      }\r\n    }\r\n\r\n    function updateProgress(translate) {\r\n      const swiper = this;\r\n      if (typeof translate === 'undefined') {\r\n        const multiplier = swiper.rtlTranslate ? -1 : 1;\r\n        // eslint-disable-next-line\r\n        translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\r\n      }\r\n      const params = swiper.params;\r\n      const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\r\n      let {\r\n        progress,\r\n        isBeginning,\r\n        isEnd,\r\n        progressLoop\r\n      } = swiper;\r\n      const wasBeginning = isBeginning;\r\n      const wasEnd = isEnd;\r\n      if (translatesDiff === 0) {\r\n        progress = 0;\r\n        isBeginning = true;\r\n        isEnd = true;\r\n      } else {\r\n        progress = (translate - swiper.minTranslate()) / translatesDiff;\r\n        const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\r\n        const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\r\n        isBeginning = isBeginningRounded || progress <= 0;\r\n        isEnd = isEndRounded || progress >= 1;\r\n        if (isBeginningRounded) progress = 0;\r\n        if (isEndRounded) progress = 1;\r\n      }\r\n      if (params.loop) {\r\n        const firstSlideIndex = swiper.getSlideIndexByData(0);\r\n        const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\r\n        const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\r\n        const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\r\n        const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\r\n        const translateAbs = Math.abs(translate);\r\n        if (translateAbs >= firstSlideTranslate) {\r\n          progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\r\n        } else {\r\n          progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\r\n        }\r\n        if (progressLoop > 1) progressLoop -= 1;\r\n      }\r\n      Object.assign(swiper, {\r\n        progress,\r\n        progressLoop,\r\n        isBeginning,\r\n        isEnd\r\n      });\r\n      if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\r\n      if (isBeginning && !wasBeginning) {\r\n        swiper.emit('reachBeginning toEdge');\r\n      }\r\n      if (isEnd && !wasEnd) {\r\n        swiper.emit('reachEnd toEdge');\r\n      }\r\n      if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\r\n        swiper.emit('fromEdge');\r\n      }\r\n      swiper.emit('progress', progress);\r\n    }\r\n\r\n    function updateSlidesClasses() {\r\n      const swiper = this;\r\n      const {\r\n        slides,\r\n        params,\r\n        slidesEl,\r\n        activeIndex\r\n      } = swiper;\r\n      const isVirtual = swiper.virtual && params.virtual.enabled;\r\n      const getFilteredSlide = selector => {\r\n        return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\r\n      };\r\n      slides.forEach(slideEl => {\r\n        slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\r\n      });\r\n      let activeSlide;\r\n      if (isVirtual) {\r\n        if (params.loop) {\r\n          let slideIndex = activeIndex - swiper.virtual.slidesBefore;\r\n          if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\r\n          if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\r\n          activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\r\n        } else {\r\n          activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\r\n        }\r\n      } else {\r\n        activeSlide = slides[activeIndex];\r\n      }\r\n      if (activeSlide) {\r\n        // Active classes\r\n        activeSlide.classList.add(params.slideActiveClass);\r\n\r\n        // Next Slide\r\n        let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\r\n        if (params.loop && !nextSlide) {\r\n          nextSlide = slides[0];\r\n        }\r\n        if (nextSlide) {\r\n          nextSlide.classList.add(params.slideNextClass);\r\n        }\r\n        // Prev Slide\r\n        let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\r\n        if (params.loop && !prevSlide === 0) {\r\n          prevSlide = slides[slides.length - 1];\r\n        }\r\n        if (prevSlide) {\r\n          prevSlide.classList.add(params.slidePrevClass);\r\n        }\r\n      }\r\n      swiper.emitSlidesClasses();\r\n    }\r\n\r\n    const processLazyPreloader = (swiper, imageEl) => {\r\n      if (!swiper || swiper.destroyed || !swiper.params) return;\r\n      const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\r\n      const slideEl = imageEl.closest(slideSelector());\r\n      if (slideEl) {\r\n        const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\r\n        if (lazyEl) lazyEl.remove();\r\n      }\r\n    };\r\n    const unlazy = (swiper, index) => {\r\n      if (!swiper.slides[index]) return;\r\n      const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\r\n      if (imageEl) imageEl.removeAttribute('loading');\r\n    };\r\n    const preload = swiper => {\r\n      if (!swiper || swiper.destroyed || !swiper.params) return;\r\n      let amount = swiper.params.lazyPreloadPrevNext;\r\n      const len = swiper.slides.length;\r\n      if (!len || !amount || amount < 0) return;\r\n      amount = Math.min(amount, len);\r\n      const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\r\n      const activeIndex = swiper.activeIndex;\r\n      const slideIndexLastInView = activeIndex + slidesPerView - 1;\r\n      if (swiper.params.rewind) {\r\n        for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\r\n          const realIndex = (i % len + len) % len;\r\n          if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\r\n        }\r\n      } else {\r\n        for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\r\n          if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\r\n        }\r\n      }\r\n    };\r\n\r\n    function getActiveIndexByTranslate(swiper) {\r\n      const {\r\n        slidesGrid,\r\n        params\r\n      } = swiper;\r\n      const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\r\n      let activeIndex;\r\n      for (let i = 0; i < slidesGrid.length; i += 1) {\r\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\r\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\r\n            activeIndex = i;\r\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\r\n            activeIndex = i + 1;\r\n          }\r\n        } else if (translate >= slidesGrid[i]) {\r\n          activeIndex = i;\r\n        }\r\n      }\r\n      // Normalize slideIndex\r\n      if (params.normalizeSlideIndex) {\r\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\r\n      }\r\n      return activeIndex;\r\n    }\r\n    function updateActiveIndex(newActiveIndex) {\r\n      const swiper = this;\r\n      const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\r\n      const {\r\n        snapGrid,\r\n        params,\r\n        activeIndex: previousIndex,\r\n        realIndex: previousRealIndex,\r\n        snapIndex: previousSnapIndex\r\n      } = swiper;\r\n      let activeIndex = newActiveIndex;\r\n      let snapIndex;\r\n      const getVirtualRealIndex = aIndex => {\r\n        let realIndex = aIndex - swiper.virtual.slidesBefore;\r\n        if (realIndex < 0) {\r\n          realIndex = swiper.virtual.slides.length + realIndex;\r\n        }\r\n        if (realIndex >= swiper.virtual.slides.length) {\r\n          realIndex -= swiper.virtual.slides.length;\r\n        }\r\n        return realIndex;\r\n      };\r\n      if (typeof activeIndex === 'undefined') {\r\n        activeIndex = getActiveIndexByTranslate(swiper);\r\n      }\r\n      if (snapGrid.indexOf(translate) >= 0) {\r\n        snapIndex = snapGrid.indexOf(translate);\r\n      } else {\r\n        const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\r\n        snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\r\n      }\r\n      if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\r\n      if (activeIndex === previousIndex) {\r\n        if (snapIndex !== previousSnapIndex) {\r\n          swiper.snapIndex = snapIndex;\r\n          swiper.emit('snapIndexChange');\r\n        }\r\n        if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\r\n          swiper.realIndex = getVirtualRealIndex(activeIndex);\r\n        }\r\n        return;\r\n      }\r\n      // Get real index\r\n      let realIndex;\r\n      if (swiper.virtual && params.virtual.enabled && params.loop) {\r\n        realIndex = getVirtualRealIndex(activeIndex);\r\n      } else if (swiper.slides[activeIndex]) {\r\n        realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\r\n      } else {\r\n        realIndex = activeIndex;\r\n      }\r\n      Object.assign(swiper, {\r\n        previousSnapIndex,\r\n        snapIndex,\r\n        previousRealIndex,\r\n        realIndex,\r\n        previousIndex,\r\n        activeIndex\r\n      });\r\n      if (swiper.initialized) {\r\n        preload(swiper);\r\n      }\r\n      swiper.emit('activeIndexChange');\r\n      swiper.emit('snapIndexChange');\r\n      if (previousRealIndex !== realIndex) {\r\n        swiper.emit('realIndexChange');\r\n      }\r\n      if (swiper.initialized || swiper.params.runCallbacksOnInit) {\r\n        swiper.emit('slideChange');\r\n      }\r\n    }\r\n\r\n    function updateClickedSlide(e) {\r\n      const swiper = this;\r\n      const params = swiper.params;\r\n      const slide = e.closest(`.${params.slideClass}, swiper-slide`);\r\n      let slideFound = false;\r\n      let slideIndex;\r\n      if (slide) {\r\n        for (let i = 0; i < swiper.slides.length; i += 1) {\r\n          if (swiper.slides[i] === slide) {\r\n            slideFound = true;\r\n            slideIndex = i;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if (slide && slideFound) {\r\n        swiper.clickedSlide = slide;\r\n        if (swiper.virtual && swiper.params.virtual.enabled) {\r\n          swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\r\n        } else {\r\n          swiper.clickedIndex = slideIndex;\r\n        }\r\n      } else {\r\n        swiper.clickedSlide = undefined;\r\n        swiper.clickedIndex = undefined;\r\n        return;\r\n      }\r\n      if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\r\n        swiper.slideToClickedSlide();\r\n      }\r\n    }\r\n\r\n    var update = {\r\n      updateSize,\r\n      updateSlides,\r\n      updateAutoHeight,\r\n      updateSlidesOffset,\r\n      updateSlidesProgress,\r\n      updateProgress,\r\n      updateSlidesClasses,\r\n      updateActiveIndex,\r\n      updateClickedSlide\r\n    };\r\n\r\n    function getSwiperTranslate(axis) {\r\n      if (axis === void 0) {\r\n        axis = this.isHorizontal() ? 'x' : 'y';\r\n      }\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        rtlTranslate: rtl,\r\n        translate,\r\n        wrapperEl\r\n      } = swiper;\r\n      if (params.virtualTranslate) {\r\n        return rtl ? -translate : translate;\r\n      }\r\n      if (params.cssMode) {\r\n        return translate;\r\n      }\r\n      let currentTranslate = getTranslate(wrapperEl, axis);\r\n      currentTranslate += swiper.cssOverflowAdjustment();\r\n      if (rtl) currentTranslate = -currentTranslate;\r\n      return currentTranslate || 0;\r\n    }\r\n\r\n    function setTranslate(translate, byController) {\r\n      const swiper = this;\r\n      const {\r\n        rtlTranslate: rtl,\r\n        params,\r\n        wrapperEl,\r\n        progress\r\n      } = swiper;\r\n      let x = 0;\r\n      let y = 0;\r\n      const z = 0;\r\n      if (swiper.isHorizontal()) {\r\n        x = rtl ? -translate : translate;\r\n      } else {\r\n        y = translate;\r\n      }\r\n      if (params.roundLengths) {\r\n        x = Math.floor(x);\r\n        y = Math.floor(y);\r\n      }\r\n      swiper.previousTranslate = swiper.translate;\r\n      swiper.translate = swiper.isHorizontal() ? x : y;\r\n      if (params.cssMode) {\r\n        wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\r\n      } else if (!params.virtualTranslate) {\r\n        if (swiper.isHorizontal()) {\r\n          x -= swiper.cssOverflowAdjustment();\r\n        } else {\r\n          y -= swiper.cssOverflowAdjustment();\r\n        }\r\n        wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\r\n      }\r\n\r\n      // Check if we need to update progress\r\n      let newProgress;\r\n      const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\r\n      if (translatesDiff === 0) {\r\n        newProgress = 0;\r\n      } else {\r\n        newProgress = (translate - swiper.minTranslate()) / translatesDiff;\r\n      }\r\n      if (newProgress !== progress) {\r\n        swiper.updateProgress(translate);\r\n      }\r\n      swiper.emit('setTranslate', swiper.translate, byController);\r\n    }\r\n\r\n    function minTranslate() {\r\n      return -this.snapGrid[0];\r\n    }\r\n\r\n    function maxTranslate() {\r\n      return -this.snapGrid[this.snapGrid.length - 1];\r\n    }\r\n\r\n    function translateTo(translate, speed, runCallbacks, translateBounds, internal) {\r\n      if (translate === void 0) {\r\n        translate = 0;\r\n      }\r\n      if (speed === void 0) {\r\n        speed = this.params.speed;\r\n      }\r\n      if (runCallbacks === void 0) {\r\n        runCallbacks = true;\r\n      }\r\n      if (translateBounds === void 0) {\r\n        translateBounds = true;\r\n      }\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        wrapperEl\r\n      } = swiper;\r\n      if (swiper.animating && params.preventInteractionOnTransition) {\r\n        return false;\r\n      }\r\n      const minTranslate = swiper.minTranslate();\r\n      const maxTranslate = swiper.maxTranslate();\r\n      let newTranslate;\r\n      if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\r\n\r\n      // Update progress\r\n      swiper.updateProgress(newTranslate);\r\n      if (params.cssMode) {\r\n        const isH = swiper.isHorizontal();\r\n        if (speed === 0) {\r\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\r\n        } else {\r\n          if (!swiper.support.smoothScroll) {\r\n            animateCSSModeScroll({\r\n              swiper,\r\n              targetPosition: -newTranslate,\r\n              side: isH ? 'left' : 'top'\r\n            });\r\n            return true;\r\n          }\r\n          wrapperEl.scrollTo({\r\n            [isH ? 'left' : 'top']: -newTranslate,\r\n            behavior: 'smooth'\r\n          });\r\n        }\r\n        return true;\r\n      }\r\n      if (speed === 0) {\r\n        swiper.setTransition(0);\r\n        swiper.setTranslate(newTranslate);\r\n        if (runCallbacks) {\r\n          swiper.emit('beforeTransitionStart', speed, internal);\r\n          swiper.emit('transitionEnd');\r\n        }\r\n      } else {\r\n        swiper.setTransition(speed);\r\n        swiper.setTranslate(newTranslate);\r\n        if (runCallbacks) {\r\n          swiper.emit('beforeTransitionStart', speed, internal);\r\n          swiper.emit('transitionStart');\r\n        }\r\n        if (!swiper.animating) {\r\n          swiper.animating = true;\r\n          if (!swiper.onTranslateToWrapperTransitionEnd) {\r\n            swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\r\n              if (!swiper || swiper.destroyed) return;\r\n              if (e.target !== this) return;\r\n              swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\r\n              swiper.onTranslateToWrapperTransitionEnd = null;\r\n              delete swiper.onTranslateToWrapperTransitionEnd;\r\n              if (runCallbacks) {\r\n                swiper.emit('transitionEnd');\r\n              }\r\n            };\r\n          }\r\n          swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n\r\n    var translate = {\r\n      getTranslate: getSwiperTranslate,\r\n      setTranslate,\r\n      minTranslate,\r\n      maxTranslate,\r\n      translateTo\r\n    };\r\n\r\n    function setTransition(duration, byController) {\r\n      const swiper = this;\r\n      if (!swiper.params.cssMode) {\r\n        swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\r\n      }\r\n      swiper.emit('setTransition', duration, byController);\r\n    }\r\n\r\n    function transitionEmit(_ref) {\r\n      let {\r\n        swiper,\r\n        runCallbacks,\r\n        direction,\r\n        step\r\n      } = _ref;\r\n      const {\r\n        activeIndex,\r\n        previousIndex\r\n      } = swiper;\r\n      let dir = direction;\r\n      if (!dir) {\r\n        if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\r\n      }\r\n      swiper.emit(`transition${step}`);\r\n      if (runCallbacks && activeIndex !== previousIndex) {\r\n        if (dir === 'reset') {\r\n          swiper.emit(`slideResetTransition${step}`);\r\n          return;\r\n        }\r\n        swiper.emit(`slideChangeTransition${step}`);\r\n        if (dir === 'next') {\r\n          swiper.emit(`slideNextTransition${step}`);\r\n        } else {\r\n          swiper.emit(`slidePrevTransition${step}`);\r\n        }\r\n      }\r\n    }\r\n\r\n    function transitionStart(runCallbacks, direction) {\r\n      if (runCallbacks === void 0) {\r\n        runCallbacks = true;\r\n      }\r\n      const swiper = this;\r\n      const {\r\n        params\r\n      } = swiper;\r\n      if (params.cssMode) return;\r\n      if (params.autoHeight) {\r\n        swiper.updateAutoHeight();\r\n      }\r\n      transitionEmit({\r\n        swiper,\r\n        runCallbacks,\r\n        direction,\r\n        step: 'Start'\r\n      });\r\n    }\r\n\r\n    function transitionEnd(runCallbacks, direction) {\r\n      if (runCallbacks === void 0) {\r\n        runCallbacks = true;\r\n      }\r\n      const swiper = this;\r\n      const {\r\n        params\r\n      } = swiper;\r\n      swiper.animating = false;\r\n      if (params.cssMode) return;\r\n      swiper.setTransition(0);\r\n      transitionEmit({\r\n        swiper,\r\n        runCallbacks,\r\n        direction,\r\n        step: 'End'\r\n      });\r\n    }\r\n\r\n    var transition = {\r\n      setTransition,\r\n      transitionStart,\r\n      transitionEnd\r\n    };\r\n\r\n    function slideTo(index, speed, runCallbacks, internal, initial) {\r\n      if (index === void 0) {\r\n        index = 0;\r\n      }\r\n      if (speed === void 0) {\r\n        speed = this.params.speed;\r\n      }\r\n      if (runCallbacks === void 0) {\r\n        runCallbacks = true;\r\n      }\r\n      if (typeof index === 'string') {\r\n        index = parseInt(index, 10);\r\n      }\r\n      const swiper = this;\r\n      let slideIndex = index;\r\n      if (slideIndex < 0) slideIndex = 0;\r\n      const {\r\n        params,\r\n        snapGrid,\r\n        slidesGrid,\r\n        previousIndex,\r\n        activeIndex,\r\n        rtlTranslate: rtl,\r\n        wrapperEl,\r\n        enabled\r\n      } = swiper;\r\n      if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\r\n        return false;\r\n      }\r\n      const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\r\n      let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\r\n      if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\r\n      const translate = -snapGrid[snapIndex];\r\n      // Normalize slideIndex\r\n      if (params.normalizeSlideIndex) {\r\n        for (let i = 0; i < slidesGrid.length; i += 1) {\r\n          const normalizedTranslate = -Math.floor(translate * 100);\r\n          const normalizedGrid = Math.floor(slidesGrid[i] * 100);\r\n          const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\r\n          if (typeof slidesGrid[i + 1] !== 'undefined') {\r\n            if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\r\n              slideIndex = i;\r\n            } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\r\n              slideIndex = i + 1;\r\n            }\r\n          } else if (normalizedTranslate >= normalizedGrid) {\r\n            slideIndex = i;\r\n          }\r\n        }\r\n      }\r\n      // Directions locks\r\n      if (swiper.initialized && slideIndex !== activeIndex) {\r\n        if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\r\n          return false;\r\n        }\r\n        if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\r\n          if ((activeIndex || 0) !== slideIndex) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      if (slideIndex !== (previousIndex || 0) && runCallbacks) {\r\n        swiper.emit('beforeSlideChangeStart');\r\n      }\r\n\r\n      // Update progress\r\n      swiper.updateProgress(translate);\r\n      let direction;\r\n      if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\r\n\r\n      // Update Index\r\n      if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\r\n        swiper.updateActiveIndex(slideIndex);\r\n        // Update Height\r\n        if (params.autoHeight) {\r\n          swiper.updateAutoHeight();\r\n        }\r\n        swiper.updateSlidesClasses();\r\n        if (params.effect !== 'slide') {\r\n          swiper.setTranslate(translate);\r\n        }\r\n        if (direction !== 'reset') {\r\n          swiper.transitionStart(runCallbacks, direction);\r\n          swiper.transitionEnd(runCallbacks, direction);\r\n        }\r\n        return false;\r\n      }\r\n      if (params.cssMode) {\r\n        const isH = swiper.isHorizontal();\r\n        const t = rtl ? translate : -translate;\r\n        if (speed === 0) {\r\n          const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\r\n          if (isVirtual) {\r\n            swiper.wrapperEl.style.scrollSnapType = 'none';\r\n            swiper._immediateVirtual = true;\r\n          }\r\n          if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\r\n            swiper._cssModeVirtualInitialSet = true;\r\n            requestAnimationFrame(() => {\r\n              wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\r\n            });\r\n          } else {\r\n            wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\r\n          }\r\n          if (isVirtual) {\r\n            requestAnimationFrame(() => {\r\n              swiper.wrapperEl.style.scrollSnapType = '';\r\n              swiper._immediateVirtual = false;\r\n            });\r\n          }\r\n        } else {\r\n          if (!swiper.support.smoothScroll) {\r\n            animateCSSModeScroll({\r\n              swiper,\r\n              targetPosition: t,\r\n              side: isH ? 'left' : 'top'\r\n            });\r\n            return true;\r\n          }\r\n          wrapperEl.scrollTo({\r\n            [isH ? 'left' : 'top']: t,\r\n            behavior: 'smooth'\r\n          });\r\n        }\r\n        return true;\r\n      }\r\n      swiper.setTransition(speed);\r\n      swiper.setTranslate(translate);\r\n      swiper.updateActiveIndex(slideIndex);\r\n      swiper.updateSlidesClasses();\r\n      swiper.emit('beforeTransitionStart', speed, internal);\r\n      swiper.transitionStart(runCallbacks, direction);\r\n      if (speed === 0) {\r\n        swiper.transitionEnd(runCallbacks, direction);\r\n      } else if (!swiper.animating) {\r\n        swiper.animating = true;\r\n        if (!swiper.onSlideToWrapperTransitionEnd) {\r\n          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\r\n            if (!swiper || swiper.destroyed) return;\r\n            if (e.target !== this) return;\r\n            swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\r\n            swiper.onSlideToWrapperTransitionEnd = null;\r\n            delete swiper.onSlideToWrapperTransitionEnd;\r\n            swiper.transitionEnd(runCallbacks, direction);\r\n          };\r\n        }\r\n        swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\r\n      }\r\n      return true;\r\n    }\r\n\r\n    function slideToLoop(index, speed, runCallbacks, internal) {\r\n      if (index === void 0) {\r\n        index = 0;\r\n      }\r\n      if (speed === void 0) {\r\n        speed = this.params.speed;\r\n      }\r\n      if (runCallbacks === void 0) {\r\n        runCallbacks = true;\r\n      }\r\n      if (typeof index === 'string') {\r\n        const indexAsNumber = parseInt(index, 10);\r\n        index = indexAsNumber;\r\n      }\r\n      const swiper = this;\r\n      let newIndex = index;\r\n      if (swiper.params.loop) {\r\n        if (swiper.virtual && swiper.params.virtual.enabled) {\r\n          // eslint-disable-next-line\r\n          newIndex = newIndex + swiper.virtual.slidesBefore;\r\n        } else {\r\n          newIndex = swiper.getSlideIndexByData(newIndex);\r\n        }\r\n      }\r\n      return swiper.slideTo(newIndex, speed, runCallbacks, internal);\r\n    }\r\n\r\n    /* eslint no-unused-vars: \"off\" */\r\n    function slideNext(speed, runCallbacks, internal) {\r\n      if (speed === void 0) {\r\n        speed = this.params.speed;\r\n      }\r\n      if (runCallbacks === void 0) {\r\n        runCallbacks = true;\r\n      }\r\n      const swiper = this;\r\n      const {\r\n        enabled,\r\n        params,\r\n        animating\r\n      } = swiper;\r\n      if (!enabled) return swiper;\r\n      let perGroup = params.slidesPerGroup;\r\n      if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\r\n        perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\r\n      }\r\n      const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\r\n      const isVirtual = swiper.virtual && params.virtual.enabled;\r\n      if (params.loop) {\r\n        if (animating && !isVirtual && params.loopPreventsSliding) return false;\r\n        swiper.loopFix({\r\n          direction: 'next'\r\n        });\r\n        // eslint-disable-next-line\r\n        swiper._clientLeft = swiper.wrapperEl.clientLeft;\r\n      }\r\n      if (params.rewind && swiper.isEnd) {\r\n        return swiper.slideTo(0, speed, runCallbacks, internal);\r\n      }\r\n      return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\r\n    }\r\n\r\n    /* eslint no-unused-vars: \"off\" */\r\n    function slidePrev(speed, runCallbacks, internal) {\r\n      if (speed === void 0) {\r\n        speed = this.params.speed;\r\n      }\r\n      if (runCallbacks === void 0) {\r\n        runCallbacks = true;\r\n      }\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        snapGrid,\r\n        slidesGrid,\r\n        rtlTranslate,\r\n        enabled,\r\n        animating\r\n      } = swiper;\r\n      if (!enabled) return swiper;\r\n      const isVirtual = swiper.virtual && params.virtual.enabled;\r\n      if (params.loop) {\r\n        if (animating && !isVirtual && params.loopPreventsSliding) return false;\r\n        swiper.loopFix({\r\n          direction: 'prev'\r\n        });\r\n        // eslint-disable-next-line\r\n        swiper._clientLeft = swiper.wrapperEl.clientLeft;\r\n      }\r\n      const translate = rtlTranslate ? swiper.translate : -swiper.translate;\r\n      function normalize(val) {\r\n        if (val < 0) return -Math.floor(Math.abs(val));\r\n        return Math.floor(val);\r\n      }\r\n      const normalizedTranslate = normalize(translate);\r\n      const normalizedSnapGrid = snapGrid.map(val => normalize(val));\r\n      let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\r\n      if (typeof prevSnap === 'undefined' && params.cssMode) {\r\n        let prevSnapIndex;\r\n        snapGrid.forEach((snap, snapIndex) => {\r\n          if (normalizedTranslate >= snap) {\r\n            // prevSnap = snap;\r\n            prevSnapIndex = snapIndex;\r\n          }\r\n        });\r\n        if (typeof prevSnapIndex !== 'undefined') {\r\n          prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\r\n        }\r\n      }\r\n      let prevIndex = 0;\r\n      if (typeof prevSnap !== 'undefined') {\r\n        prevIndex = slidesGrid.indexOf(prevSnap);\r\n        if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\r\n        if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\r\n          prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\r\n          prevIndex = Math.max(prevIndex, 0);\r\n        }\r\n      }\r\n      if (params.rewind && swiper.isBeginning) {\r\n        const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\r\n        return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\r\n      }\r\n      return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\r\n    }\r\n\r\n    /* eslint no-unused-vars: \"off\" */\r\n    function slideReset(speed, runCallbacks, internal) {\r\n      if (speed === void 0) {\r\n        speed = this.params.speed;\r\n      }\r\n      if (runCallbacks === void 0) {\r\n        runCallbacks = true;\r\n      }\r\n      const swiper = this;\r\n      return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\r\n    }\r\n\r\n    /* eslint no-unused-vars: \"off\" */\r\n    function slideToClosest(speed, runCallbacks, internal, threshold) {\r\n      if (speed === void 0) {\r\n        speed = this.params.speed;\r\n      }\r\n      if (runCallbacks === void 0) {\r\n        runCallbacks = true;\r\n      }\r\n      if (threshold === void 0) {\r\n        threshold = 0.5;\r\n      }\r\n      const swiper = this;\r\n      let index = swiper.activeIndex;\r\n      const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\r\n      const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\r\n      const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\r\n      if (translate >= swiper.snapGrid[snapIndex]) {\r\n        // The current translate is on or after the current snap index, so the choice\r\n        // is between the current index and the one after it.\r\n        const currentSnap = swiper.snapGrid[snapIndex];\r\n        const nextSnap = swiper.snapGrid[snapIndex + 1];\r\n        if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\r\n          index += swiper.params.slidesPerGroup;\r\n        }\r\n      } else {\r\n        // The current translate is before the current snap index, so the choice\r\n        // is between the current index and the one before it.\r\n        const prevSnap = swiper.snapGrid[snapIndex - 1];\r\n        const currentSnap = swiper.snapGrid[snapIndex];\r\n        if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\r\n          index -= swiper.params.slidesPerGroup;\r\n        }\r\n      }\r\n      index = Math.max(index, 0);\r\n      index = Math.min(index, swiper.slidesGrid.length - 1);\r\n      return swiper.slideTo(index, speed, runCallbacks, internal);\r\n    }\r\n\r\n    function slideToClickedSlide() {\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        slidesEl\r\n      } = swiper;\r\n      const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\r\n      let slideToIndex = swiper.clickedIndex;\r\n      let realIndex;\r\n      const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\r\n      if (params.loop) {\r\n        if (swiper.animating) return;\r\n        realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\r\n        if (params.centeredSlides) {\r\n          if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\r\n            swiper.loopFix();\r\n            slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\r\n            nextTick(() => {\r\n              swiper.slideTo(slideToIndex);\r\n            });\r\n          } else {\r\n            swiper.slideTo(slideToIndex);\r\n          }\r\n        } else if (slideToIndex > swiper.slides.length - slidesPerView) {\r\n          swiper.loopFix();\r\n          slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\r\n          nextTick(() => {\r\n            swiper.slideTo(slideToIndex);\r\n          });\r\n        } else {\r\n          swiper.slideTo(slideToIndex);\r\n        }\r\n      } else {\r\n        swiper.slideTo(slideToIndex);\r\n      }\r\n    }\r\n\r\n    var slide = {\r\n      slideTo,\r\n      slideToLoop,\r\n      slideNext,\r\n      slidePrev,\r\n      slideReset,\r\n      slideToClosest,\r\n      slideToClickedSlide\r\n    };\r\n\r\n    function loopCreate(slideRealIndex) {\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        slidesEl\r\n      } = swiper;\r\n      if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\r\n      const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\r\n      slides.forEach((el, index) => {\r\n        el.setAttribute('data-swiper-slide-index', index);\r\n      });\r\n      swiper.loopFix({\r\n        slideRealIndex,\r\n        direction: params.centeredSlides ? undefined : 'next'\r\n      });\r\n    }\r\n\r\n    function loopFix(_temp) {\r\n      let {\r\n        slideRealIndex,\r\n        slideTo = true,\r\n        direction,\r\n        setTranslate,\r\n        activeSlideIndex,\r\n        byController,\r\n        byMousewheel\r\n      } = _temp === void 0 ? {} : _temp;\r\n      const swiper = this;\r\n      if (!swiper.params.loop) return;\r\n      swiper.emit('beforeLoopFix');\r\n      const {\r\n        slides,\r\n        allowSlidePrev,\r\n        allowSlideNext,\r\n        slidesEl,\r\n        params\r\n      } = swiper;\r\n      swiper.allowSlidePrev = true;\r\n      swiper.allowSlideNext = true;\r\n      if (swiper.virtual && params.virtual.enabled) {\r\n        if (slideTo) {\r\n          if (!params.centeredSlides && swiper.snapIndex === 0) {\r\n            swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\r\n          } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\r\n            swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\r\n          } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\r\n            swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\r\n          }\r\n        }\r\n        swiper.allowSlidePrev = allowSlidePrev;\r\n        swiper.allowSlideNext = allowSlideNext;\r\n        swiper.emit('loopFix');\r\n        return;\r\n      }\r\n      const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\r\n      let loopedSlides = params.loopedSlides || slidesPerView;\r\n      if (loopedSlides % params.slidesPerGroup !== 0) {\r\n        loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\r\n      }\r\n      swiper.loopedSlides = loopedSlides;\r\n      const prependSlidesIndexes = [];\r\n      const appendSlidesIndexes = [];\r\n      let activeIndex = swiper.activeIndex;\r\n      if (typeof activeSlideIndex === 'undefined') {\r\n        activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\r\n      } else {\r\n        activeIndex = activeSlideIndex;\r\n      }\r\n      const isNext = direction === 'next' || !direction;\r\n      const isPrev = direction === 'prev' || !direction;\r\n      let slidesPrepended = 0;\r\n      let slidesAppended = 0;\r\n      // prepend last slides before start\r\n      if (activeSlideIndex < loopedSlides) {\r\n        slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\r\n        for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\r\n          const index = i - Math.floor(i / slides.length) * slides.length;\r\n          prependSlidesIndexes.push(slides.length - index - 1);\r\n        }\r\n      } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\r\n        slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\r\n        for (let i = 0; i < slidesAppended; i += 1) {\r\n          const index = i - Math.floor(i / slides.length) * slides.length;\r\n          appendSlidesIndexes.push(index);\r\n        }\r\n      }\r\n      if (isPrev) {\r\n        prependSlidesIndexes.forEach(index => {\r\n          swiper.slides[index].swiperLoopMoveDOM = true;\r\n          slidesEl.prepend(swiper.slides[index]);\r\n          swiper.slides[index].swiperLoopMoveDOM = false;\r\n        });\r\n      }\r\n      if (isNext) {\r\n        appendSlidesIndexes.forEach(index => {\r\n          swiper.slides[index].swiperLoopMoveDOM = true;\r\n          slidesEl.append(swiper.slides[index]);\r\n          swiper.slides[index].swiperLoopMoveDOM = false;\r\n        });\r\n      }\r\n      swiper.recalcSlides();\r\n      if (params.slidesPerView === 'auto') {\r\n        swiper.updateSlides();\r\n      }\r\n      if (params.watchSlidesProgress) {\r\n        swiper.updateSlidesOffset();\r\n      }\r\n      if (slideTo) {\r\n        if (prependSlidesIndexes.length > 0 && isPrev) {\r\n          if (typeof slideRealIndex === 'undefined') {\r\n            const currentSlideTranslate = swiper.slidesGrid[activeIndex];\r\n            const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\r\n            const diff = newSlideTranslate - currentSlideTranslate;\r\n            if (byMousewheel) {\r\n              swiper.setTranslate(swiper.translate - diff);\r\n            } else {\r\n              swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\r\n              if (setTranslate) {\r\n                swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\r\n              }\r\n            }\r\n          } else {\r\n            if (setTranslate) {\r\n              swiper.slideToLoop(slideRealIndex, 0, false, true);\r\n            }\r\n          }\r\n        } else if (appendSlidesIndexes.length > 0 && isNext) {\r\n          if (typeof slideRealIndex === 'undefined') {\r\n            const currentSlideTranslate = swiper.slidesGrid[activeIndex];\r\n            const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\r\n            const diff = newSlideTranslate - currentSlideTranslate;\r\n            if (byMousewheel) {\r\n              swiper.setTranslate(swiper.translate - diff);\r\n            } else {\r\n              swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\r\n              if (setTranslate) {\r\n                swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\r\n              }\r\n            }\r\n          } else {\r\n            swiper.slideToLoop(slideRealIndex, 0, false, true);\r\n          }\r\n        }\r\n      }\r\n      swiper.allowSlidePrev = allowSlidePrev;\r\n      swiper.allowSlideNext = allowSlideNext;\r\n      if (swiper.controller && swiper.controller.control && !byController) {\r\n        const loopParams = {\r\n          slideRealIndex,\r\n          slideTo: false,\r\n          direction,\r\n          setTranslate,\r\n          activeSlideIndex,\r\n          byController: true\r\n        };\r\n        if (Array.isArray(swiper.controller.control)) {\r\n          swiper.controller.control.forEach(c => {\r\n            if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\r\n          });\r\n        } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\r\n          swiper.controller.control.loopFix(loopParams);\r\n        }\r\n      }\r\n      swiper.emit('loopFix');\r\n    }\r\n\r\n    function loopDestroy() {\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        slidesEl\r\n      } = swiper;\r\n      if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\r\n      swiper.recalcSlides();\r\n      const newSlidesOrder = [];\r\n      swiper.slides.forEach(slideEl => {\r\n        const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\r\n        newSlidesOrder[index] = slideEl;\r\n      });\r\n      swiper.slides.forEach(slideEl => {\r\n        slideEl.removeAttribute('data-swiper-slide-index');\r\n      });\r\n      newSlidesOrder.forEach(slideEl => {\r\n        slidesEl.append(slideEl);\r\n      });\r\n      swiper.recalcSlides();\r\n      swiper.slideTo(swiper.realIndex, 0);\r\n    }\r\n\r\n    var loop = {\r\n      loopCreate,\r\n      loopFix,\r\n      loopDestroy\r\n    };\r\n\r\n    function setGrabCursor(moving) {\r\n      const swiper = this;\r\n      if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\r\n      const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\r\n      if (swiper.isElement) {\r\n        swiper.__preventObserver__ = true;\r\n      }\r\n      el.style.cursor = 'move';\r\n      el.style.cursor = moving ? 'grabbing' : 'grab';\r\n      if (swiper.isElement) {\r\n        requestAnimationFrame(() => {\r\n          swiper.__preventObserver__ = false;\r\n        });\r\n      }\r\n    }\r\n\r\n    function unsetGrabCursor() {\r\n      const swiper = this;\r\n      if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\r\n        return;\r\n      }\r\n      if (swiper.isElement) {\r\n        swiper.__preventObserver__ = true;\r\n      }\r\n      swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\r\n      if (swiper.isElement) {\r\n        requestAnimationFrame(() => {\r\n          swiper.__preventObserver__ = false;\r\n        });\r\n      }\r\n    }\r\n\r\n    var grabCursor = {\r\n      setGrabCursor,\r\n      unsetGrabCursor\r\n    };\r\n\r\n    // Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\r\n    function closestElement(selector, base) {\r\n      if (base === void 0) {\r\n        base = this;\r\n      }\r\n      function __closestFrom(el) {\r\n        if (!el || el === getDocument() || el === getWindow()) return null;\r\n        if (el.assignedSlot) el = el.assignedSlot;\r\n        const found = el.closest(selector);\r\n        if (!found && !el.getRootNode) {\r\n          return null;\r\n        }\r\n        return found || __closestFrom(el.getRootNode().host);\r\n      }\r\n      return __closestFrom(base);\r\n    }\r\n    function onTouchStart(event) {\r\n      const swiper = this;\r\n      const document = getDocument();\r\n      const window = getWindow();\r\n      const data = swiper.touchEventsData;\r\n      data.evCache.push(event);\r\n      const {\r\n        params,\r\n        touches,\r\n        enabled\r\n      } = swiper;\r\n      if (!enabled) return;\r\n      if (!params.simulateTouch && event.pointerType === 'mouse') return;\r\n      if (swiper.animating && params.preventInteractionOnTransition) {\r\n        return;\r\n      }\r\n      if (!swiper.animating && params.cssMode && params.loop) {\r\n        swiper.loopFix();\r\n      }\r\n      let e = event;\r\n      if (e.originalEvent) e = e.originalEvent;\r\n      let targetEl = e.target;\r\n      if (params.touchEventsTarget === 'wrapper') {\r\n        if (!swiper.wrapperEl.contains(targetEl)) return;\r\n      }\r\n      if ('which' in e && e.which === 3) return;\r\n      if ('button' in e && e.button > 0) return;\r\n      if (data.isTouched && data.isMoved) return;\r\n\r\n      // change target el for shadow root component\r\n      const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\r\n      // eslint-disable-next-line\r\n      const eventPath = event.composedPath ? event.composedPath() : event.path;\r\n      if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\r\n        targetEl = eventPath[0];\r\n      }\r\n      const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\r\n      const isTargetShadow = !!(e.target && e.target.shadowRoot);\r\n\r\n      // use closestElement for shadow root element to get the actual closest for nested shadow root element\r\n      if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\r\n        swiper.allowClick = true;\r\n        return;\r\n      }\r\n      if (params.swipeHandler) {\r\n        if (!targetEl.closest(params.swipeHandler)) return;\r\n      }\r\n      touches.currentX = e.pageX;\r\n      touches.currentY = e.pageY;\r\n      const startX = touches.currentX;\r\n      const startY = touches.currentY;\r\n\r\n      // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\r\n\r\n      const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\r\n      const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\r\n      if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\r\n        if (edgeSwipeDetection === 'prevent') {\r\n          event.preventDefault();\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n      Object.assign(data, {\r\n        isTouched: true,\r\n        isMoved: false,\r\n        allowTouchCallbacks: true,\r\n        isScrolling: undefined,\r\n        startMoving: undefined\r\n      });\r\n      touches.startX = startX;\r\n      touches.startY = startY;\r\n      data.touchStartTime = now();\r\n      swiper.allowClick = true;\r\n      swiper.updateSize();\r\n      swiper.swipeDirection = undefined;\r\n      if (params.threshold > 0) data.allowThresholdMove = false;\r\n      let preventDefault = true;\r\n      if (targetEl.matches(data.focusableElements)) {\r\n        preventDefault = false;\r\n        if (targetEl.nodeName === 'SELECT') {\r\n          data.isTouched = false;\r\n        }\r\n      }\r\n      if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\r\n        document.activeElement.blur();\r\n      }\r\n      const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\r\n      if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\r\n        e.preventDefault();\r\n      }\r\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\r\n        swiper.freeMode.onTouchStart();\r\n      }\r\n      swiper.emit('touchStart', e);\r\n    }\r\n\r\n    function onTouchMove(event) {\r\n      const document = getDocument();\r\n      const swiper = this;\r\n      const data = swiper.touchEventsData;\r\n      const {\r\n        params,\r\n        touches,\r\n        rtlTranslate: rtl,\r\n        enabled\r\n      } = swiper;\r\n      if (!enabled) return;\r\n      if (!params.simulateTouch && event.pointerType === 'mouse') return;\r\n      let e = event;\r\n      if (e.originalEvent) e = e.originalEvent;\r\n      if (!data.isTouched) {\r\n        if (data.startMoving && data.isScrolling) {\r\n          swiper.emit('touchMoveOpposite', e);\r\n        }\r\n        return;\r\n      }\r\n      const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\r\n      if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\r\n      const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\r\n      const pageX = targetTouch.pageX;\r\n      const pageY = targetTouch.pageY;\r\n      if (e.preventedByNestedSwiper) {\r\n        touches.startX = pageX;\r\n        touches.startY = pageY;\r\n        return;\r\n      }\r\n      if (!swiper.allowTouchMove) {\r\n        if (!e.target.matches(data.focusableElements)) {\r\n          swiper.allowClick = false;\r\n        }\r\n        if (data.isTouched) {\r\n          Object.assign(touches, {\r\n            startX: pageX,\r\n            startY: pageY,\r\n            prevX: swiper.touches.currentX,\r\n            prevY: swiper.touches.currentY,\r\n            currentX: pageX,\r\n            currentY: pageY\r\n          });\r\n          data.touchStartTime = now();\r\n        }\r\n        return;\r\n      }\r\n      if (params.touchReleaseOnEdges && !params.loop) {\r\n        if (swiper.isVertical()) {\r\n          // Vertical\r\n          if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\r\n            data.isTouched = false;\r\n            data.isMoved = false;\r\n            return;\r\n          }\r\n        } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\r\n          return;\r\n        }\r\n      }\r\n      if (document.activeElement) {\r\n        if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\r\n          data.isMoved = true;\r\n          swiper.allowClick = false;\r\n          return;\r\n        }\r\n      }\r\n      if (data.allowTouchCallbacks) {\r\n        swiper.emit('touchMove', e);\r\n      }\r\n      if (e.targetTouches && e.targetTouches.length > 1) return;\r\n      touches.currentX = pageX;\r\n      touches.currentY = pageY;\r\n      const diffX = touches.currentX - touches.startX;\r\n      const diffY = touches.currentY - touches.startY;\r\n      if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\r\n      if (typeof data.isScrolling === 'undefined') {\r\n        let touchAngle;\r\n        if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\r\n          data.isScrolling = false;\r\n        } else {\r\n          // eslint-disable-next-line\r\n          if (diffX * diffX + diffY * diffY >= 25) {\r\n            touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\r\n            data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\r\n          }\r\n        }\r\n      }\r\n      if (data.isScrolling) {\r\n        swiper.emit('touchMoveOpposite', e);\r\n      }\r\n      if (typeof data.startMoving === 'undefined') {\r\n        if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\r\n          data.startMoving = true;\r\n        }\r\n      }\r\n      if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\r\n        data.isTouched = false;\r\n        return;\r\n      }\r\n      if (!data.startMoving) {\r\n        return;\r\n      }\r\n      swiper.allowClick = false;\r\n      if (!params.cssMode && e.cancelable) {\r\n        e.preventDefault();\r\n      }\r\n      if (params.touchMoveStopPropagation && !params.nested) {\r\n        e.stopPropagation();\r\n      }\r\n      let diff = swiper.isHorizontal() ? diffX : diffY;\r\n      let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\r\n      if (params.oneWayMovement) {\r\n        diff = Math.abs(diff) * (rtl ? 1 : -1);\r\n        touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\r\n      }\r\n      touches.diff = diff;\r\n      diff *= params.touchRatio;\r\n      if (rtl) {\r\n        diff = -diff;\r\n        touchesDiff = -touchesDiff;\r\n      }\r\n      const prevTouchesDirection = swiper.touchesDirection;\r\n      swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\r\n      swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\r\n      const isLoop = swiper.params.loop && !params.cssMode;\r\n      if (!data.isMoved) {\r\n        if (isLoop) {\r\n          swiper.loopFix({\r\n            direction: swiper.swipeDirection\r\n          });\r\n        }\r\n        data.startTranslate = swiper.getTranslate();\r\n        swiper.setTransition(0);\r\n        if (swiper.animating) {\r\n          const evt = new window.CustomEvent('transitionend', {\r\n            bubbles: true,\r\n            cancelable: true\r\n          });\r\n          swiper.wrapperEl.dispatchEvent(evt);\r\n        }\r\n        data.allowMomentumBounce = false;\r\n        // Grab Cursor\r\n        if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\r\n          swiper.setGrabCursor(true);\r\n        }\r\n        swiper.emit('sliderFirstMove', e);\r\n      }\r\n      let loopFixed;\r\n      if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\r\n        // need another loop fix\r\n        swiper.loopFix({\r\n          direction: swiper.swipeDirection,\r\n          setTranslate: true\r\n        });\r\n        loopFixed = true;\r\n      }\r\n      swiper.emit('sliderMove', e);\r\n      data.isMoved = true;\r\n      data.currentTranslate = diff + data.startTranslate;\r\n      let disableParentSwiper = true;\r\n      let resistanceRatio = params.resistanceRatio;\r\n      if (params.touchReleaseOnEdges) {\r\n        resistanceRatio = 0;\r\n      }\r\n      if (diff > 0) {\r\n        if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\r\n          swiper.loopFix({\r\n            direction: 'prev',\r\n            setTranslate: true,\r\n            activeSlideIndex: 0\r\n          });\r\n        }\r\n        if (data.currentTranslate > swiper.minTranslate()) {\r\n          disableParentSwiper = false;\r\n          if (params.resistance) {\r\n            data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\r\n          }\r\n        }\r\n      } else if (diff < 0) {\r\n        if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\r\n          swiper.loopFix({\r\n            direction: 'next',\r\n            setTranslate: true,\r\n            activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\r\n          });\r\n        }\r\n        if (data.currentTranslate < swiper.maxTranslate()) {\r\n          disableParentSwiper = false;\r\n          if (params.resistance) {\r\n            data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\r\n          }\r\n        }\r\n      }\r\n      if (disableParentSwiper) {\r\n        e.preventedByNestedSwiper = true;\r\n      }\r\n\r\n      // Directions locks\r\n      if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\r\n        data.currentTranslate = data.startTranslate;\r\n      }\r\n      if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\r\n        data.currentTranslate = data.startTranslate;\r\n      }\r\n      if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\r\n        data.currentTranslate = data.startTranslate;\r\n      }\r\n\r\n      // Threshold\r\n      if (params.threshold > 0) {\r\n        if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\r\n          if (!data.allowThresholdMove) {\r\n            data.allowThresholdMove = true;\r\n            touches.startX = touches.currentX;\r\n            touches.startY = touches.currentY;\r\n            data.currentTranslate = data.startTranslate;\r\n            touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\r\n            return;\r\n          }\r\n        } else {\r\n          data.currentTranslate = data.startTranslate;\r\n          return;\r\n        }\r\n      }\r\n      if (!params.followFinger || params.cssMode) return;\r\n\r\n      // Update active index in free mode\r\n      if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\r\n        swiper.updateActiveIndex();\r\n        swiper.updateSlidesClasses();\r\n      }\r\n      if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\r\n        swiper.freeMode.onTouchMove();\r\n      }\r\n      // Update progress\r\n      swiper.updateProgress(data.currentTranslate);\r\n      // Update translate\r\n      swiper.setTranslate(data.currentTranslate);\r\n    }\r\n\r\n    function onTouchEnd(event) {\r\n      const swiper = this;\r\n      const data = swiper.touchEventsData;\r\n      const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\r\n      if (pointerIndex >= 0) {\r\n        data.evCache.splice(pointerIndex, 1);\r\n      }\r\n      if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\r\n        const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\r\n        if (!proceed) {\r\n          return;\r\n        }\r\n      }\r\n      const {\r\n        params,\r\n        touches,\r\n        rtlTranslate: rtl,\r\n        slidesGrid,\r\n        enabled\r\n      } = swiper;\r\n      if (!enabled) return;\r\n      if (!params.simulateTouch && event.pointerType === 'mouse') return;\r\n      let e = event;\r\n      if (e.originalEvent) e = e.originalEvent;\r\n      if (data.allowTouchCallbacks) {\r\n        swiper.emit('touchEnd', e);\r\n      }\r\n      data.allowTouchCallbacks = false;\r\n      if (!data.isTouched) {\r\n        if (data.isMoved && params.grabCursor) {\r\n          swiper.setGrabCursor(false);\r\n        }\r\n        data.isMoved = false;\r\n        data.startMoving = false;\r\n        return;\r\n      }\r\n      // Return Grab Cursor\r\n      if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\r\n        swiper.setGrabCursor(false);\r\n      }\r\n\r\n      // Time diff\r\n      const touchEndTime = now();\r\n      const timeDiff = touchEndTime - data.touchStartTime;\r\n\r\n      // Tap, doubleTap, Click\r\n      if (swiper.allowClick) {\r\n        const pathTree = e.path || e.composedPath && e.composedPath();\r\n        swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\r\n        swiper.emit('tap click', e);\r\n        if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\r\n          swiper.emit('doubleTap doubleClick', e);\r\n        }\r\n      }\r\n      data.lastClickTime = now();\r\n      nextTick(() => {\r\n        if (!swiper.destroyed) swiper.allowClick = true;\r\n      });\r\n      if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\r\n        data.isTouched = false;\r\n        data.isMoved = false;\r\n        data.startMoving = false;\r\n        return;\r\n      }\r\n      data.isTouched = false;\r\n      data.isMoved = false;\r\n      data.startMoving = false;\r\n      let currentPos;\r\n      if (params.followFinger) {\r\n        currentPos = rtl ? swiper.translate : -swiper.translate;\r\n      } else {\r\n        currentPos = -data.currentTranslate;\r\n      }\r\n      if (params.cssMode) {\r\n        return;\r\n      }\r\n      if (swiper.params.freeMode && params.freeMode.enabled) {\r\n        swiper.freeMode.onTouchEnd({\r\n          currentPos\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Find current slide\r\n      let stopIndex = 0;\r\n      let groupSize = swiper.slidesSizesGrid[0];\r\n      for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\r\n        const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\r\n        if (typeof slidesGrid[i + increment] !== 'undefined') {\r\n          if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\r\n            stopIndex = i;\r\n            groupSize = slidesGrid[i + increment] - slidesGrid[i];\r\n          }\r\n        } else if (currentPos >= slidesGrid[i]) {\r\n          stopIndex = i;\r\n          groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\r\n        }\r\n      }\r\n      let rewindFirstIndex = null;\r\n      let rewindLastIndex = null;\r\n      if (params.rewind) {\r\n        if (swiper.isBeginning) {\r\n          rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\r\n        } else if (swiper.isEnd) {\r\n          rewindFirstIndex = 0;\r\n        }\r\n      }\r\n      // Find current slide size\r\n      const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\r\n      const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\r\n      if (timeDiff > params.longSwipesMs) {\r\n        // Long touches\r\n        if (!params.longSwipes) {\r\n          swiper.slideTo(swiper.activeIndex);\r\n          return;\r\n        }\r\n        if (swiper.swipeDirection === 'next') {\r\n          if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\r\n        }\r\n        if (swiper.swipeDirection === 'prev') {\r\n          if (ratio > 1 - params.longSwipesRatio) {\r\n            swiper.slideTo(stopIndex + increment);\r\n          } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\r\n            swiper.slideTo(rewindLastIndex);\r\n          } else {\r\n            swiper.slideTo(stopIndex);\r\n          }\r\n        }\r\n      } else {\r\n        // Short swipes\r\n        if (!params.shortSwipes) {\r\n          swiper.slideTo(swiper.activeIndex);\r\n          return;\r\n        }\r\n        const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\r\n        if (!isNavButtonTarget) {\r\n          if (swiper.swipeDirection === 'next') {\r\n            swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\r\n          }\r\n          if (swiper.swipeDirection === 'prev') {\r\n            swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\r\n          }\r\n        } else if (e.target === swiper.navigation.nextEl) {\r\n          swiper.slideTo(stopIndex + increment);\r\n        } else {\r\n          swiper.slideTo(stopIndex);\r\n        }\r\n      }\r\n    }\r\n\r\n    function onResize() {\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        el\r\n      } = swiper;\r\n      if (el && el.offsetWidth === 0) return;\r\n\r\n      // Breakpoints\r\n      if (params.breakpoints) {\r\n        swiper.setBreakpoint();\r\n      }\r\n\r\n      // Save locks\r\n      const {\r\n        allowSlideNext,\r\n        allowSlidePrev,\r\n        snapGrid\r\n      } = swiper;\r\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\r\n\r\n      // Disable locks on resize\r\n      swiper.allowSlideNext = true;\r\n      swiper.allowSlidePrev = true;\r\n      swiper.updateSize();\r\n      swiper.updateSlides();\r\n      swiper.updateSlidesClasses();\r\n      const isVirtualLoop = isVirtual && params.loop;\r\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\r\n        swiper.slideTo(swiper.slides.length - 1, 0, false, true);\r\n      } else {\r\n        if (swiper.params.loop && !isVirtual) {\r\n          swiper.slideToLoop(swiper.realIndex, 0, false, true);\r\n        } else {\r\n          swiper.slideTo(swiper.activeIndex, 0, false, true);\r\n        }\r\n      }\r\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\r\n        clearTimeout(swiper.autoplay.resizeTimeout);\r\n        swiper.autoplay.resizeTimeout = setTimeout(() => {\r\n          if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\r\n            swiper.autoplay.resume();\r\n          }\r\n        }, 500);\r\n      }\r\n      // Return locks after resize\r\n      swiper.allowSlidePrev = allowSlidePrev;\r\n      swiper.allowSlideNext = allowSlideNext;\r\n      if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\r\n        swiper.checkOverflow();\r\n      }\r\n    }\r\n\r\n    function onClick(e) {\r\n      const swiper = this;\r\n      if (!swiper.enabled) return;\r\n      if (!swiper.allowClick) {\r\n        if (swiper.params.preventClicks) e.preventDefault();\r\n        if (swiper.params.preventClicksPropagation && swiper.animating) {\r\n          e.stopPropagation();\r\n          e.stopImmediatePropagation();\r\n        }\r\n      }\r\n    }\r\n\r\n    function onScroll() {\r\n      const swiper = this;\r\n      const {\r\n        wrapperEl,\r\n        rtlTranslate,\r\n        enabled\r\n      } = swiper;\r\n      if (!enabled) return;\r\n      swiper.previousTranslate = swiper.translate;\r\n      if (swiper.isHorizontal()) {\r\n        swiper.translate = -wrapperEl.scrollLeft;\r\n      } else {\r\n        swiper.translate = -wrapperEl.scrollTop;\r\n      }\r\n      // eslint-disable-next-line\r\n      if (swiper.translate === 0) swiper.translate = 0;\r\n      swiper.updateActiveIndex();\r\n      swiper.updateSlidesClasses();\r\n      let newProgress;\r\n      const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\r\n      if (translatesDiff === 0) {\r\n        newProgress = 0;\r\n      } else {\r\n        newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\r\n      }\r\n      if (newProgress !== swiper.progress) {\r\n        swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\r\n      }\r\n      swiper.emit('setTranslate', swiper.translate, false);\r\n    }\r\n\r\n    function onLoad(e) {\r\n      const swiper = this;\r\n      processLazyPreloader(swiper, e.target);\r\n      if (swiper.params.cssMode || swiper.params.slidesPerView !== 'auto' && !swiper.params.autoHeight) {\r\n        return;\r\n      }\r\n      swiper.update();\r\n    }\r\n\r\n    let dummyEventAttached = false;\r\n    function dummyEventListener() {}\r\n    const events = (swiper, method) => {\r\n      const document = getDocument();\r\n      const {\r\n        params,\r\n        el,\r\n        wrapperEl,\r\n        device\r\n      } = swiper;\r\n      const capture = !!params.nested;\r\n      const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\r\n      const swiperMethod = method;\r\n\r\n      // Touch Events\r\n      el[domMethod]('pointerdown', swiper.onTouchStart, {\r\n        passive: false\r\n      });\r\n      document[domMethod]('pointermove', swiper.onTouchMove, {\r\n        passive: false,\r\n        capture\r\n      });\r\n      document[domMethod]('pointerup', swiper.onTouchEnd, {\r\n        passive: true\r\n      });\r\n      document[domMethod]('pointercancel', swiper.onTouchEnd, {\r\n        passive: true\r\n      });\r\n      document[domMethod]('pointerout', swiper.onTouchEnd, {\r\n        passive: true\r\n      });\r\n      document[domMethod]('pointerleave', swiper.onTouchEnd, {\r\n        passive: true\r\n      });\r\n\r\n      // Prevent Links Clicks\r\n      if (params.preventClicks || params.preventClicksPropagation) {\r\n        el[domMethod]('click', swiper.onClick, true);\r\n      }\r\n      if (params.cssMode) {\r\n        wrapperEl[domMethod]('scroll', swiper.onScroll);\r\n      }\r\n\r\n      // Resize handler\r\n      if (params.updateOnWindowResize) {\r\n        swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\r\n      } else {\r\n        swiper[swiperMethod]('observerUpdate', onResize, true);\r\n      }\r\n\r\n      // Images loader\r\n      el[domMethod]('load', swiper.onLoad, {\r\n        capture: true\r\n      });\r\n    };\r\n    function attachEvents() {\r\n      const swiper = this;\r\n      const document = getDocument();\r\n      const {\r\n        params\r\n      } = swiper;\r\n      swiper.onTouchStart = onTouchStart.bind(swiper);\r\n      swiper.onTouchMove = onTouchMove.bind(swiper);\r\n      swiper.onTouchEnd = onTouchEnd.bind(swiper);\r\n      if (params.cssMode) {\r\n        swiper.onScroll = onScroll.bind(swiper);\r\n      }\r\n      swiper.onClick = onClick.bind(swiper);\r\n      swiper.onLoad = onLoad.bind(swiper);\r\n      if (!dummyEventAttached) {\r\n        document.addEventListener('touchstart', dummyEventListener);\r\n        dummyEventAttached = true;\r\n      }\r\n      events(swiper, 'on');\r\n    }\r\n    function detachEvents() {\r\n      const swiper = this;\r\n      events(swiper, 'off');\r\n    }\r\n    var events$1 = {\r\n      attachEvents,\r\n      detachEvents\r\n    };\r\n\r\n    const isGridEnabled = (swiper, params) => {\r\n      return swiper.grid && params.grid && params.grid.rows > 1;\r\n    };\r\n    function setBreakpoint() {\r\n      const swiper = this;\r\n      const {\r\n        realIndex,\r\n        initialized,\r\n        params,\r\n        el\r\n      } = swiper;\r\n      const breakpoints = params.breakpoints;\r\n      if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\r\n\r\n      // Get breakpoint for window width and update parameters\r\n      const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\r\n      if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\r\n      const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\r\n      const breakpointParams = breakpointOnlyParams || swiper.originalParams;\r\n      const wasMultiRow = isGridEnabled(swiper, params);\r\n      const isMultiRow = isGridEnabled(swiper, breakpointParams);\r\n      const wasEnabled = params.enabled;\r\n      if (wasMultiRow && !isMultiRow) {\r\n        el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\r\n        swiper.emitContainerClasses();\r\n      } else if (!wasMultiRow && isMultiRow) {\r\n        el.classList.add(`${params.containerModifierClass}grid`);\r\n        if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\r\n          el.classList.add(`${params.containerModifierClass}grid-column`);\r\n        }\r\n        swiper.emitContainerClasses();\r\n      }\r\n\r\n      // Toggle navigation, pagination, scrollbar\r\n      ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\r\n        const wasModuleEnabled = params[prop] && params[prop].enabled;\r\n        const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\r\n        if (wasModuleEnabled && !isModuleEnabled) {\r\n          swiper[prop].disable();\r\n        }\r\n        if (!wasModuleEnabled && isModuleEnabled) {\r\n          swiper[prop].enable();\r\n        }\r\n      });\r\n      const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\r\n      const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\r\n      if (directionChanged && initialized) {\r\n        swiper.changeDirection();\r\n      }\r\n      extend(swiper.params, breakpointParams);\r\n      const isEnabled = swiper.params.enabled;\r\n      Object.assign(swiper, {\r\n        allowTouchMove: swiper.params.allowTouchMove,\r\n        allowSlideNext: swiper.params.allowSlideNext,\r\n        allowSlidePrev: swiper.params.allowSlidePrev\r\n      });\r\n      if (wasEnabled && !isEnabled) {\r\n        swiper.disable();\r\n      } else if (!wasEnabled && isEnabled) {\r\n        swiper.enable();\r\n      }\r\n      swiper.currentBreakpoint = breakpoint;\r\n      swiper.emit('_beforeBreakpoint', breakpointParams);\r\n      if (needsReLoop && initialized) {\r\n        swiper.loopDestroy();\r\n        swiper.loopCreate(realIndex);\r\n        swiper.updateSlides();\r\n      }\r\n      swiper.emit('breakpoint', breakpointParams);\r\n    }\r\n\r\n    function getBreakpoint(breakpoints, base, containerEl) {\r\n      if (base === void 0) {\r\n        base = 'window';\r\n      }\r\n      if (!breakpoints || base === 'container' && !containerEl) return undefined;\r\n      let breakpoint = false;\r\n      const window = getWindow();\r\n      const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\r\n      const points = Object.keys(breakpoints).map(point => {\r\n        if (typeof point === 'string' && point.indexOf('@') === 0) {\r\n          const minRatio = parseFloat(point.substr(1));\r\n          const value = currentHeight * minRatio;\r\n          return {\r\n            value,\r\n            point\r\n          };\r\n        }\r\n        return {\r\n          value: point,\r\n          point\r\n        };\r\n      });\r\n      points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\r\n      for (let i = 0; i < points.length; i += 1) {\r\n        const {\r\n          point,\r\n          value\r\n        } = points[i];\r\n        if (base === 'window') {\r\n          if (window.matchMedia(`(min-width: ${value}px)`).matches) {\r\n            breakpoint = point;\r\n          }\r\n        } else if (value <= containerEl.clientWidth) {\r\n          breakpoint = point;\r\n        }\r\n      }\r\n      return breakpoint || 'max';\r\n    }\r\n\r\n    var breakpoints = {\r\n      setBreakpoint,\r\n      getBreakpoint\r\n    };\r\n\r\n    function prepareClasses(entries, prefix) {\r\n      const resultClasses = [];\r\n      entries.forEach(item => {\r\n        if (typeof item === 'object') {\r\n          Object.keys(item).forEach(classNames => {\r\n            if (item[classNames]) {\r\n              resultClasses.push(prefix + classNames);\r\n            }\r\n          });\r\n        } else if (typeof item === 'string') {\r\n          resultClasses.push(prefix + item);\r\n        }\r\n      });\r\n      return resultClasses;\r\n    }\r\n    function addClasses() {\r\n      const swiper = this;\r\n      const {\r\n        classNames,\r\n        params,\r\n        rtl,\r\n        el,\r\n        device\r\n      } = swiper;\r\n      // prettier-ignore\r\n      const suffixes = prepareClasses(['initialized', params.direction, {\r\n        'free-mode': swiper.params.freeMode && params.freeMode.enabled\r\n      }, {\r\n        'autoheight': params.autoHeight\r\n      }, {\r\n        'rtl': rtl\r\n      }, {\r\n        'grid': params.grid && params.grid.rows > 1\r\n      }, {\r\n        'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\r\n      }, {\r\n        'android': device.android\r\n      }, {\r\n        'ios': device.ios\r\n      }, {\r\n        'css-mode': params.cssMode\r\n      }, {\r\n        'centered': params.cssMode && params.centeredSlides\r\n      }, {\r\n        'watch-progress': params.watchSlidesProgress\r\n      }], params.containerModifierClass);\r\n      classNames.push(...suffixes);\r\n      el.classList.add(...classNames);\r\n      swiper.emitContainerClasses();\r\n    }\r\n\r\n    function removeClasses() {\r\n      const swiper = this;\r\n      const {\r\n        el,\r\n        classNames\r\n      } = swiper;\r\n      el.classList.remove(...classNames);\r\n      swiper.emitContainerClasses();\r\n    }\r\n\r\n    var classes = {\r\n      addClasses,\r\n      removeClasses\r\n    };\r\n\r\n    function checkOverflow() {\r\n      const swiper = this;\r\n      const {\r\n        isLocked: wasLocked,\r\n        params\r\n      } = swiper;\r\n      const {\r\n        slidesOffsetBefore\r\n      } = params;\r\n      if (slidesOffsetBefore) {\r\n        const lastSlideIndex = swiper.slides.length - 1;\r\n        const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\r\n        swiper.isLocked = swiper.size > lastSlideRightEdge;\r\n      } else {\r\n        swiper.isLocked = swiper.snapGrid.length === 1;\r\n      }\r\n      if (params.allowSlideNext === true) {\r\n        swiper.allowSlideNext = !swiper.isLocked;\r\n      }\r\n      if (params.allowSlidePrev === true) {\r\n        swiper.allowSlidePrev = !swiper.isLocked;\r\n      }\r\n      if (wasLocked && wasLocked !== swiper.isLocked) {\r\n        swiper.isEnd = false;\r\n      }\r\n      if (wasLocked !== swiper.isLocked) {\r\n        swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\r\n      }\r\n    }\r\n    var checkOverflow$1 = {\r\n      checkOverflow\r\n    };\r\n\r\n    var defaults = {\r\n      init: true,\r\n      direction: 'horizontal',\r\n      oneWayMovement: false,\r\n      touchEventsTarget: 'wrapper',\r\n      initialSlide: 0,\r\n      speed: 300,\r\n      cssMode: false,\r\n      updateOnWindowResize: true,\r\n      resizeObserver: true,\r\n      nested: false,\r\n      createElements: false,\r\n      enabled: true,\r\n      focusableElements: 'input, select, option, textarea, button, video, label',\r\n      // Overrides\r\n      width: null,\r\n      height: null,\r\n      //\r\n      preventInteractionOnTransition: false,\r\n      // ssr\r\n      userAgent: null,\r\n      url: null,\r\n      // To support iOS's swipe-to-go-back gesture (when being used in-app).\r\n      edgeSwipeDetection: false,\r\n      edgeSwipeThreshold: 20,\r\n      // Autoheight\r\n      autoHeight: false,\r\n      // Set wrapper width\r\n      setWrapperSize: false,\r\n      // Virtual Translate\r\n      virtualTranslate: false,\r\n      // Effects\r\n      effect: 'slide',\r\n      // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\r\n\r\n      // Breakpoints\r\n      breakpoints: undefined,\r\n      breakpointsBase: 'window',\r\n      // Slides grid\r\n      spaceBetween: 0,\r\n      slidesPerView: 1,\r\n      slidesPerGroup: 1,\r\n      slidesPerGroupSkip: 0,\r\n      slidesPerGroupAuto: false,\r\n      centeredSlides: false,\r\n      centeredSlidesBounds: false,\r\n      slidesOffsetBefore: 0,\r\n      // in px\r\n      slidesOffsetAfter: 0,\r\n      // in px\r\n      normalizeSlideIndex: true,\r\n      centerInsufficientSlides: false,\r\n      // Disable swiper and hide navigation when container not overflow\r\n      watchOverflow: true,\r\n      // Round length\r\n      roundLengths: false,\r\n      // Touches\r\n      touchRatio: 1,\r\n      touchAngle: 45,\r\n      simulateTouch: true,\r\n      shortSwipes: true,\r\n      longSwipes: true,\r\n      longSwipesRatio: 0.5,\r\n      longSwipesMs: 300,\r\n      followFinger: true,\r\n      allowTouchMove: true,\r\n      threshold: 5,\r\n      touchMoveStopPropagation: false,\r\n      touchStartPreventDefault: true,\r\n      touchStartForcePreventDefault: false,\r\n      touchReleaseOnEdges: false,\r\n      // Unique Navigation Elements\r\n      uniqueNavElements: true,\r\n      // Resistance\r\n      resistance: true,\r\n      resistanceRatio: 0.85,\r\n      // Progress\r\n      watchSlidesProgress: false,\r\n      // Cursor\r\n      grabCursor: false,\r\n      // Clicks\r\n      preventClicks: true,\r\n      preventClicksPropagation: true,\r\n      slideToClickedSlide: false,\r\n      // loop\r\n      loop: false,\r\n      loopedSlides: null,\r\n      loopPreventsSliding: true,\r\n      // rewind\r\n      rewind: false,\r\n      // Swiping/no swiping\r\n      allowSlidePrev: true,\r\n      allowSlideNext: true,\r\n      swipeHandler: null,\r\n      // '.swipe-handler',\r\n      noSwiping: true,\r\n      noSwipingClass: 'swiper-no-swiping',\r\n      noSwipingSelector: null,\r\n      // Passive Listeners\r\n      passiveListeners: true,\r\n      maxBackfaceHiddenSlides: 10,\r\n      // NS\r\n      containerModifierClass: 'swiper-',\r\n      // NEW\r\n      slideClass: 'swiper-slide',\r\n      slideActiveClass: 'swiper-slide-active',\r\n      slideVisibleClass: 'swiper-slide-visible',\r\n      slideNextClass: 'swiper-slide-next',\r\n      slidePrevClass: 'swiper-slide-prev',\r\n      wrapperClass: 'swiper-wrapper',\r\n      lazyPreloaderClass: 'swiper-lazy-preloader',\r\n      lazyPreloadPrevNext: 0,\r\n      // Callbacks\r\n      runCallbacksOnInit: true,\r\n      // Internals\r\n      _emitClasses: false\r\n    };\r\n\r\n    function moduleExtendParams(params, allModulesParams) {\r\n      return function extendParams(obj) {\r\n        if (obj === void 0) {\r\n          obj = {};\r\n        }\r\n        const moduleParamName = Object.keys(obj)[0];\r\n        const moduleParams = obj[moduleParamName];\r\n        if (typeof moduleParams !== 'object' || moduleParams === null) {\r\n          extend(allModulesParams, obj);\r\n          return;\r\n        }\r\n        if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\r\n          params[moduleParamName] = {\r\n            auto: true\r\n          };\r\n        }\r\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) {\r\n          extend(allModulesParams, obj);\r\n          return;\r\n        }\r\n        if (params[moduleParamName] === true) {\r\n          params[moduleParamName] = {\r\n            enabled: true\r\n          };\r\n        }\r\n        if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\r\n          params[moduleParamName].enabled = true;\r\n        }\r\n        if (!params[moduleParamName]) params[moduleParamName] = {\r\n          enabled: false\r\n        };\r\n        extend(allModulesParams, obj);\r\n      };\r\n    }\r\n\r\n    /* eslint no-param-reassign: \"off\" */\r\n    const prototypes = {\r\n      eventsEmitter,\r\n      update,\r\n      translate,\r\n      transition,\r\n      slide,\r\n      loop,\r\n      grabCursor,\r\n      events: events$1,\r\n      breakpoints,\r\n      checkOverflow: checkOverflow$1,\r\n      classes\r\n    };\r\n    const extendedDefaults = {};\r\n    class Swiper {\r\n      constructor() {\r\n        let el;\r\n        let params;\r\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n          args[_key] = arguments[_key];\r\n        }\r\n        if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\r\n          params = args[0];\r\n        } else {\r\n          [el, params] = args;\r\n        }\r\n        if (!params) params = {};\r\n        params = extend({}, params);\r\n        if (el && !params.el) params.el = el;\r\n        const document = getDocument();\r\n        if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\r\n          const swipers = [];\r\n          document.querySelectorAll(params.el).forEach(containerEl => {\r\n            const newParams = extend({}, params, {\r\n              el: containerEl\r\n            });\r\n            swipers.push(new Swiper(newParams));\r\n          });\r\n          // eslint-disable-next-line no-constructor-return\r\n          return swipers;\r\n        }\r\n\r\n        // Swiper Instance\r\n        const swiper = this;\r\n        swiper.__swiper__ = true;\r\n        swiper.support = getSupport();\r\n        swiper.device = getDevice({\r\n          userAgent: params.userAgent\r\n        });\r\n        swiper.browser = getBrowser();\r\n        swiper.eventsListeners = {};\r\n        swiper.eventsAnyListeners = [];\r\n        swiper.modules = [...swiper.__modules__];\r\n        if (params.modules && Array.isArray(params.modules)) {\r\n          swiper.modules.push(...params.modules);\r\n        }\r\n        const allModulesParams = {};\r\n        swiper.modules.forEach(mod => {\r\n          mod({\r\n            params,\r\n            swiper,\r\n            extendParams: moduleExtendParams(params, allModulesParams),\r\n            on: swiper.on.bind(swiper),\r\n            once: swiper.once.bind(swiper),\r\n            off: swiper.off.bind(swiper),\r\n            emit: swiper.emit.bind(swiper)\r\n          });\r\n        });\r\n\r\n        // Extend defaults with modules params\r\n        const swiperParams = extend({}, defaults, allModulesParams);\r\n\r\n        // Extend defaults with passed params\r\n        swiper.params = extend({}, swiperParams, extendedDefaults, params);\r\n        swiper.originalParams = extend({}, swiper.params);\r\n        swiper.passedParams = extend({}, params);\r\n\r\n        // add event listeners\r\n        if (swiper.params && swiper.params.on) {\r\n          Object.keys(swiper.params.on).forEach(eventName => {\r\n            swiper.on(eventName, swiper.params.on[eventName]);\r\n          });\r\n        }\r\n        if (swiper.params && swiper.params.onAny) {\r\n          swiper.onAny(swiper.params.onAny);\r\n        }\r\n\r\n        // Extend Swiper\r\n        Object.assign(swiper, {\r\n          enabled: swiper.params.enabled,\r\n          el,\r\n          // Classes\r\n          classNames: [],\r\n          // Slides\r\n          slides: [],\r\n          slidesGrid: [],\r\n          snapGrid: [],\r\n          slidesSizesGrid: [],\r\n          // isDirection\r\n          isHorizontal() {\r\n            return swiper.params.direction === 'horizontal';\r\n          },\r\n          isVertical() {\r\n            return swiper.params.direction === 'vertical';\r\n          },\r\n          // Indexes\r\n          activeIndex: 0,\r\n          realIndex: 0,\r\n          //\r\n          isBeginning: true,\r\n          isEnd: false,\r\n          // Props\r\n          translate: 0,\r\n          previousTranslate: 0,\r\n          progress: 0,\r\n          velocity: 0,\r\n          animating: false,\r\n          cssOverflowAdjustment() {\r\n            // Returns 0 unless `translate` is > 2**23\r\n            // Should be subtracted from css values to prevent overflow\r\n            return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\r\n          },\r\n          // Locks\r\n          allowSlideNext: swiper.params.allowSlideNext,\r\n          allowSlidePrev: swiper.params.allowSlidePrev,\r\n          // Touch Events\r\n          touchEventsData: {\r\n            isTouched: undefined,\r\n            isMoved: undefined,\r\n            allowTouchCallbacks: undefined,\r\n            touchStartTime: undefined,\r\n            isScrolling: undefined,\r\n            currentTranslate: undefined,\r\n            startTranslate: undefined,\r\n            allowThresholdMove: undefined,\r\n            // Form elements to match\r\n            focusableElements: swiper.params.focusableElements,\r\n            // Last click time\r\n            lastClickTime: 0,\r\n            clickTimeout: undefined,\r\n            // Velocities\r\n            velocities: [],\r\n            allowMomentumBounce: undefined,\r\n            startMoving: undefined,\r\n            evCache: []\r\n          },\r\n          // Clicks\r\n          allowClick: true,\r\n          // Touches\r\n          allowTouchMove: swiper.params.allowTouchMove,\r\n          touches: {\r\n            startX: 0,\r\n            startY: 0,\r\n            currentX: 0,\r\n            currentY: 0,\r\n            diff: 0\r\n          },\r\n          // Images\r\n          imagesToLoad: [],\r\n          imagesLoaded: 0\r\n        });\r\n        swiper.emit('_swiper');\r\n\r\n        // Init\r\n        if (swiper.params.init) {\r\n          swiper.init();\r\n        }\r\n\r\n        // Return app instance\r\n        // eslint-disable-next-line no-constructor-return\r\n        return swiper;\r\n      }\r\n      getSlideIndex(slideEl) {\r\n        const {\r\n          slidesEl,\r\n          params\r\n        } = this;\r\n        const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\r\n        const firstSlideIndex = elementIndex(slides[0]);\r\n        return elementIndex(slideEl) - firstSlideIndex;\r\n      }\r\n      getSlideIndexByData(index) {\r\n        return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\r\n      }\r\n      recalcSlides() {\r\n        const swiper = this;\r\n        const {\r\n          slidesEl,\r\n          params\r\n        } = swiper;\r\n        swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\r\n      }\r\n      enable() {\r\n        const swiper = this;\r\n        if (swiper.enabled) return;\r\n        swiper.enabled = true;\r\n        if (swiper.params.grabCursor) {\r\n          swiper.setGrabCursor();\r\n        }\r\n        swiper.emit('enable');\r\n      }\r\n      disable() {\r\n        const swiper = this;\r\n        if (!swiper.enabled) return;\r\n        swiper.enabled = false;\r\n        if (swiper.params.grabCursor) {\r\n          swiper.unsetGrabCursor();\r\n        }\r\n        swiper.emit('disable');\r\n      }\r\n      setProgress(progress, speed) {\r\n        const swiper = this;\r\n        progress = Math.min(Math.max(progress, 0), 1);\r\n        const min = swiper.minTranslate();\r\n        const max = swiper.maxTranslate();\r\n        const current = (max - min) * progress + min;\r\n        swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\r\n        swiper.updateActiveIndex();\r\n        swiper.updateSlidesClasses();\r\n      }\r\n      emitContainerClasses() {\r\n        const swiper = this;\r\n        if (!swiper.params._emitClasses || !swiper.el) return;\r\n        const cls = swiper.el.className.split(' ').filter(className => {\r\n          return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\r\n        });\r\n        swiper.emit('_containerClasses', cls.join(' '));\r\n      }\r\n      getSlideClasses(slideEl) {\r\n        const swiper = this;\r\n        if (swiper.destroyed) return '';\r\n        return slideEl.className.split(' ').filter(className => {\r\n          return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\r\n        }).join(' ');\r\n      }\r\n      emitSlidesClasses() {\r\n        const swiper = this;\r\n        if (!swiper.params._emitClasses || !swiper.el) return;\r\n        const updates = [];\r\n        swiper.slides.forEach(slideEl => {\r\n          const classNames = swiper.getSlideClasses(slideEl);\r\n          updates.push({\r\n            slideEl,\r\n            classNames\r\n          });\r\n          swiper.emit('_slideClass', slideEl, classNames);\r\n        });\r\n        swiper.emit('_slideClasses', updates);\r\n      }\r\n      slidesPerViewDynamic(view, exact) {\r\n        if (view === void 0) {\r\n          view = 'current';\r\n        }\r\n        if (exact === void 0) {\r\n          exact = false;\r\n        }\r\n        const swiper = this;\r\n        const {\r\n          params,\r\n          slides,\r\n          slidesGrid,\r\n          slidesSizesGrid,\r\n          size: swiperSize,\r\n          activeIndex\r\n        } = swiper;\r\n        let spv = 1;\r\n        if (params.centeredSlides) {\r\n          let slideSize = slides[activeIndex].swiperSlideSize;\r\n          let breakLoop;\r\n          for (let i = activeIndex + 1; i < slides.length; i += 1) {\r\n            if (slides[i] && !breakLoop) {\r\n              slideSize += slides[i].swiperSlideSize;\r\n              spv += 1;\r\n              if (slideSize > swiperSize) breakLoop = true;\r\n            }\r\n          }\r\n          for (let i = activeIndex - 1; i >= 0; i -= 1) {\r\n            if (slides[i] && !breakLoop) {\r\n              slideSize += slides[i].swiperSlideSize;\r\n              spv += 1;\r\n              if (slideSize > swiperSize) breakLoop = true;\r\n            }\r\n          }\r\n        } else {\r\n          // eslint-disable-next-line\r\n          if (view === 'current') {\r\n            for (let i = activeIndex + 1; i < slides.length; i += 1) {\r\n              const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\r\n              if (slideInView) {\r\n                spv += 1;\r\n              }\r\n            }\r\n          } else {\r\n            // previous\r\n            for (let i = activeIndex - 1; i >= 0; i -= 1) {\r\n              const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\r\n              if (slideInView) {\r\n                spv += 1;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        return spv;\r\n      }\r\n      update() {\r\n        const swiper = this;\r\n        if (!swiper || swiper.destroyed) return;\r\n        const {\r\n          snapGrid,\r\n          params\r\n        } = swiper;\r\n        // Breakpoints\r\n        if (params.breakpoints) {\r\n          swiper.setBreakpoint();\r\n        }\r\n        [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\r\n          if (imageEl.complete) {\r\n            processLazyPreloader(swiper, imageEl);\r\n          }\r\n        });\r\n        swiper.updateSize();\r\n        swiper.updateSlides();\r\n        swiper.updateProgress();\r\n        swiper.updateSlidesClasses();\r\n        function setTranslate() {\r\n          const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\r\n          const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\r\n          swiper.setTranslate(newTranslate);\r\n          swiper.updateActiveIndex();\r\n          swiper.updateSlidesClasses();\r\n        }\r\n        let translated;\r\n        if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\r\n          setTranslate();\r\n          if (swiper.params.autoHeight) {\r\n            swiper.updateAutoHeight();\r\n          }\r\n        } else {\r\n          if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\r\n            const slides = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\r\n            translated = swiper.slideTo(slides.length - 1, 0, false, true);\r\n          } else {\r\n            translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\r\n          }\r\n          if (!translated) {\r\n            setTranslate();\r\n          }\r\n        }\r\n        if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\r\n          swiper.checkOverflow();\r\n        }\r\n        swiper.emit('update');\r\n      }\r\n      changeDirection(newDirection, needUpdate) {\r\n        if (needUpdate === void 0) {\r\n          needUpdate = true;\r\n        }\r\n        const swiper = this;\r\n        const currentDirection = swiper.params.direction;\r\n        if (!newDirection) {\r\n          // eslint-disable-next-line\r\n          newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\r\n        }\r\n        if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\r\n          return swiper;\r\n        }\r\n        swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\r\n        swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\r\n        swiper.emitContainerClasses();\r\n        swiper.params.direction = newDirection;\r\n        swiper.slides.forEach(slideEl => {\r\n          if (newDirection === 'vertical') {\r\n            slideEl.style.width = '';\r\n          } else {\r\n            slideEl.style.height = '';\r\n          }\r\n        });\r\n        swiper.emit('changeDirection');\r\n        if (needUpdate) swiper.update();\r\n        return swiper;\r\n      }\r\n      changeLanguageDirection(direction) {\r\n        const swiper = this;\r\n        if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\r\n        swiper.rtl = direction === 'rtl';\r\n        swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\r\n        if (swiper.rtl) {\r\n          swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\r\n          swiper.el.dir = 'rtl';\r\n        } else {\r\n          swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\r\n          swiper.el.dir = 'ltr';\r\n        }\r\n        swiper.update();\r\n      }\r\n      mount(element) {\r\n        const swiper = this;\r\n        if (swiper.mounted) return true;\r\n\r\n        // Find el\r\n        let el = element || swiper.params.el;\r\n        if (typeof el === 'string') {\r\n          el = document.querySelector(el);\r\n        }\r\n        if (!el) {\r\n          return false;\r\n        }\r\n        el.swiper = swiper;\r\n        if (el.shadowEl) {\r\n          swiper.isElement = true;\r\n        }\r\n        const getWrapperSelector = () => {\r\n          return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\r\n        };\r\n        const getWrapper = () => {\r\n          if (el && el.shadowRoot && el.shadowRoot.querySelector) {\r\n            const res = el.shadowRoot.querySelector(getWrapperSelector());\r\n            // Children needs to return slot items\r\n            return res;\r\n          }\r\n          return elementChildren(el, getWrapperSelector())[0];\r\n        };\r\n        // Find Wrapper\r\n        let wrapperEl = getWrapper();\r\n        if (!wrapperEl && swiper.params.createElements) {\r\n          wrapperEl = createElement('div', swiper.params.wrapperClass);\r\n          el.append(wrapperEl);\r\n          elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\r\n            wrapperEl.append(slideEl);\r\n          });\r\n        }\r\n        Object.assign(swiper, {\r\n          el,\r\n          wrapperEl,\r\n          slidesEl: swiper.isElement ? el : wrapperEl,\r\n          mounted: true,\r\n          // RTL\r\n          rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\r\n          rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\r\n          wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\r\n        });\r\n        return true;\r\n      }\r\n      init(el) {\r\n        const swiper = this;\r\n        if (swiper.initialized) return swiper;\r\n        const mounted = swiper.mount(el);\r\n        if (mounted === false) return swiper;\r\n        swiper.emit('beforeInit');\r\n\r\n        // Set breakpoint\r\n        if (swiper.params.breakpoints) {\r\n          swiper.setBreakpoint();\r\n        }\r\n\r\n        // Add Classes\r\n        swiper.addClasses();\r\n\r\n        // Update size\r\n        swiper.updateSize();\r\n\r\n        // Update slides\r\n        swiper.updateSlides();\r\n        if (swiper.params.watchOverflow) {\r\n          swiper.checkOverflow();\r\n        }\r\n\r\n        // Set Grab Cursor\r\n        if (swiper.params.grabCursor && swiper.enabled) {\r\n          swiper.setGrabCursor();\r\n        }\r\n\r\n        // Slide To Initial Slide\r\n        if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\r\n          swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\r\n        } else {\r\n          swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\r\n        }\r\n\r\n        // Create loop\r\n        if (swiper.params.loop) {\r\n          swiper.loopCreate();\r\n        }\r\n\r\n        // Attach events\r\n        swiper.attachEvents();\r\n        [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\r\n          if (imageEl.complete) {\r\n            processLazyPreloader(swiper, imageEl);\r\n          } else {\r\n            imageEl.addEventListener('load', e => {\r\n              processLazyPreloader(swiper, e.target);\r\n            });\r\n          }\r\n        });\r\n        preload(swiper);\r\n\r\n        // Init Flag\r\n        swiper.initialized = true;\r\n        preload(swiper);\r\n\r\n        // Emit\r\n        swiper.emit('init');\r\n        swiper.emit('afterInit');\r\n        return swiper;\r\n      }\r\n      destroy(deleteInstance, cleanStyles) {\r\n        if (deleteInstance === void 0) {\r\n          deleteInstance = true;\r\n        }\r\n        if (cleanStyles === void 0) {\r\n          cleanStyles = true;\r\n        }\r\n        const swiper = this;\r\n        const {\r\n          params,\r\n          el,\r\n          wrapperEl,\r\n          slides\r\n        } = swiper;\r\n        if (typeof swiper.params === 'undefined' || swiper.destroyed) {\r\n          return null;\r\n        }\r\n        swiper.emit('beforeDestroy');\r\n\r\n        // Init Flag\r\n        swiper.initialized = false;\r\n\r\n        // Detach events\r\n        swiper.detachEvents();\r\n\r\n        // Destroy loop\r\n        if (params.loop) {\r\n          swiper.loopDestroy();\r\n        }\r\n\r\n        // Cleanup styles\r\n        if (cleanStyles) {\r\n          swiper.removeClasses();\r\n          el.removeAttribute('style');\r\n          wrapperEl.removeAttribute('style');\r\n          if (slides && slides.length) {\r\n            slides.forEach(slideEl => {\r\n              slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\r\n              slideEl.removeAttribute('style');\r\n              slideEl.removeAttribute('data-swiper-slide-index');\r\n            });\r\n          }\r\n        }\r\n        swiper.emit('destroy');\r\n\r\n        // Detach emitter events\r\n        Object.keys(swiper.eventsListeners).forEach(eventName => {\r\n          swiper.off(eventName);\r\n        });\r\n        if (deleteInstance !== false) {\r\n          swiper.el.swiper = null;\r\n          deleteProps(swiper);\r\n        }\r\n        swiper.destroyed = true;\r\n        return null;\r\n      }\r\n      static extendDefaults(newDefaults) {\r\n        extend(extendedDefaults, newDefaults);\r\n      }\r\n      static get extendedDefaults() {\r\n        return extendedDefaults;\r\n      }\r\n      static get defaults() {\r\n        return defaults;\r\n      }\r\n      static installModule(mod) {\r\n        if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\r\n        const modules = Swiper.prototype.__modules__;\r\n        if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\r\n          modules.push(mod);\r\n        }\r\n      }\r\n      static use(module) {\r\n        if (Array.isArray(module)) {\r\n          module.forEach(m => Swiper.installModule(m));\r\n          return Swiper;\r\n        }\r\n        Swiper.installModule(module);\r\n        return Swiper;\r\n      }\r\n    }\r\n    Object.keys(prototypes).forEach(prototypeGroup => {\r\n      Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\r\n        Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\r\n      });\r\n    });\r\n    Swiper.use([Resize, Observer]);\r\n\r\n    function Virtual(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on,\r\n        emit\r\n      } = _ref;\r\n      extendParams({\r\n        virtual: {\r\n          enabled: false,\r\n          slides: [],\r\n          cache: true,\r\n          renderSlide: null,\r\n          renderExternal: null,\r\n          renderExternalUpdate: true,\r\n          addSlidesBefore: 0,\r\n          addSlidesAfter: 0\r\n        }\r\n      });\r\n      let cssModeTimeout;\r\n      const document = getDocument();\r\n      swiper.virtual = {\r\n        cache: {},\r\n        from: undefined,\r\n        to: undefined,\r\n        slides: [],\r\n        offset: 0,\r\n        slidesGrid: []\r\n      };\r\n      const tempDOM = document.createElement('div');\r\n      function renderSlide(slide, index) {\r\n        const params = swiper.params.virtual;\r\n        if (params.cache && swiper.virtual.cache[index]) {\r\n          return swiper.virtual.cache[index];\r\n        }\r\n        // eslint-disable-next-line\r\n        let slideEl;\r\n        if (params.renderSlide) {\r\n          slideEl = params.renderSlide.call(swiper, slide, index);\r\n          if (typeof slideEl === 'string') {\r\n            tempDOM.innerHTML = slideEl;\r\n            slideEl = tempDOM.children[0];\r\n          }\r\n        } else if (swiper.isElement) {\r\n          slideEl = createElement('swiper-slide');\r\n        } else {\r\n          slideEl = createElement('div', swiper.params.slideClass);\r\n        }\r\n        slideEl.setAttribute('data-swiper-slide-index', index);\r\n        if (!params.renderSlide) {\r\n          slideEl.innerHTML = slide;\r\n        }\r\n        if (params.cache) swiper.virtual.cache[index] = slideEl;\r\n        return slideEl;\r\n      }\r\n      function update(force) {\r\n        const {\r\n          slidesPerView,\r\n          slidesPerGroup,\r\n          centeredSlides,\r\n          loop: isLoop\r\n        } = swiper.params;\r\n        const {\r\n          addSlidesBefore,\r\n          addSlidesAfter\r\n        } = swiper.params.virtual;\r\n        const {\r\n          from: previousFrom,\r\n          to: previousTo,\r\n          slides,\r\n          slidesGrid: previousSlidesGrid,\r\n          offset: previousOffset\r\n        } = swiper.virtual;\r\n        if (!swiper.params.cssMode) {\r\n          swiper.updateActiveIndex();\r\n        }\r\n        const activeIndex = swiper.activeIndex || 0;\r\n        let offsetProp;\r\n        if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\r\n        let slidesAfter;\r\n        let slidesBefore;\r\n        if (centeredSlides) {\r\n          slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\r\n          slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\r\n        } else {\r\n          slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\r\n          slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\r\n        }\r\n        let from = activeIndex - slidesBefore;\r\n        let to = activeIndex + slidesAfter;\r\n        if (!isLoop) {\r\n          from = Math.max(from, 0);\r\n          to = Math.min(to, slides.length - 1);\r\n        }\r\n        let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\r\n        if (isLoop && activeIndex >= slidesBefore) {\r\n          from -= slidesBefore;\r\n          if (!centeredSlides) offset += swiper.slidesGrid[0];\r\n        } else if (isLoop && activeIndex < slidesBefore) {\r\n          from = -slidesBefore;\r\n          if (centeredSlides) offset += swiper.slidesGrid[0];\r\n        }\r\n        Object.assign(swiper.virtual, {\r\n          from,\r\n          to,\r\n          offset,\r\n          slidesGrid: swiper.slidesGrid,\r\n          slidesBefore,\r\n          slidesAfter\r\n        });\r\n        function onRendered() {\r\n          swiper.updateSlides();\r\n          swiper.updateProgress();\r\n          swiper.updateSlidesClasses();\r\n          emit('virtualUpdate');\r\n        }\r\n        if (previousFrom === from && previousTo === to && !force) {\r\n          if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\r\n            swiper.slides.forEach(slideEl => {\r\n              slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\r\n            });\r\n          }\r\n          swiper.updateProgress();\r\n          emit('virtualUpdate');\r\n          return;\r\n        }\r\n        if (swiper.params.virtual.renderExternal) {\r\n          swiper.params.virtual.renderExternal.call(swiper, {\r\n            offset,\r\n            from,\r\n            to,\r\n            slides: (function getSlides() {\r\n              const slidesToRender = [];\r\n              for (let i = from; i <= to; i += 1) {\r\n                slidesToRender.push(slides[i]);\r\n              }\r\n              return slidesToRender;\r\n            })()\r\n          });\r\n          if (swiper.params.virtual.renderExternalUpdate) {\r\n            onRendered();\r\n          } else {\r\n            emit('virtualUpdate');\r\n          }\r\n          return;\r\n        }\r\n        const prependIndexes = [];\r\n        const appendIndexes = [];\r\n        const getSlideIndex = index => {\r\n          let slideIndex = index;\r\n          if (index < 0) {\r\n            slideIndex = slides.length + index;\r\n          } else if (slideIndex >= slides.length) {\r\n            // eslint-disable-next-line\r\n            slideIndex = slideIndex - slides.length;\r\n          }\r\n          return slideIndex;\r\n        };\r\n        if (force) {\r\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\r\n            slideEl.remove();\r\n          });\r\n        } else {\r\n          for (let i = previousFrom; i <= previousTo; i += 1) {\r\n            if (i < from || i > to) {\r\n              const slideIndex = getSlideIndex(i);\r\n              swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\r\n                slideEl.remove();\r\n              });\r\n            }\r\n          }\r\n        }\r\n        const loopFrom = isLoop ? -slides.length : 0;\r\n        const loopTo = isLoop ? slides.length * 2 : slides.length;\r\n        for (let i = loopFrom; i < loopTo; i += 1) {\r\n          if (i >= from && i <= to) {\r\n            const slideIndex = getSlideIndex(i);\r\n            if (typeof previousTo === 'undefined' || force) {\r\n              appendIndexes.push(slideIndex);\r\n            } else {\r\n              if (i > previousTo) appendIndexes.push(slideIndex);\r\n              if (i < previousFrom) prependIndexes.push(slideIndex);\r\n            }\r\n          }\r\n        }\r\n        appendIndexes.forEach(index => {\r\n          swiper.slidesEl.append(renderSlide(slides[index], index));\r\n        });\r\n        if (isLoop) {\r\n          for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\r\n            const index = prependIndexes[i];\r\n            swiper.slidesEl.prepend(renderSlide(slides[index], index));\r\n          }\r\n        } else {\r\n          prependIndexes.sort((a, b) => b - a);\r\n          prependIndexes.forEach(index => {\r\n            swiper.slidesEl.prepend(renderSlide(slides[index], index));\r\n          });\r\n        }\r\n        elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\r\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\r\n        });\r\n        onRendered();\r\n      }\r\n      function appendSlide(slides) {\r\n        if (typeof slides === 'object' && 'length' in slides) {\r\n          for (let i = 0; i < slides.length; i += 1) {\r\n            if (slides[i]) swiper.virtual.slides.push(slides[i]);\r\n          }\r\n        } else {\r\n          swiper.virtual.slides.push(slides);\r\n        }\r\n        update(true);\r\n      }\r\n      function prependSlide(slides) {\r\n        const activeIndex = swiper.activeIndex;\r\n        let newActiveIndex = activeIndex + 1;\r\n        let numberOfNewSlides = 1;\r\n        if (Array.isArray(slides)) {\r\n          for (let i = 0; i < slides.length; i += 1) {\r\n            if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\r\n          }\r\n          newActiveIndex = activeIndex + slides.length;\r\n          numberOfNewSlides = slides.length;\r\n        } else {\r\n          swiper.virtual.slides.unshift(slides);\r\n        }\r\n        if (swiper.params.virtual.cache) {\r\n          const cache = swiper.virtual.cache;\r\n          const newCache = {};\r\n          Object.keys(cache).forEach(cachedIndex => {\r\n            const cachedEl = cache[cachedIndex];\r\n            const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\r\n            if (cachedElIndex) {\r\n              cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\r\n            }\r\n            newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\r\n          });\r\n          swiper.virtual.cache = newCache;\r\n        }\r\n        update(true);\r\n        swiper.slideTo(newActiveIndex, 0);\r\n      }\r\n      function removeSlide(slidesIndexes) {\r\n        if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\r\n        let activeIndex = swiper.activeIndex;\r\n        if (Array.isArray(slidesIndexes)) {\r\n          for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\r\n            swiper.virtual.slides.splice(slidesIndexes[i], 1);\r\n            if (swiper.params.virtual.cache) {\r\n              delete swiper.virtual.cache[slidesIndexes[i]];\r\n            }\r\n            if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\r\n            activeIndex = Math.max(activeIndex, 0);\r\n          }\r\n        } else {\r\n          swiper.virtual.slides.splice(slidesIndexes, 1);\r\n          if (swiper.params.virtual.cache) {\r\n            delete swiper.virtual.cache[slidesIndexes];\r\n          }\r\n          if (slidesIndexes < activeIndex) activeIndex -= 1;\r\n          activeIndex = Math.max(activeIndex, 0);\r\n        }\r\n        update(true);\r\n        swiper.slideTo(activeIndex, 0);\r\n      }\r\n      function removeAllSlides() {\r\n        swiper.virtual.slides = [];\r\n        if (swiper.params.virtual.cache) {\r\n          swiper.virtual.cache = {};\r\n        }\r\n        update(true);\r\n        swiper.slideTo(0, 0);\r\n      }\r\n      on('beforeInit', () => {\r\n        if (!swiper.params.virtual.enabled) return;\r\n        let domSlidesAssigned;\r\n        if (typeof swiper.passedParams.virtual.slides === 'undefined') {\r\n          const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\r\n          if (slides && slides.length) {\r\n            swiper.virtual.slides = [...slides];\r\n            domSlidesAssigned = true;\r\n            slides.forEach((slideEl, slideIndex) => {\r\n              slideEl.setAttribute('data-swiper-slide-index', slideIndex);\r\n              swiper.virtual.cache[slideIndex] = slideEl;\r\n              slideEl.remove();\r\n            });\r\n          }\r\n        }\r\n        if (!domSlidesAssigned) {\r\n          swiper.virtual.slides = swiper.params.virtual.slides;\r\n        }\r\n        swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\r\n        swiper.params.watchSlidesProgress = true;\r\n        swiper.originalParams.watchSlidesProgress = true;\r\n        if (!swiper.params.initialSlide) {\r\n          update();\r\n        }\r\n      });\r\n      on('setTranslate', () => {\r\n        if (!swiper.params.virtual.enabled) return;\r\n        if (swiper.params.cssMode && !swiper._immediateVirtual) {\r\n          clearTimeout(cssModeTimeout);\r\n          cssModeTimeout = setTimeout(() => {\r\n            update();\r\n          }, 100);\r\n        } else {\r\n          update();\r\n        }\r\n      });\r\n      on('init update resize', () => {\r\n        if (!swiper.params.virtual.enabled) return;\r\n        if (swiper.params.cssMode) {\r\n          setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\r\n        }\r\n      });\r\n      Object.assign(swiper.virtual, {\r\n        appendSlide,\r\n        prependSlide,\r\n        removeSlide,\r\n        removeAllSlides,\r\n        update\r\n      });\r\n    }\r\n\r\n    /* eslint-disable consistent-return */\r\n    function Keyboard(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on,\r\n        emit\r\n      } = _ref;\r\n      const document = getDocument();\r\n      const window = getWindow();\r\n      swiper.keyboard = {\r\n        enabled: false\r\n      };\r\n      extendParams({\r\n        keyboard: {\r\n          enabled: false,\r\n          onlyInViewport: true,\r\n          pageUpDown: true\r\n        }\r\n      });\r\n      function handle(event) {\r\n        if (!swiper.enabled) return;\r\n        const {\r\n          rtlTranslate: rtl\r\n        } = swiper;\r\n        let e = event;\r\n        if (e.originalEvent) e = e.originalEvent; // jquery fix\r\n        const kc = e.keyCode || e.charCode;\r\n        const pageUpDown = swiper.params.keyboard.pageUpDown;\r\n        const isPageUp = pageUpDown && kc === 33;\r\n        const isPageDown = pageUpDown && kc === 34;\r\n        const isArrowLeft = kc === 37;\r\n        const isArrowRight = kc === 39;\r\n        const isArrowUp = kc === 38;\r\n        const isArrowDown = kc === 40;\r\n        // Directions locks\r\n        if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\r\n          return false;\r\n        }\r\n        if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\r\n          return false;\r\n        }\r\n        if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\r\n          return undefined;\r\n        }\r\n        if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\r\n          return undefined;\r\n        }\r\n        if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\r\n          let inView = false;\r\n          // Check that swiper should be inside of visible area of window\r\n          if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\r\n            return undefined;\r\n          }\r\n          const el = swiper.el;\r\n          const swiperWidth = el.clientWidth;\r\n          const swiperHeight = el.clientHeight;\r\n          const windowWidth = window.innerWidth;\r\n          const windowHeight = window.innerHeight;\r\n          const swiperOffset = elementOffset(el);\r\n          if (rtl) swiperOffset.left -= el.scrollLeft;\r\n          const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\r\n          for (let i = 0; i < swiperCoord.length; i += 1) {\r\n            const point = swiperCoord[i];\r\n            if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\r\n              if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\r\n              inView = true;\r\n            }\r\n          }\r\n          if (!inView) return undefined;\r\n        }\r\n        if (swiper.isHorizontal()) {\r\n          if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\r\n            if (e.preventDefault) e.preventDefault();else e.returnValue = false;\r\n          }\r\n          if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\r\n          if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\r\n        } else {\r\n          if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\r\n            if (e.preventDefault) e.preventDefault();else e.returnValue = false;\r\n          }\r\n          if (isPageDown || isArrowDown) swiper.slideNext();\r\n          if (isPageUp || isArrowUp) swiper.slidePrev();\r\n        }\r\n        emit('keyPress', kc);\r\n        return undefined;\r\n      }\r\n      function enable() {\r\n        if (swiper.keyboard.enabled) return;\r\n        document.addEventListener('keydown', handle);\r\n        swiper.keyboard.enabled = true;\r\n      }\r\n      function disable() {\r\n        if (!swiper.keyboard.enabled) return;\r\n        document.removeEventListener('keydown', handle);\r\n        swiper.keyboard.enabled = false;\r\n      }\r\n      on('init', () => {\r\n        if (swiper.params.keyboard.enabled) {\r\n          enable();\r\n        }\r\n      });\r\n      on('destroy', () => {\r\n        if (swiper.keyboard.enabled) {\r\n          disable();\r\n        }\r\n      });\r\n      Object.assign(swiper.keyboard, {\r\n        enable,\r\n        disable\r\n      });\r\n    }\r\n\r\n    /* eslint-disable consistent-return */\r\n    function Mousewheel(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on,\r\n        emit\r\n      } = _ref;\r\n      const window = getWindow();\r\n      extendParams({\r\n        mousewheel: {\r\n          enabled: false,\r\n          releaseOnEdges: false,\r\n          invert: false,\r\n          forceToAxis: false,\r\n          sensitivity: 1,\r\n          eventsTarget: 'container',\r\n          thresholdDelta: null,\r\n          thresholdTime: null,\r\n          noMousewheelClass: 'swiper-no-mousewheel'\r\n        }\r\n      });\r\n      swiper.mousewheel = {\r\n        enabled: false\r\n      };\r\n      let timeout;\r\n      let lastScrollTime = now();\r\n      let lastEventBeforeSnap;\r\n      const recentWheelEvents = [];\r\n      function normalize(e) {\r\n        // Reasonable defaults\r\n        const PIXEL_STEP = 10;\r\n        const LINE_HEIGHT = 40;\r\n        const PAGE_HEIGHT = 800;\r\n        let sX = 0;\r\n        let sY = 0; // spinX, spinY\r\n        let pX = 0;\r\n        let pY = 0; // pixelX, pixelY\r\n\r\n        // Legacy\r\n        if ('detail' in e) {\r\n          sY = e.detail;\r\n        }\r\n        if ('wheelDelta' in e) {\r\n          sY = -e.wheelDelta / 120;\r\n        }\r\n        if ('wheelDeltaY' in e) {\r\n          sY = -e.wheelDeltaY / 120;\r\n        }\r\n        if ('wheelDeltaX' in e) {\r\n          sX = -e.wheelDeltaX / 120;\r\n        }\r\n\r\n        // side scrolling on FF with DOMMouseScroll\r\n        if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\r\n          sX = sY;\r\n          sY = 0;\r\n        }\r\n        pX = sX * PIXEL_STEP;\r\n        pY = sY * PIXEL_STEP;\r\n        if ('deltaY' in e) {\r\n          pY = e.deltaY;\r\n        }\r\n        if ('deltaX' in e) {\r\n          pX = e.deltaX;\r\n        }\r\n        if (e.shiftKey && !pX) {\r\n          // if user scrolls with shift he wants horizontal scroll\r\n          pX = pY;\r\n          pY = 0;\r\n        }\r\n        if ((pX || pY) && e.deltaMode) {\r\n          if (e.deltaMode === 1) {\r\n            // delta in LINE units\r\n            pX *= LINE_HEIGHT;\r\n            pY *= LINE_HEIGHT;\r\n          } else {\r\n            // delta in PAGE units\r\n            pX *= PAGE_HEIGHT;\r\n            pY *= PAGE_HEIGHT;\r\n          }\r\n        }\r\n\r\n        // Fall-back if spin cannot be determined\r\n        if (pX && !sX) {\r\n          sX = pX < 1 ? -1 : 1;\r\n        }\r\n        if (pY && !sY) {\r\n          sY = pY < 1 ? -1 : 1;\r\n        }\r\n        return {\r\n          spinX: sX,\r\n          spinY: sY,\r\n          pixelX: pX,\r\n          pixelY: pY\r\n        };\r\n      }\r\n      function handleMouseEnter() {\r\n        if (!swiper.enabled) return;\r\n        swiper.mouseEntered = true;\r\n      }\r\n      function handleMouseLeave() {\r\n        if (!swiper.enabled) return;\r\n        swiper.mouseEntered = false;\r\n      }\r\n      function animateSlider(newEvent) {\r\n        if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\r\n          // Prevent if delta of wheel scroll delta is below configured threshold\r\n          return false;\r\n        }\r\n        if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\r\n          // Prevent if time between scrolls is below configured threshold\r\n          return false;\r\n        }\r\n\r\n        // If the movement is NOT big enough and\r\n        // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\r\n        //   Don't go any further (avoid insignificant scroll movement).\r\n        if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\r\n          // Return false as a default\r\n          return true;\r\n        }\r\n        // If user is scrolling towards the end:\r\n        //   If the slider hasn't hit the latest slide or\r\n        //   if the slider is a loop and\r\n        //   if the slider isn't moving right now:\r\n        //     Go to next slide and\r\n        //     emit a scroll event.\r\n        // Else (the user is scrolling towards the beginning) and\r\n        // if the slider hasn't hit the first slide or\r\n        // if the slider is a loop and\r\n        // if the slider isn't moving right now:\r\n        //   Go to prev slide and\r\n        //   emit a scroll event.\r\n        if (newEvent.direction < 0) {\r\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\r\n            swiper.slideNext();\r\n            emit('scroll', newEvent.raw);\r\n          }\r\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\r\n          swiper.slidePrev();\r\n          emit('scroll', newEvent.raw);\r\n        }\r\n        // If you got here is because an animation has been triggered so store the current time\r\n        lastScrollTime = new window.Date().getTime();\r\n        // Return false as a default\r\n        return false;\r\n      }\r\n      function releaseScroll(newEvent) {\r\n        const params = swiper.params.mousewheel;\r\n        if (newEvent.direction < 0) {\r\n          if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\r\n            // Return true to animate scroll on edges\r\n            return true;\r\n          }\r\n        } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\r\n          // Return true to animate scroll on edges\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n      function handle(event) {\r\n        let e = event;\r\n        let disableParentSwiper = true;\r\n        if (!swiper.enabled) return;\r\n\r\n        // Ignore event if the target or its parents have the swiper-no-mousewheel class\r\n        if (event.target.closest(`.${swiper.params.mousewheel.noMousewheelClass}`)) return;\r\n        const params = swiper.params.mousewheel;\r\n        if (swiper.params.cssMode) {\r\n          e.preventDefault();\r\n        }\r\n        let targetEl = swiper.el;\r\n        if (swiper.params.mousewheel.eventsTarget !== 'container') {\r\n          targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\r\n        }\r\n        const targetElContainsTarget = targetEl && targetEl.contains(e.target);\r\n        if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\r\n        if (e.originalEvent) e = e.originalEvent; // jquery fix\r\n        let delta = 0;\r\n        const rtlFactor = swiper.rtlTranslate ? -1 : 1;\r\n        const data = normalize(e);\r\n        if (params.forceToAxis) {\r\n          if (swiper.isHorizontal()) {\r\n            if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\r\n          } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\r\n        } else {\r\n          delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\r\n        }\r\n        if (delta === 0) return true;\r\n        if (params.invert) delta = -delta;\r\n\r\n        // Get the scroll positions\r\n        let positions = swiper.getTranslate() + delta * params.sensitivity;\r\n        if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\r\n        if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\r\n\r\n        // When loop is true:\r\n        //     the disableParentSwiper will be true.\r\n        // When loop is false:\r\n        //     if the scroll positions is not on edge,\r\n        //     then the disableParentSwiper will be true.\r\n        //     if the scroll on edge positions,\r\n        //     then the disableParentSwiper will be false.\r\n        disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\r\n        if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\r\n        if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\r\n          // Register the new event in a variable which stores the relevant data\r\n          const newEvent = {\r\n            time: now(),\r\n            delta: Math.abs(delta),\r\n            direction: Math.sign(delta),\r\n            raw: event\r\n          };\r\n\r\n          // Keep the most recent events\r\n          if (recentWheelEvents.length >= 2) {\r\n            recentWheelEvents.shift(); // only store the last N events\r\n          }\r\n\r\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\r\n          recentWheelEvents.push(newEvent);\r\n\r\n          // If there is at least one previous recorded event:\r\n          //   If direction has changed or\r\n          //   if the scroll is quicker than the previous one:\r\n          //     Animate the slider.\r\n          // Else (this is the first time the wheel is moved):\r\n          //     Animate the slider.\r\n          if (prevEvent) {\r\n            if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\r\n              animateSlider(newEvent);\r\n            }\r\n          } else {\r\n            animateSlider(newEvent);\r\n          }\r\n\r\n          // If it's time to release the scroll:\r\n          //   Return now so you don't hit the preventDefault.\r\n          if (releaseScroll(newEvent)) {\r\n            return true;\r\n          }\r\n        } else {\r\n          // Freemode or scrollContainer:\r\n\r\n          // If we recently snapped after a momentum scroll, then ignore wheel events\r\n          // to give time for the deceleration to finish. Stop ignoring after 500 msecs\r\n          // or if it's a new scroll (larger delta or inverse sign as last event before\r\n          // an end-of-momentum snap).\r\n          const newEvent = {\r\n            time: now(),\r\n            delta: Math.abs(delta),\r\n            direction: Math.sign(delta)\r\n          };\r\n          const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\r\n          if (!ignoreWheelEvents) {\r\n            lastEventBeforeSnap = undefined;\r\n            let position = swiper.getTranslate() + delta * params.sensitivity;\r\n            const wasBeginning = swiper.isBeginning;\r\n            const wasEnd = swiper.isEnd;\r\n            if (position >= swiper.minTranslate()) position = swiper.minTranslate();\r\n            if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\r\n            swiper.setTransition(0);\r\n            swiper.setTranslate(position);\r\n            swiper.updateProgress();\r\n            swiper.updateActiveIndex();\r\n            swiper.updateSlidesClasses();\r\n            if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\r\n              swiper.updateSlidesClasses();\r\n            }\r\n            if (swiper.params.loop) {\r\n              swiper.loopFix({\r\n                direction: newEvent.direction < 0 ? 'next' : 'prev',\r\n                byMousewheel: true\r\n              });\r\n            }\r\n            if (swiper.params.freeMode.sticky) {\r\n              // When wheel scrolling starts with sticky (aka snap) enabled, then detect\r\n              // the end of a momentum scroll by storing recent (N=15?) wheel events.\r\n              // 1. do all N events have decreasing or same (absolute value) delta?\r\n              // 2. did all N events arrive in the last M (M=500?) msecs?\r\n              // 3. does the earliest event have an (absolute value) delta that's\r\n              //    at least P (P=1?) larger than the most recent event's delta?\r\n              // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\r\n              // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\r\n              // Snap immediately and ignore remaining wheel events in this scroll.\r\n              // See comment above for \"remaining wheel events in this scroll\" determination.\r\n              // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\r\n              clearTimeout(timeout);\r\n              timeout = undefined;\r\n              if (recentWheelEvents.length >= 15) {\r\n                recentWheelEvents.shift(); // only store the last N events\r\n              }\r\n\r\n              const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\r\n              const firstEvent = recentWheelEvents[0];\r\n              recentWheelEvents.push(newEvent);\r\n              if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\r\n                // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\r\n                recentWheelEvents.splice(0);\r\n              } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\r\n                // We're at the end of the deceleration of a momentum scroll, so there's no need\r\n                // to wait for more events. Snap ASAP on the next tick.\r\n                // Also, because there's some remaining momentum we'll bias the snap in the\r\n                // direction of the ongoing scroll because it's better UX for the scroll to snap\r\n                // in the same direction as the scroll instead of reversing to snap.  Therefore,\r\n                // if it's already scrolled more than 20% in the current direction, keep going.\r\n                const snapToThreshold = delta > 0 ? 0.8 : 0.2;\r\n                lastEventBeforeSnap = newEvent;\r\n                recentWheelEvents.splice(0);\r\n                timeout = nextTick(() => {\r\n                  swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\r\n                }, 0); // no delay; move on next tick\r\n              }\r\n\r\n              if (!timeout) {\r\n                // if we get here, then we haven't detected the end of a momentum scroll, so\r\n                // we'll consider a scroll \"complete\" when there haven't been any wheel events\r\n                // for 500ms.\r\n                timeout = nextTick(() => {\r\n                  const snapToThreshold = 0.5;\r\n                  lastEventBeforeSnap = newEvent;\r\n                  recentWheelEvents.splice(0);\r\n                  swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\r\n                }, 500);\r\n              }\r\n            }\r\n\r\n            // Emit event\r\n            if (!ignoreWheelEvents) emit('scroll', e);\r\n\r\n            // Stop autoplay\r\n            if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\r\n            // Return page scroll on edge positions\r\n            if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\r\n          }\r\n        }\r\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\r\n        return false;\r\n      }\r\n      function events(method) {\r\n        let targetEl = swiper.el;\r\n        if (swiper.params.mousewheel.eventsTarget !== 'container') {\r\n          targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\r\n        }\r\n        targetEl[method]('mouseenter', handleMouseEnter);\r\n        targetEl[method]('mouseleave', handleMouseLeave);\r\n        targetEl[method]('wheel', handle);\r\n      }\r\n      function enable() {\r\n        if (swiper.params.cssMode) {\r\n          swiper.wrapperEl.removeEventListener('wheel', handle);\r\n          return true;\r\n        }\r\n        if (swiper.mousewheel.enabled) return false;\r\n        events('addEventListener');\r\n        swiper.mousewheel.enabled = true;\r\n        return true;\r\n      }\r\n      function disable() {\r\n        if (swiper.params.cssMode) {\r\n          swiper.wrapperEl.addEventListener(event, handle);\r\n          return true;\r\n        }\r\n        if (!swiper.mousewheel.enabled) return false;\r\n        events('removeEventListener');\r\n        swiper.mousewheel.enabled = false;\r\n        return true;\r\n      }\r\n      on('init', () => {\r\n        if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\r\n          disable();\r\n        }\r\n        if (swiper.params.mousewheel.enabled) enable();\r\n      });\r\n      on('destroy', () => {\r\n        if (swiper.params.cssMode) {\r\n          enable();\r\n        }\r\n        if (swiper.mousewheel.enabled) disable();\r\n      });\r\n      Object.assign(swiper.mousewheel, {\r\n        enable,\r\n        disable\r\n      });\r\n    }\r\n\r\n    function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\r\n      if (swiper.params.createElements) {\r\n        Object.keys(checkProps).forEach(key => {\r\n          if (!params[key] && params.auto === true) {\r\n            let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\r\n            if (!element) {\r\n              element = createElement('div', checkProps[key]);\r\n              element.className = checkProps[key];\r\n              swiper.el.append(element);\r\n            }\r\n            params[key] = element;\r\n            originalParams[key] = element;\r\n          }\r\n        });\r\n      }\r\n      return params;\r\n    }\r\n\r\n    function Navigation(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on,\r\n        emit\r\n      } = _ref;\r\n      extendParams({\r\n        navigation: {\r\n          nextEl: null,\r\n          prevEl: null,\r\n          hideOnClick: false,\r\n          disabledClass: 'swiper-button-disabled',\r\n          hiddenClass: 'swiper-button-hidden',\r\n          lockClass: 'swiper-button-lock',\r\n          navigationDisabledClass: 'swiper-navigation-disabled'\r\n        }\r\n      });\r\n      swiper.navigation = {\r\n        nextEl: null,\r\n        prevEl: null\r\n      };\r\n      const makeElementsArray = el => {\r\n        if (!Array.isArray(el)) el = [el].filter(e => !!e);\r\n        return el;\r\n      };\r\n      function getEl(el) {\r\n        let res;\r\n        if (el && typeof el === 'string' && swiper.isElement) {\r\n          res = swiper.el.shadowRoot.querySelector(el);\r\n          if (res) return res;\r\n        }\r\n        if (el) {\r\n          if (typeof el === 'string') res = [...document.querySelectorAll(el)];\r\n          if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\r\n            res = swiper.el.querySelector(el);\r\n          }\r\n        }\r\n        if (el && !res) return el;\r\n        // if (Array.isArray(res) && res.length === 1) res = res[0];\r\n        return res;\r\n      }\r\n      function toggleEl(el, disabled) {\r\n        const params = swiper.params.navigation;\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          if (subEl) {\r\n            subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\r\n            if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\r\n            if (swiper.params.watchOverflow && swiper.enabled) {\r\n              subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\r\n            }\r\n          }\r\n        });\r\n      }\r\n      function update() {\r\n        // Update Navigation Buttons\r\n        const {\r\n          nextEl,\r\n          prevEl\r\n        } = swiper.navigation;\r\n        if (swiper.params.loop) {\r\n          toggleEl(prevEl, false);\r\n          toggleEl(nextEl, false);\r\n          return;\r\n        }\r\n        toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\r\n        toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\r\n      }\r\n      function onPrevClick(e) {\r\n        e.preventDefault();\r\n        if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\r\n        swiper.slidePrev();\r\n        emit('navigationPrev');\r\n      }\r\n      function onNextClick(e) {\r\n        e.preventDefault();\r\n        if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\r\n        swiper.slideNext();\r\n        emit('navigationNext');\r\n      }\r\n      function init() {\r\n        const params = swiper.params.navigation;\r\n        swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\r\n          nextEl: 'swiper-button-next',\r\n          prevEl: 'swiper-button-prev'\r\n        });\r\n        if (!(params.nextEl || params.prevEl)) return;\r\n        let nextEl = getEl(params.nextEl);\r\n        let prevEl = getEl(params.prevEl);\r\n        Object.assign(swiper.navigation, {\r\n          nextEl,\r\n          prevEl\r\n        });\r\n        nextEl = makeElementsArray(nextEl);\r\n        prevEl = makeElementsArray(prevEl);\r\n        const initButton = (el, dir) => {\r\n          if (el) {\r\n            el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\r\n          }\r\n          if (!swiper.enabled && el) {\r\n            el.classList.add(...params.lockClass.split(' '));\r\n          }\r\n        };\r\n        nextEl.forEach(el => initButton(el, 'next'));\r\n        prevEl.forEach(el => initButton(el, 'prev'));\r\n      }\r\n      function destroy() {\r\n        let {\r\n          nextEl,\r\n          prevEl\r\n        } = swiper.navigation;\r\n        nextEl = makeElementsArray(nextEl);\r\n        prevEl = makeElementsArray(prevEl);\r\n        const destroyButton = (el, dir) => {\r\n          el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\r\n          el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\r\n        };\r\n        nextEl.forEach(el => destroyButton(el, 'next'));\r\n        prevEl.forEach(el => destroyButton(el, 'prev'));\r\n      }\r\n      on('init', () => {\r\n        if (swiper.params.navigation.enabled === false) {\r\n          // eslint-disable-next-line\r\n          disable();\r\n        } else {\r\n          init();\r\n          update();\r\n        }\r\n      });\r\n      on('toEdge fromEdge lock unlock', () => {\r\n        update();\r\n      });\r\n      on('destroy', () => {\r\n        destroy();\r\n      });\r\n      on('enable disable', () => {\r\n        let {\r\n          nextEl,\r\n          prevEl\r\n        } = swiper.navigation;\r\n        nextEl = makeElementsArray(nextEl);\r\n        prevEl = makeElementsArray(prevEl);\r\n        [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\r\n      });\r\n      on('click', (_s, e) => {\r\n        let {\r\n          nextEl,\r\n          prevEl\r\n        } = swiper.navigation;\r\n        nextEl = makeElementsArray(nextEl);\r\n        prevEl = makeElementsArray(prevEl);\r\n        const targetEl = e.target;\r\n        if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\r\n          if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\r\n          let isHidden;\r\n          if (nextEl.length) {\r\n            isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\r\n          } else if (prevEl.length) {\r\n            isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\r\n          }\r\n          if (isHidden === true) {\r\n            emit('navigationShow');\r\n          } else {\r\n            emit('navigationHide');\r\n          }\r\n          [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\r\n        }\r\n      });\r\n      const enable = () => {\r\n        swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\r\n        init();\r\n        update();\r\n      };\r\n      const disable = () => {\r\n        swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\r\n        destroy();\r\n      };\r\n      Object.assign(swiper.navigation, {\r\n        enable,\r\n        disable,\r\n        update,\r\n        init,\r\n        destroy\r\n      });\r\n    }\r\n\r\n    function classesToSelector(classes) {\r\n      if (classes === void 0) {\r\n        classes = '';\r\n      }\r\n      return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\r\n  .replace(/ /g, '.')}`;\r\n    }\r\n\r\n    function Pagination(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on,\r\n        emit\r\n      } = _ref;\r\n      const pfx = 'swiper-pagination';\r\n      extendParams({\r\n        pagination: {\r\n          el: null,\r\n          bulletElement: 'span',\r\n          clickable: false,\r\n          hideOnClick: false,\r\n          renderBullet: null,\r\n          renderProgressbar: null,\r\n          renderFraction: null,\r\n          renderCustom: null,\r\n          progressbarOpposite: false,\r\n          type: 'bullets',\r\n          // 'bullets' or 'progressbar' or 'fraction' or 'custom'\r\n          dynamicBullets: false,\r\n          dynamicMainBullets: 1,\r\n          formatFractionCurrent: number => number,\r\n          formatFractionTotal: number => number,\r\n          bulletClass: `${pfx}-bullet`,\r\n          bulletActiveClass: `${pfx}-bullet-active`,\r\n          modifierClass: `${pfx}-`,\r\n          currentClass: `${pfx}-current`,\r\n          totalClass: `${pfx}-total`,\r\n          hiddenClass: `${pfx}-hidden`,\r\n          progressbarFillClass: `${pfx}-progressbar-fill`,\r\n          progressbarOppositeClass: `${pfx}-progressbar-opposite`,\r\n          clickableClass: `${pfx}-clickable`,\r\n          lockClass: `${pfx}-lock`,\r\n          horizontalClass: `${pfx}-horizontal`,\r\n          verticalClass: `${pfx}-vertical`,\r\n          paginationDisabledClass: `${pfx}-disabled`\r\n        }\r\n      });\r\n      swiper.pagination = {\r\n        el: null,\r\n        bullets: []\r\n      };\r\n      let bulletSize;\r\n      let dynamicBulletIndex = 0;\r\n      const makeElementsArray = el => {\r\n        if (!Array.isArray(el)) el = [el].filter(e => !!e);\r\n        return el;\r\n      };\r\n      function isPaginationDisabled() {\r\n        return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\r\n      }\r\n      function setSideBullets(bulletEl, position) {\r\n        const {\r\n          bulletActiveClass\r\n        } = swiper.params.pagination;\r\n        if (!bulletEl) return;\r\n        bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\r\n        if (bulletEl) {\r\n          bulletEl.classList.add(`${bulletActiveClass}-${position}`);\r\n          bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\r\n          if (bulletEl) {\r\n            bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\r\n          }\r\n        }\r\n      }\r\n      function onBulletClick(e) {\r\n        const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\r\n        if (!bulletEl) {\r\n          return;\r\n        }\r\n        e.preventDefault();\r\n        const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\r\n        if (swiper.params.loop) {\r\n          if (swiper.realIndex === index) return;\r\n          const newSlideIndex = swiper.getSlideIndexByData(index);\r\n          const currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);\r\n          if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {\r\n            swiper.loopFix({\r\n              direction: newSlideIndex > currentSlideIndex ? 'next' : 'prev',\r\n              activeSlideIndex: newSlideIndex,\r\n              slideTo: false\r\n            });\r\n          }\r\n          swiper.slideToLoop(index);\r\n        } else {\r\n          swiper.slideTo(index);\r\n        }\r\n      }\r\n      function update() {\r\n        // Render || Update Pagination bullets/items\r\n        const rtl = swiper.rtl;\r\n        const params = swiper.params.pagination;\r\n        if (isPaginationDisabled()) return;\r\n        let el = swiper.pagination.el;\r\n        el = makeElementsArray(el);\r\n        // Current/Total\r\n        let current;\r\n        let previousIndex;\r\n        const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\r\n        const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\r\n        if (swiper.params.loop) {\r\n          previousIndex = swiper.previousRealIndex || 0;\r\n          current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\r\n        } else if (typeof swiper.snapIndex !== 'undefined') {\r\n          current = swiper.snapIndex;\r\n          previousIndex = swiper.previousSnapIndex;\r\n        } else {\r\n          previousIndex = swiper.previousIndex || 0;\r\n          current = swiper.activeIndex || 0;\r\n        }\r\n        // Types\r\n        if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\r\n          const bullets = swiper.pagination.bullets;\r\n          let firstIndex;\r\n          let lastIndex;\r\n          let midIndex;\r\n          if (params.dynamicBullets) {\r\n            bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\r\n            el.forEach(subEl => {\r\n              subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\r\n            });\r\n            if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\r\n              dynamicBulletIndex += current - (previousIndex || 0);\r\n              if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\r\n                dynamicBulletIndex = params.dynamicMainBullets - 1;\r\n              } else if (dynamicBulletIndex < 0) {\r\n                dynamicBulletIndex = 0;\r\n              }\r\n            }\r\n            firstIndex = Math.max(current - dynamicBulletIndex, 0);\r\n            lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\r\n            midIndex = (lastIndex + firstIndex) / 2;\r\n          }\r\n          bullets.forEach(bulletEl => {\r\n            const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\r\n            bulletEl.classList.remove(...classesToRemove);\r\n          });\r\n          if (el.length > 1) {\r\n            bullets.forEach(bullet => {\r\n              const bulletIndex = elementIndex(bullet);\r\n              if (bulletIndex === current) {\r\n                bullet.classList.add(...params.bulletActiveClass.split(' '));\r\n              }\r\n              if (params.dynamicBullets) {\r\n                if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\r\n                  bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\r\n                }\r\n                if (bulletIndex === firstIndex) {\r\n                  setSideBullets(bullet, 'prev');\r\n                }\r\n                if (bulletIndex === lastIndex) {\r\n                  setSideBullets(bullet, 'next');\r\n                }\r\n              }\r\n            });\r\n          } else {\r\n            const bullet = bullets[current];\r\n            if (bullet) {\r\n              bullet.classList.add(...params.bulletActiveClass.split(' '));\r\n            }\r\n            if (params.dynamicBullets) {\r\n              const firstDisplayedBullet = bullets[firstIndex];\r\n              const lastDisplayedBullet = bullets[lastIndex];\r\n              for (let i = firstIndex; i <= lastIndex; i += 1) {\r\n                if (bullets[i]) {\r\n                  bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\r\n                }\r\n              }\r\n              setSideBullets(firstDisplayedBullet, 'prev');\r\n              setSideBullets(lastDisplayedBullet, 'next');\r\n            }\r\n          }\r\n          if (params.dynamicBullets) {\r\n            const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\r\n            const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\r\n            const offsetProp = rtl ? 'right' : 'left';\r\n            bullets.forEach(bullet => {\r\n              bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\r\n            });\r\n          }\r\n        }\r\n        el.forEach((subEl, subElIndex) => {\r\n          if (params.type === 'fraction') {\r\n            subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\r\n              fractionEl.textContent = params.formatFractionCurrent(current + 1);\r\n            });\r\n            subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\r\n              totalEl.textContent = params.formatFractionTotal(total);\r\n            });\r\n          }\r\n          if (params.type === 'progressbar') {\r\n            let progressbarDirection;\r\n            if (params.progressbarOpposite) {\r\n              progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\r\n            } else {\r\n              progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\r\n            }\r\n            const scale = (current + 1) / total;\r\n            let scaleX = 1;\r\n            let scaleY = 1;\r\n            if (progressbarDirection === 'horizontal') {\r\n              scaleX = scale;\r\n            } else {\r\n              scaleY = scale;\r\n            }\r\n            subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\r\n              progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\r\n              progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\r\n            });\r\n          }\r\n          if (params.type === 'custom' && params.renderCustom) {\r\n            subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\r\n            if (subElIndex === 0) emit('paginationRender', subEl);\r\n          } else {\r\n            if (subElIndex === 0) emit('paginationRender', subEl);\r\n            emit('paginationUpdate', subEl);\r\n          }\r\n          if (swiper.params.watchOverflow && swiper.enabled) {\r\n            subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\r\n          }\r\n        });\r\n      }\r\n      function render() {\r\n        // Render Container\r\n        const params = swiper.params.pagination;\r\n        if (isPaginationDisabled()) return;\r\n        const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\r\n        let el = swiper.pagination.el;\r\n        el = makeElementsArray(el);\r\n        let paginationHTML = '';\r\n        if (params.type === 'bullets') {\r\n          let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\r\n          if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\r\n            numberOfBullets = slidesLength;\r\n          }\r\n          for (let i = 0; i < numberOfBullets; i += 1) {\r\n            if (params.renderBullet) {\r\n              paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\r\n            } else {\r\n              paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\r\n            }\r\n          }\r\n        }\r\n        if (params.type === 'fraction') {\r\n          if (params.renderFraction) {\r\n            paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\r\n          } else {\r\n            paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\r\n          }\r\n        }\r\n        if (params.type === 'progressbar') {\r\n          if (params.renderProgressbar) {\r\n            paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\r\n          } else {\r\n            paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\r\n          }\r\n        }\r\n        swiper.pagination.bullets = [];\r\n        el.forEach(subEl => {\r\n          if (params.type !== 'custom') {\r\n            subEl.innerHTML = paginationHTML || '';\r\n          }\r\n          if (params.type === 'bullets') {\r\n            swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\r\n          }\r\n        });\r\n        if (params.type !== 'custom') {\r\n          emit('paginationRender', el[0]);\r\n        }\r\n      }\r\n      function init() {\r\n        swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\r\n          el: 'swiper-pagination'\r\n        });\r\n        const params = swiper.params.pagination;\r\n        if (!params.el) return;\r\n        let el;\r\n        if (typeof params.el === 'string' && swiper.isElement) {\r\n          el = swiper.el.shadowRoot.querySelector(params.el);\r\n        }\r\n        if (!el && typeof params.el === 'string') {\r\n          el = [...document.querySelectorAll(params.el)];\r\n        }\r\n        if (!el) {\r\n          el = params.el;\r\n        }\r\n        if (!el || el.length === 0) return;\r\n        if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\r\n          el = [...swiper.el.querySelectorAll(params.el)];\r\n          // check if it belongs to another nested Swiper\r\n          if (el.length > 1) {\r\n            el = el.filter(subEl => {\r\n              if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\r\n              return true;\r\n            })[0];\r\n          }\r\n        }\r\n        if (Array.isArray(el) && el.length === 1) el = el[0];\r\n        Object.assign(swiper.pagination, {\r\n          el\r\n        });\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          if (params.type === 'bullets' && params.clickable) {\r\n            subEl.classList.add(params.clickableClass);\r\n          }\r\n          subEl.classList.add(params.modifierClass + params.type);\r\n          subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\r\n          if (params.type === 'bullets' && params.dynamicBullets) {\r\n            subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\r\n            dynamicBulletIndex = 0;\r\n            if (params.dynamicMainBullets < 1) {\r\n              params.dynamicMainBullets = 1;\r\n            }\r\n          }\r\n          if (params.type === 'progressbar' && params.progressbarOpposite) {\r\n            subEl.classList.add(params.progressbarOppositeClass);\r\n          }\r\n          if (params.clickable) {\r\n            subEl.addEventListener('click', onBulletClick);\r\n          }\r\n          if (!swiper.enabled) {\r\n            subEl.classList.add(params.lockClass);\r\n          }\r\n        });\r\n      }\r\n      function destroy() {\r\n        const params = swiper.params.pagination;\r\n        if (isPaginationDisabled()) return;\r\n        let el = swiper.pagination.el;\r\n        if (el) {\r\n          el = makeElementsArray(el);\r\n          el.forEach(subEl => {\r\n            subEl.classList.remove(params.hiddenClass);\r\n            subEl.classList.remove(params.modifierClass + params.type);\r\n            subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\r\n            if (params.clickable) {\r\n              subEl.removeEventListener('click', onBulletClick);\r\n            }\r\n          });\r\n        }\r\n        if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\r\n      }\r\n      on('changeDirection', () => {\r\n        if (!swiper.pagination || !swiper.pagination.el) return;\r\n        const params = swiper.params.pagination;\r\n        let {\r\n          el\r\n        } = swiper.pagination;\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          subEl.classList.remove(params.horizontalClass, params.verticalClass);\r\n          subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\r\n        });\r\n      });\r\n      on('init', () => {\r\n        if (swiper.params.pagination.enabled === false) {\r\n          // eslint-disable-next-line\r\n          disable();\r\n        } else {\r\n          init();\r\n          render();\r\n          update();\r\n        }\r\n      });\r\n      on('activeIndexChange', () => {\r\n        if (typeof swiper.snapIndex === 'undefined') {\r\n          update();\r\n        }\r\n      });\r\n      on('snapIndexChange', () => {\r\n        update();\r\n      });\r\n      on('snapGridLengthChange', () => {\r\n        render();\r\n        update();\r\n      });\r\n      on('destroy', () => {\r\n        destroy();\r\n      });\r\n      on('enable disable', () => {\r\n        let {\r\n          el\r\n        } = swiper.pagination;\r\n        if (el) {\r\n          el = makeElementsArray(el);\r\n          el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\r\n        }\r\n      });\r\n      on('lock unlock', () => {\r\n        update();\r\n      });\r\n      on('click', (_s, e) => {\r\n        const targetEl = e.target;\r\n        let {\r\n          el\r\n        } = swiper.pagination;\r\n        if (!Array.isArray(el)) el = [el].filter(element => !!element);\r\n        if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\r\n          if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\r\n          const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\r\n          if (isHidden === true) {\r\n            emit('paginationShow');\r\n          } else {\r\n            emit('paginationHide');\r\n          }\r\n          el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\r\n        }\r\n      });\r\n      const enable = () => {\r\n        swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\r\n        let {\r\n          el\r\n        } = swiper.pagination;\r\n        if (el) {\r\n          el = makeElementsArray(el);\r\n          el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\r\n        }\r\n        init();\r\n        render();\r\n        update();\r\n      };\r\n      const disable = () => {\r\n        swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\r\n        let {\r\n          el\r\n        } = swiper.pagination;\r\n        if (el) {\r\n          el = makeElementsArray(el);\r\n          el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\r\n        }\r\n        destroy();\r\n      };\r\n      Object.assign(swiper.pagination, {\r\n        enable,\r\n        disable,\r\n        render,\r\n        update,\r\n        init,\r\n        destroy\r\n      });\r\n    }\r\n\r\n    function Scrollbar(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on,\r\n        emit\r\n      } = _ref;\r\n      const document = getDocument();\r\n      let isTouched = false;\r\n      let timeout = null;\r\n      let dragTimeout = null;\r\n      let dragStartPos;\r\n      let dragSize;\r\n      let trackSize;\r\n      let divider;\r\n      extendParams({\r\n        scrollbar: {\r\n          el: null,\r\n          dragSize: 'auto',\r\n          hide: false,\r\n          draggable: false,\r\n          snapOnRelease: true,\r\n          lockClass: 'swiper-scrollbar-lock',\r\n          dragClass: 'swiper-scrollbar-drag',\r\n          scrollbarDisabledClass: 'swiper-scrollbar-disabled',\r\n          horizontalClass: `swiper-scrollbar-horizontal`,\r\n          verticalClass: `swiper-scrollbar-vertical`\r\n        }\r\n      });\r\n      swiper.scrollbar = {\r\n        el: null,\r\n        dragEl: null\r\n      };\r\n      function setTranslate() {\r\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n        const {\r\n          scrollbar,\r\n          rtlTranslate: rtl\r\n        } = swiper;\r\n        const {\r\n          dragEl,\r\n          el\r\n        } = scrollbar;\r\n        const params = swiper.params.scrollbar;\r\n        const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\r\n        let newSize = dragSize;\r\n        let newPos = (trackSize - dragSize) * progress;\r\n        if (rtl) {\r\n          newPos = -newPos;\r\n          if (newPos > 0) {\r\n            newSize = dragSize - newPos;\r\n            newPos = 0;\r\n          } else if (-newPos + dragSize > trackSize) {\r\n            newSize = trackSize + newPos;\r\n          }\r\n        } else if (newPos < 0) {\r\n          newSize = dragSize + newPos;\r\n          newPos = 0;\r\n        } else if (newPos + dragSize > trackSize) {\r\n          newSize = trackSize - newPos;\r\n        }\r\n        if (swiper.isHorizontal()) {\r\n          dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\r\n          dragEl.style.width = `${newSize}px`;\r\n        } else {\r\n          dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\r\n          dragEl.style.height = `${newSize}px`;\r\n        }\r\n        if (params.hide) {\r\n          clearTimeout(timeout);\r\n          el.style.opacity = 1;\r\n          timeout = setTimeout(() => {\r\n            el.style.opacity = 0;\r\n            el.style.transitionDuration = '400ms';\r\n          }, 1000);\r\n        }\r\n      }\r\n      function setTransition(duration) {\r\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n        swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\r\n      }\r\n      function updateSize() {\r\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n        const {\r\n          scrollbar\r\n        } = swiper;\r\n        const {\r\n          dragEl,\r\n          el\r\n        } = scrollbar;\r\n        dragEl.style.width = '';\r\n        dragEl.style.height = '';\r\n        trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\r\n        divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\r\n        if (swiper.params.scrollbar.dragSize === 'auto') {\r\n          dragSize = trackSize * divider;\r\n        } else {\r\n          dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\r\n        }\r\n        if (swiper.isHorizontal()) {\r\n          dragEl.style.width = `${dragSize}px`;\r\n        } else {\r\n          dragEl.style.height = `${dragSize}px`;\r\n        }\r\n        if (divider >= 1) {\r\n          el.style.display = 'none';\r\n        } else {\r\n          el.style.display = '';\r\n        }\r\n        if (swiper.params.scrollbar.hide) {\r\n          el.style.opacity = 0;\r\n        }\r\n        if (swiper.params.watchOverflow && swiper.enabled) {\r\n          scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\r\n        }\r\n      }\r\n      function getPointerPosition(e) {\r\n        return swiper.isHorizontal() ? e.clientX : e.clientY;\r\n      }\r\n      function setDragPosition(e) {\r\n        const {\r\n          scrollbar,\r\n          rtlTranslate: rtl\r\n        } = swiper;\r\n        const {\r\n          el\r\n        } = scrollbar;\r\n        let positionRatio;\r\n        positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\r\n        positionRatio = Math.max(Math.min(positionRatio, 1), 0);\r\n        if (rtl) {\r\n          positionRatio = 1 - positionRatio;\r\n        }\r\n        const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\r\n        swiper.updateProgress(position);\r\n        swiper.setTranslate(position);\r\n        swiper.updateActiveIndex();\r\n        swiper.updateSlidesClasses();\r\n      }\r\n      function onDragStart(e) {\r\n        const params = swiper.params.scrollbar;\r\n        const {\r\n          scrollbar,\r\n          wrapperEl\r\n        } = swiper;\r\n        const {\r\n          el,\r\n          dragEl\r\n        } = scrollbar;\r\n        isTouched = true;\r\n        dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        wrapperEl.style.transitionDuration = '100ms';\r\n        dragEl.style.transitionDuration = '100ms';\r\n        setDragPosition(e);\r\n        clearTimeout(dragTimeout);\r\n        el.style.transitionDuration = '0ms';\r\n        if (params.hide) {\r\n          el.style.opacity = 1;\r\n        }\r\n        if (swiper.params.cssMode) {\r\n          swiper.wrapperEl.style['scroll-snap-type'] = 'none';\r\n        }\r\n        emit('scrollbarDragStart', e);\r\n      }\r\n      function onDragMove(e) {\r\n        const {\r\n          scrollbar,\r\n          wrapperEl\r\n        } = swiper;\r\n        const {\r\n          el,\r\n          dragEl\r\n        } = scrollbar;\r\n        if (!isTouched) return;\r\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\r\n        setDragPosition(e);\r\n        wrapperEl.style.transitionDuration = '0ms';\r\n        el.style.transitionDuration = '0ms';\r\n        dragEl.style.transitionDuration = '0ms';\r\n        emit('scrollbarDragMove', e);\r\n      }\r\n      function onDragEnd(e) {\r\n        const params = swiper.params.scrollbar;\r\n        const {\r\n          scrollbar,\r\n          wrapperEl\r\n        } = swiper;\r\n        const {\r\n          el\r\n        } = scrollbar;\r\n        if (!isTouched) return;\r\n        isTouched = false;\r\n        if (swiper.params.cssMode) {\r\n          swiper.wrapperEl.style['scroll-snap-type'] = '';\r\n          wrapperEl.style.transitionDuration = '';\r\n        }\r\n        if (params.hide) {\r\n          clearTimeout(dragTimeout);\r\n          dragTimeout = nextTick(() => {\r\n            el.style.opacity = 0;\r\n            el.style.transitionDuration = '400ms';\r\n          }, 1000);\r\n        }\r\n        emit('scrollbarDragEnd', e);\r\n        if (params.snapOnRelease) {\r\n          swiper.slideToClosest();\r\n        }\r\n      }\r\n      function events(method) {\r\n        const {\r\n          scrollbar,\r\n          params\r\n        } = swiper;\r\n        const el = scrollbar.el;\r\n        if (!el) return;\r\n        const target = el;\r\n        const activeListener = params.passiveListeners ? {\r\n          passive: false,\r\n          capture: false\r\n        } : false;\r\n        const passiveListener = params.passiveListeners ? {\r\n          passive: true,\r\n          capture: false\r\n        } : false;\r\n        if (!target) return;\r\n        const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\r\n        target[eventMethod]('pointerdown', onDragStart, activeListener);\r\n        document[eventMethod]('pointermove', onDragMove, activeListener);\r\n        document[eventMethod]('pointerup', onDragEnd, passiveListener);\r\n      }\r\n      function enableDraggable() {\r\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n        events('on');\r\n      }\r\n      function disableDraggable() {\r\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n        events('off');\r\n      }\r\n      function init() {\r\n        const {\r\n          scrollbar,\r\n          el: swiperEl\r\n        } = swiper;\r\n        swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\r\n          el: 'swiper-scrollbar'\r\n        });\r\n        const params = swiper.params.scrollbar;\r\n        if (!params.el) return;\r\n        let el;\r\n        if (typeof params.el === 'string' && swiper.isElement) {\r\n          el = swiper.el.shadowRoot.querySelector(params.el);\r\n        }\r\n        if (!el && typeof params.el === 'string') {\r\n          el = document.querySelectorAll(params.el);\r\n        } else if (!el) {\r\n          el = params.el;\r\n        }\r\n        if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\r\n          el = swiperEl.querySelector(params.el);\r\n        }\r\n        if (el.length > 0) el = el[0];\r\n        el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\r\n        let dragEl;\r\n        if (el) {\r\n          dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\r\n          if (!dragEl) {\r\n            dragEl = createElement('div', swiper.params.scrollbar.dragClass);\r\n            el.append(dragEl);\r\n          }\r\n        }\r\n        Object.assign(scrollbar, {\r\n          el,\r\n          dragEl\r\n        });\r\n        if (params.draggable) {\r\n          enableDraggable();\r\n        }\r\n        if (el) {\r\n          el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\r\n        }\r\n      }\r\n      function destroy() {\r\n        const params = swiper.params.scrollbar;\r\n        const el = swiper.scrollbar.el;\r\n        if (el) {\r\n          el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\r\n        }\r\n        disableDraggable();\r\n      }\r\n      on('init', () => {\r\n        if (swiper.params.scrollbar.enabled === false) {\r\n          // eslint-disable-next-line\r\n          disable();\r\n        } else {\r\n          init();\r\n          updateSize();\r\n          setTranslate();\r\n        }\r\n      });\r\n      on('update resize observerUpdate lock unlock', () => {\r\n        updateSize();\r\n      });\r\n      on('setTranslate', () => {\r\n        setTranslate();\r\n      });\r\n      on('setTransition', (_s, duration) => {\r\n        setTransition(duration);\r\n      });\r\n      on('enable disable', () => {\r\n        const {\r\n          el\r\n        } = swiper.scrollbar;\r\n        if (el) {\r\n          el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\r\n        }\r\n      });\r\n      on('destroy', () => {\r\n        destroy();\r\n      });\r\n      const enable = () => {\r\n        swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\r\n        if (swiper.scrollbar.el) {\r\n          swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\r\n        }\r\n        init();\r\n        updateSize();\r\n        setTranslate();\r\n      };\r\n      const disable = () => {\r\n        swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\r\n        if (swiper.scrollbar.el) {\r\n          swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\r\n        }\r\n        destroy();\r\n      };\r\n      Object.assign(swiper.scrollbar, {\r\n        enable,\r\n        disable,\r\n        updateSize,\r\n        setTranslate,\r\n        init,\r\n        destroy\r\n      });\r\n    }\r\n\r\n    function Parallax(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on\r\n      } = _ref;\r\n      extendParams({\r\n        parallax: {\r\n          enabled: false\r\n        }\r\n      });\r\n      const setTransform = (el, progress) => {\r\n        const {\r\n          rtl\r\n        } = swiper;\r\n        const rtlFactor = rtl ? -1 : 1;\r\n        const p = el.getAttribute('data-swiper-parallax') || '0';\r\n        let x = el.getAttribute('data-swiper-parallax-x');\r\n        let y = el.getAttribute('data-swiper-parallax-y');\r\n        const scale = el.getAttribute('data-swiper-parallax-scale');\r\n        const opacity = el.getAttribute('data-swiper-parallax-opacity');\r\n        const rotate = el.getAttribute('data-swiper-parallax-rotate');\r\n        if (x || y) {\r\n          x = x || '0';\r\n          y = y || '0';\r\n        } else if (swiper.isHorizontal()) {\r\n          x = p;\r\n          y = '0';\r\n        } else {\r\n          y = p;\r\n          x = '0';\r\n        }\r\n        if (x.indexOf('%') >= 0) {\r\n          x = `${parseInt(x, 10) * progress * rtlFactor}%`;\r\n        } else {\r\n          x = `${x * progress * rtlFactor}px`;\r\n        }\r\n        if (y.indexOf('%') >= 0) {\r\n          y = `${parseInt(y, 10) * progress}%`;\r\n        } else {\r\n          y = `${y * progress}px`;\r\n        }\r\n        if (typeof opacity !== 'undefined' && opacity !== null) {\r\n          const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\r\n          el.style.opacity = currentOpacity;\r\n        }\r\n        let transform = `translate3d(${x}, ${y}, 0px)`;\r\n        if (typeof scale !== 'undefined' && scale !== null) {\r\n          const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\r\n          transform += ` scale(${currentScale})`;\r\n        }\r\n        if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\r\n          const currentRotate = rotate * progress * -1;\r\n          transform += ` rotate(${currentRotate}deg)`;\r\n        }\r\n        el.style.transform = transform;\r\n      };\r\n      const setTranslate = () => {\r\n        const {\r\n          el,\r\n          slides,\r\n          progress,\r\n          snapGrid\r\n        } = swiper;\r\n        elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\r\n          setTransform(subEl, progress);\r\n        });\r\n        slides.forEach((slideEl, slideIndex) => {\r\n          let slideProgress = slideEl.progress;\r\n          if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\r\n            slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\r\n          }\r\n          slideProgress = Math.min(Math.max(slideProgress, -1), 1);\r\n          slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\r\n            setTransform(subEl, slideProgress);\r\n          });\r\n        });\r\n      };\r\n      const setTransition = function (duration) {\r\n        if (duration === void 0) {\r\n          duration = swiper.params.speed;\r\n        }\r\n        const {\r\n          el\r\n        } = swiper;\r\n        el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\r\n          let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\r\n          if (duration === 0) parallaxDuration = 0;\r\n          parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\r\n        });\r\n      };\r\n      on('beforeInit', () => {\r\n        if (!swiper.params.parallax.enabled) return;\r\n        swiper.params.watchSlidesProgress = true;\r\n        swiper.originalParams.watchSlidesProgress = true;\r\n      });\r\n      on('init', () => {\r\n        if (!swiper.params.parallax.enabled) return;\r\n        setTranslate();\r\n      });\r\n      on('setTranslate', () => {\r\n        if (!swiper.params.parallax.enabled) return;\r\n        setTranslate();\r\n      });\r\n      on('setTransition', (_swiper, duration) => {\r\n        if (!swiper.params.parallax.enabled) return;\r\n        setTransition(duration);\r\n      });\r\n    }\r\n\r\n    function Zoom(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on,\r\n        emit\r\n      } = _ref;\r\n      const window = getWindow();\r\n      extendParams({\r\n        zoom: {\r\n          enabled: false,\r\n          maxRatio: 3,\r\n          minRatio: 1,\r\n          toggle: true,\r\n          containerClass: 'swiper-zoom-container',\r\n          zoomedSlideClass: 'swiper-slide-zoomed'\r\n        }\r\n      });\r\n      swiper.zoom = {\r\n        enabled: false\r\n      };\r\n      let currentScale = 1;\r\n      let isScaling = false;\r\n      let fakeGestureTouched;\r\n      let fakeGestureMoved;\r\n      const evCache = [];\r\n      const gesture = {\r\n        originX: 0,\r\n        originY: 0,\r\n        slideEl: undefined,\r\n        slideWidth: undefined,\r\n        slideHeight: undefined,\r\n        imageEl: undefined,\r\n        imageWrapEl: undefined,\r\n        maxRatio: 3\r\n      };\r\n      const image = {\r\n        isTouched: undefined,\r\n        isMoved: undefined,\r\n        currentX: undefined,\r\n        currentY: undefined,\r\n        minX: undefined,\r\n        minY: undefined,\r\n        maxX: undefined,\r\n        maxY: undefined,\r\n        width: undefined,\r\n        height: undefined,\r\n        startX: undefined,\r\n        startY: undefined,\r\n        touchesStart: {},\r\n        touchesCurrent: {}\r\n      };\r\n      const velocity = {\r\n        x: undefined,\r\n        y: undefined,\r\n        prevPositionX: undefined,\r\n        prevPositionY: undefined,\r\n        prevTime: undefined\r\n      };\r\n      let scale = 1;\r\n      Object.defineProperty(swiper.zoom, 'scale', {\r\n        get() {\r\n          return scale;\r\n        },\r\n        set(value) {\r\n          if (scale !== value) {\r\n            const imageEl = gesture.imageEl;\r\n            const slideEl = gesture.slideEl;\r\n            emit('zoomChange', value, imageEl, slideEl);\r\n          }\r\n          scale = value;\r\n        }\r\n      });\r\n      function getDistanceBetweenTouches() {\r\n        if (evCache.length < 2) return 1;\r\n        const x1 = evCache[0].pageX;\r\n        const y1 = evCache[0].pageY;\r\n        const x2 = evCache[1].pageX;\r\n        const y2 = evCache[1].pageY;\r\n        const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\r\n        return distance;\r\n      }\r\n      function getScaleOrigin() {\r\n        if (evCache.length < 2) return {\r\n          x: null,\r\n          y: null\r\n        };\r\n        const box = gesture.imageEl.getBoundingClientRect();\r\n        return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\r\n      }\r\n      function getSlideSelector() {\r\n        return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\r\n      }\r\n      function eventWithinSlide(e) {\r\n        const slideSelector = getSlideSelector();\r\n        if (e.target.matches(slideSelector)) return true;\r\n        if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\r\n        return false;\r\n      }\r\n      function eventWithinZoomContainer(e) {\r\n        const selector = `.${swiper.params.zoom.containerClass}`;\r\n        if (e.target.matches(selector)) return true;\r\n        if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\r\n        return false;\r\n      }\r\n\r\n      // Events\r\n      function onGestureStart(e) {\r\n        if (e.pointerType === 'mouse') {\r\n          evCache.splice(0, evCache.length);\r\n        }\r\n        if (!eventWithinSlide(e)) return;\r\n        const params = swiper.params.zoom;\r\n        fakeGestureTouched = false;\r\n        fakeGestureMoved = false;\r\n        evCache.push(e);\r\n        if (evCache.length < 2) {\r\n          return;\r\n        }\r\n        fakeGestureTouched = true;\r\n        gesture.scaleStart = getDistanceBetweenTouches();\r\n        if (!gesture.slideEl) {\r\n          gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\r\n          if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\r\n          let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\r\n          if (imageEl) {\r\n            imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\r\n          }\r\n          gesture.imageEl = imageEl;\r\n          if (imageEl) {\r\n            gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\r\n          } else {\r\n            gesture.imageWrapEl = undefined;\r\n          }\r\n          if (!gesture.imageWrapEl) {\r\n            gesture.imageEl = undefined;\r\n            return;\r\n          }\r\n          gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\r\n        }\r\n        if (gesture.imageEl) {\r\n          const [originX, originY] = getScaleOrigin();\r\n          gesture.originX = originX;\r\n          gesture.originY = originY;\r\n          gesture.imageEl.style.transitionDuration = '0ms';\r\n        }\r\n        isScaling = true;\r\n      }\r\n      function onGestureChange(e) {\r\n        if (!eventWithinSlide(e)) return;\r\n        const params = swiper.params.zoom;\r\n        const zoom = swiper.zoom;\r\n        const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\r\n        if (pointerIndex >= 0) evCache[pointerIndex] = e;\r\n        if (evCache.length < 2) {\r\n          return;\r\n        }\r\n        fakeGestureMoved = true;\r\n        gesture.scaleMove = getDistanceBetweenTouches();\r\n        if (!gesture.imageEl) {\r\n          return;\r\n        }\r\n        zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\r\n        if (zoom.scale > gesture.maxRatio) {\r\n          zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\r\n        }\r\n        if (zoom.scale < params.minRatio) {\r\n          zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\r\n        }\r\n        gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\r\n      }\r\n      function onGestureEnd(e) {\r\n        if (!eventWithinSlide(e)) return;\r\n        if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\r\n        const params = swiper.params.zoom;\r\n        const zoom = swiper.zoom;\r\n        const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\r\n        if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\r\n        if (!fakeGestureTouched || !fakeGestureMoved) {\r\n          return;\r\n        }\r\n        fakeGestureTouched = false;\r\n        fakeGestureMoved = false;\r\n        if (!gesture.imageEl) return;\r\n        zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\r\n        gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\r\n        gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\r\n        currentScale = zoom.scale;\r\n        isScaling = false;\r\n        if (zoom.scale > 1 && gesture.slideEl) {\r\n          gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\r\n        } else if (zoom.scale <= 1 && gesture.slideEl) {\r\n          gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\r\n        }\r\n        if (zoom.scale === 1) {\r\n          gesture.originX = 0;\r\n          gesture.originY = 0;\r\n          gesture.slideEl = undefined;\r\n        }\r\n      }\r\n      function onTouchStart(e) {\r\n        const device = swiper.device;\r\n        if (!gesture.imageEl) return;\r\n        if (image.isTouched) return;\r\n        if (device.android && e.cancelable) e.preventDefault();\r\n        image.isTouched = true;\r\n        const event = evCache.length > 0 ? evCache[0] : e;\r\n        image.touchesStart.x = event.pageX;\r\n        image.touchesStart.y = event.pageY;\r\n      }\r\n      function onTouchMove(e) {\r\n        if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\r\n        const zoom = swiper.zoom;\r\n        if (!gesture.imageEl) return;\r\n        if (!image.isTouched || !gesture.slideEl) return;\r\n        if (!image.isMoved) {\r\n          image.width = gesture.imageEl.offsetWidth;\r\n          image.height = gesture.imageEl.offsetHeight;\r\n          image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\r\n          image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\r\n          gesture.slideWidth = gesture.slideEl.offsetWidth;\r\n          gesture.slideHeight = gesture.slideEl.offsetHeight;\r\n          gesture.imageWrapEl.style.transitionDuration = '0ms';\r\n        }\r\n        // Define if we need image drag\r\n        const scaledWidth = image.width * zoom.scale;\r\n        const scaledHeight = image.height * zoom.scale;\r\n        if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\r\n        image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\r\n        image.maxX = -image.minX;\r\n        image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\r\n        image.maxY = -image.minY;\r\n        image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\r\n        image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\r\n        const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\r\n        if (touchesDiff > 5) {\r\n          swiper.allowClick = false;\r\n        }\r\n        if (!image.isMoved && !isScaling) {\r\n          if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\r\n            image.isTouched = false;\r\n            return;\r\n          }\r\n          if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\r\n            image.isTouched = false;\r\n            return;\r\n          }\r\n        }\r\n        if (e.cancelable) {\r\n          e.preventDefault();\r\n        }\r\n        e.stopPropagation();\r\n        image.isMoved = true;\r\n        const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\r\n        const {\r\n          originX,\r\n          originY\r\n        } = gesture;\r\n        image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\r\n        image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\r\n        if (image.currentX < image.minX) {\r\n          image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\r\n        }\r\n        if (image.currentX > image.maxX) {\r\n          image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\r\n        }\r\n        if (image.currentY < image.minY) {\r\n          image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\r\n        }\r\n        if (image.currentY > image.maxY) {\r\n          image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\r\n        }\r\n\r\n        // Velocity\r\n        if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\r\n        if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\r\n        if (!velocity.prevTime) velocity.prevTime = Date.now();\r\n        velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\r\n        velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\r\n        if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\r\n        if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\r\n        velocity.prevPositionX = image.touchesCurrent.x;\r\n        velocity.prevPositionY = image.touchesCurrent.y;\r\n        velocity.prevTime = Date.now();\r\n        gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\r\n      }\r\n      function onTouchEnd() {\r\n        const zoom = swiper.zoom;\r\n        if (!gesture.imageEl) return;\r\n        if (!image.isTouched || !image.isMoved) {\r\n          image.isTouched = false;\r\n          image.isMoved = false;\r\n          return;\r\n        }\r\n        image.isTouched = false;\r\n        image.isMoved = false;\r\n        let momentumDurationX = 300;\r\n        let momentumDurationY = 300;\r\n        const momentumDistanceX = velocity.x * momentumDurationX;\r\n        const newPositionX = image.currentX + momentumDistanceX;\r\n        const momentumDistanceY = velocity.y * momentumDurationY;\r\n        const newPositionY = image.currentY + momentumDistanceY;\r\n\r\n        // Fix duration\r\n        if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\r\n        if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\r\n        const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\r\n        image.currentX = newPositionX;\r\n        image.currentY = newPositionY;\r\n        // Define if we need image drag\r\n        const scaledWidth = image.width * zoom.scale;\r\n        const scaledHeight = image.height * zoom.scale;\r\n        image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\r\n        image.maxX = -image.minX;\r\n        image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\r\n        image.maxY = -image.minY;\r\n        image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\r\n        image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\r\n        gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\r\n        gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\r\n      }\r\n      function onTransitionEnd() {\r\n        const zoom = swiper.zoom;\r\n        if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\r\n          if (gesture.imageEl) {\r\n            gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\r\n          }\r\n          if (gesture.imageWrapEl) {\r\n            gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\r\n          }\r\n          gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\r\n          zoom.scale = 1;\r\n          currentScale = 1;\r\n          gesture.slideEl = undefined;\r\n          gesture.imageEl = undefined;\r\n          gesture.imageWrapEl = undefined;\r\n          gesture.originX = 0;\r\n          gesture.originY = 0;\r\n        }\r\n      }\r\n      function zoomIn(e) {\r\n        const zoom = swiper.zoom;\r\n        const params = swiper.params.zoom;\r\n        if (!gesture.slideEl) {\r\n          if (e && e.target) {\r\n            gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\r\n          }\r\n          if (!gesture.slideEl) {\r\n            if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\r\n              gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\r\n            } else {\r\n              gesture.slideEl = swiper.slides[swiper.activeIndex];\r\n            }\r\n          }\r\n          let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\r\n          if (imageEl) {\r\n            imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\r\n          }\r\n          gesture.imageEl = imageEl;\r\n          if (imageEl) {\r\n            gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\r\n          } else {\r\n            gesture.imageWrapEl = undefined;\r\n          }\r\n        }\r\n        if (!gesture.imageEl || !gesture.imageWrapEl) return;\r\n        if (swiper.params.cssMode) {\r\n          swiper.wrapperEl.style.overflow = 'hidden';\r\n          swiper.wrapperEl.style.touchAction = 'none';\r\n        }\r\n        gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\r\n        let touchX;\r\n        let touchY;\r\n        let offsetX;\r\n        let offsetY;\r\n        let diffX;\r\n        let diffY;\r\n        let translateX;\r\n        let translateY;\r\n        let imageWidth;\r\n        let imageHeight;\r\n        let scaledWidth;\r\n        let scaledHeight;\r\n        let translateMinX;\r\n        let translateMinY;\r\n        let translateMaxX;\r\n        let translateMaxY;\r\n        let slideWidth;\r\n        let slideHeight;\r\n        if (typeof image.touchesStart.x === 'undefined' && e) {\r\n          touchX = e.pageX;\r\n          touchY = e.pageY;\r\n        } else {\r\n          touchX = image.touchesStart.x;\r\n          touchY = image.touchesStart.y;\r\n        }\r\n        const forceZoomRatio = typeof e === 'number' ? e : null;\r\n        if (currentScale === 1 && forceZoomRatio) {\r\n          touchX = undefined;\r\n          touchY = undefined;\r\n        }\r\n        zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\r\n        currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\r\n        if (e && !(currentScale === 1 && forceZoomRatio)) {\r\n          slideWidth = gesture.slideEl.offsetWidth;\r\n          slideHeight = gesture.slideEl.offsetHeight;\r\n          offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\r\n          offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\r\n          diffX = offsetX + slideWidth / 2 - touchX;\r\n          diffY = offsetY + slideHeight / 2 - touchY;\r\n          imageWidth = gesture.imageEl.offsetWidth;\r\n          imageHeight = gesture.imageEl.offsetHeight;\r\n          scaledWidth = imageWidth * zoom.scale;\r\n          scaledHeight = imageHeight * zoom.scale;\r\n          translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\r\n          translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\r\n          translateMaxX = -translateMinX;\r\n          translateMaxY = -translateMinY;\r\n          translateX = diffX * zoom.scale;\r\n          translateY = diffY * zoom.scale;\r\n          if (translateX < translateMinX) {\r\n            translateX = translateMinX;\r\n          }\r\n          if (translateX > translateMaxX) {\r\n            translateX = translateMaxX;\r\n          }\r\n          if (translateY < translateMinY) {\r\n            translateY = translateMinY;\r\n          }\r\n          if (translateY > translateMaxY) {\r\n            translateY = translateMaxY;\r\n          }\r\n        } else {\r\n          translateX = 0;\r\n          translateY = 0;\r\n        }\r\n        if (forceZoomRatio && zoom.scale === 1) {\r\n          gesture.originX = 0;\r\n          gesture.originY = 0;\r\n        }\r\n        gesture.imageWrapEl.style.transitionDuration = '300ms';\r\n        gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\r\n        gesture.imageEl.style.transitionDuration = '300ms';\r\n        gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\r\n      }\r\n      function zoomOut() {\r\n        const zoom = swiper.zoom;\r\n        const params = swiper.params.zoom;\r\n        if (!gesture.slideEl) {\r\n          if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\r\n            gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\r\n          } else {\r\n            gesture.slideEl = swiper.slides[swiper.activeIndex];\r\n          }\r\n          let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\r\n          if (imageEl) {\r\n            imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\r\n          }\r\n          gesture.imageEl = imageEl;\r\n          if (imageEl) {\r\n            gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\r\n          } else {\r\n            gesture.imageWrapEl = undefined;\r\n          }\r\n        }\r\n        if (!gesture.imageEl || !gesture.imageWrapEl) return;\r\n        if (swiper.params.cssMode) {\r\n          swiper.wrapperEl.style.overflow = '';\r\n          swiper.wrapperEl.style.touchAction = '';\r\n        }\r\n        zoom.scale = 1;\r\n        currentScale = 1;\r\n        gesture.imageWrapEl.style.transitionDuration = '300ms';\r\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\r\n        gesture.imageEl.style.transitionDuration = '300ms';\r\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\r\n        gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\r\n        gesture.slideEl = undefined;\r\n        gesture.originX = 0;\r\n        gesture.originY = 0;\r\n      }\r\n\r\n      // Toggle Zoom\r\n      function zoomToggle(e) {\r\n        const zoom = swiper.zoom;\r\n        if (zoom.scale && zoom.scale !== 1) {\r\n          // Zoom Out\r\n          zoomOut();\r\n        } else {\r\n          // Zoom In\r\n          zoomIn(e);\r\n        }\r\n      }\r\n      function getListeners() {\r\n        const passiveListener = swiper.params.passiveListeners ? {\r\n          passive: true,\r\n          capture: false\r\n        } : false;\r\n        const activeListenerWithCapture = swiper.params.passiveListeners ? {\r\n          passive: false,\r\n          capture: true\r\n        } : true;\r\n        return {\r\n          passiveListener,\r\n          activeListenerWithCapture\r\n        };\r\n      }\r\n\r\n      // Attach/Detach Events\r\n      function enable() {\r\n        const zoom = swiper.zoom;\r\n        if (zoom.enabled) return;\r\n        zoom.enabled = true;\r\n        const {\r\n          passiveListener,\r\n          activeListenerWithCapture\r\n        } = getListeners();\r\n\r\n        // Scale image\r\n        swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\r\n        swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\r\n        ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\r\n          swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\r\n        });\r\n\r\n        // Move image\r\n        swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\r\n      }\r\n      function disable() {\r\n        const zoom = swiper.zoom;\r\n        if (!zoom.enabled) return;\r\n        zoom.enabled = false;\r\n        const {\r\n          passiveListener,\r\n          activeListenerWithCapture\r\n        } = getListeners();\r\n\r\n        // Scale image\r\n        swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\r\n        swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\r\n        ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\r\n          swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\r\n        });\r\n\r\n        // Move image\r\n        swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\r\n      }\r\n      on('init', () => {\r\n        if (swiper.params.zoom.enabled) {\r\n          enable();\r\n        }\r\n      });\r\n      on('destroy', () => {\r\n        disable();\r\n      });\r\n      on('touchStart', (_s, e) => {\r\n        if (!swiper.zoom.enabled) return;\r\n        onTouchStart(e);\r\n      });\r\n      on('touchEnd', (_s, e) => {\r\n        if (!swiper.zoom.enabled) return;\r\n        onTouchEnd();\r\n      });\r\n      on('doubleTap', (_s, e) => {\r\n        if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\r\n          zoomToggle(e);\r\n        }\r\n      });\r\n      on('transitionEnd', () => {\r\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\r\n          onTransitionEnd();\r\n        }\r\n      });\r\n      on('slideChange', () => {\r\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\r\n          onTransitionEnd();\r\n        }\r\n      });\r\n      Object.assign(swiper.zoom, {\r\n        enable,\r\n        disable,\r\n        in: zoomIn,\r\n        out: zoomOut,\r\n        toggle: zoomToggle\r\n      });\r\n    }\r\n\r\n    /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\r\n    function Controller(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on\r\n      } = _ref;\r\n      extendParams({\r\n        controller: {\r\n          control: undefined,\r\n          inverse: false,\r\n          by: 'slide' // or 'container'\r\n        }\r\n      });\r\n\r\n      swiper.controller = {\r\n        control: undefined\r\n      };\r\n      function LinearSpline(x, y) {\r\n        const binarySearch = (function search() {\r\n          let maxIndex;\r\n          let minIndex;\r\n          let guess;\r\n          return (array, val) => {\r\n            minIndex = -1;\r\n            maxIndex = array.length;\r\n            while (maxIndex - minIndex > 1) {\r\n              guess = maxIndex + minIndex >> 1;\r\n              if (array[guess] <= val) {\r\n                minIndex = guess;\r\n              } else {\r\n                maxIndex = guess;\r\n              }\r\n            }\r\n            return maxIndex;\r\n          };\r\n        })();\r\n        this.x = x;\r\n        this.y = y;\r\n        this.lastIndex = x.length - 1;\r\n        // Given an x value (x2), return the expected y2 value:\r\n        // (x1,y1) is the known point before given value,\r\n        // (x3,y3) is the known point after given value.\r\n        let i1;\r\n        let i3;\r\n        this.interpolate = function interpolate(x2) {\r\n          if (!x2) return 0;\r\n\r\n          // Get the indexes of x1 and x3 (the array indexes before and after given x2):\r\n          i3 = binarySearch(this.x, x2);\r\n          i1 = i3 - 1;\r\n\r\n          // We have our indexes i1 & i3, so we can calculate already:\r\n          // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\r\n          return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\r\n        };\r\n        return this;\r\n      }\r\n      function getInterpolateFunction(c) {\r\n        swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\r\n      }\r\n      function setTranslate(_t, byController) {\r\n        const controlled = swiper.controller.control;\r\n        let multiplier;\r\n        let controlledTranslate;\r\n        const Swiper = swiper.constructor;\r\n        function setControlledTranslate(c) {\r\n          if (c.destroyed) return;\r\n\r\n          // this will create an Interpolate function based on the snapGrids\r\n          // x is the Grid of the scrolled scroller and y will be the controlled scroller\r\n          // it makes sense to create this only once and recall it for the interpolation\r\n          // the function does a lot of value caching for performance\r\n          const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\r\n          if (swiper.params.controller.by === 'slide') {\r\n            getInterpolateFunction(c);\r\n            // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\r\n            // but it did not work out\r\n            controlledTranslate = -swiper.controller.spline.interpolate(-translate);\r\n          }\r\n          if (!controlledTranslate || swiper.params.controller.by === 'container') {\r\n            multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\r\n            if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\r\n              multiplier = 1;\r\n            }\r\n            controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\r\n          }\r\n          if (swiper.params.controller.inverse) {\r\n            controlledTranslate = c.maxTranslate() - controlledTranslate;\r\n          }\r\n          c.updateProgress(controlledTranslate);\r\n          c.setTranslate(controlledTranslate, swiper);\r\n          c.updateActiveIndex();\r\n          c.updateSlidesClasses();\r\n        }\r\n        if (Array.isArray(controlled)) {\r\n          for (let i = 0; i < controlled.length; i += 1) {\r\n            if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\r\n              setControlledTranslate(controlled[i]);\r\n            }\r\n          }\r\n        } else if (controlled instanceof Swiper && byController !== controlled) {\r\n          setControlledTranslate(controlled);\r\n        }\r\n      }\r\n      function setTransition(duration, byController) {\r\n        const Swiper = swiper.constructor;\r\n        const controlled = swiper.controller.control;\r\n        let i;\r\n        function setControlledTransition(c) {\r\n          if (c.destroyed) return;\r\n          c.setTransition(duration, swiper);\r\n          if (duration !== 0) {\r\n            c.transitionStart();\r\n            if (c.params.autoHeight) {\r\n              nextTick(() => {\r\n                c.updateAutoHeight();\r\n              });\r\n            }\r\n            elementTransitionEnd(c.wrapperEl, () => {\r\n              if (!controlled) return;\r\n              c.transitionEnd();\r\n            });\r\n          }\r\n        }\r\n        if (Array.isArray(controlled)) {\r\n          for (i = 0; i < controlled.length; i += 1) {\r\n            if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\r\n              setControlledTransition(controlled[i]);\r\n            }\r\n          }\r\n        } else if (controlled instanceof Swiper && byController !== controlled) {\r\n          setControlledTransition(controlled);\r\n        }\r\n      }\r\n      function removeSpline() {\r\n        if (!swiper.controller.control) return;\r\n        if (swiper.controller.spline) {\r\n          swiper.controller.spline = undefined;\r\n          delete swiper.controller.spline;\r\n        }\r\n      }\r\n      on('beforeInit', () => {\r\n        if (typeof window !== 'undefined' && (\r\n        // eslint-disable-line\r\n        typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\r\n          const controlElement = document.querySelector(swiper.params.controller.control);\r\n          if (controlElement && controlElement.swiper) {\r\n            swiper.controller.control = controlElement.swiper;\r\n          } else if (controlElement) {\r\n            const onControllerSwiper = e => {\r\n              swiper.controller.control = e.detail[0];\r\n              swiper.update();\r\n              controlElement.removeEventListener('init', onControllerSwiper);\r\n            };\r\n            controlElement.addEventListener('init', onControllerSwiper);\r\n          }\r\n          return;\r\n        }\r\n        swiper.controller.control = swiper.params.controller.control;\r\n      });\r\n      on('update', () => {\r\n        removeSpline();\r\n      });\r\n      on('resize', () => {\r\n        removeSpline();\r\n      });\r\n      on('observerUpdate', () => {\r\n        removeSpline();\r\n      });\r\n      on('setTranslate', (_s, translate, byController) => {\r\n        if (!swiper.controller.control || swiper.controller.control.destroyed) return;\r\n        swiper.controller.setTranslate(translate, byController);\r\n      });\r\n      on('setTransition', (_s, duration, byController) => {\r\n        if (!swiper.controller.control || swiper.controller.control.destroyed) return;\r\n        swiper.controller.setTransition(duration, byController);\r\n      });\r\n      Object.assign(swiper.controller, {\r\n        setTranslate,\r\n        setTransition\r\n      });\r\n    }\r\n\r\n    function A11y(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on\r\n      } = _ref;\r\n      extendParams({\r\n        a11y: {\r\n          enabled: true,\r\n          notificationClass: 'swiper-notification',\r\n          prevSlideMessage: 'Previous slide',\r\n          nextSlideMessage: 'Next slide',\r\n          firstSlideMessage: 'This is the first slide',\r\n          lastSlideMessage: 'This is the last slide',\r\n          paginationBulletMessage: 'Go to slide {{index}}',\r\n          slideLabelMessage: '{{index}} / {{slidesLength}}',\r\n          containerMessage: null,\r\n          containerRoleDescriptionMessage: null,\r\n          itemRoleDescriptionMessage: null,\r\n          slideRole: 'group',\r\n          id: null\r\n        }\r\n      });\r\n      swiper.a11y = {\r\n        clicked: false\r\n      };\r\n      let liveRegion = null;\r\n      function notify(message) {\r\n        const notification = liveRegion;\r\n        if (notification.length === 0) return;\r\n        notification.innerHTML = '';\r\n        notification.innerHTML = message;\r\n      }\r\n      const makeElementsArray = el => {\r\n        if (!Array.isArray(el)) el = [el].filter(e => !!e);\r\n        return el;\r\n      };\r\n      function getRandomNumber(size) {\r\n        if (size === void 0) {\r\n          size = 16;\r\n        }\r\n        const randomChar = () => Math.round(16 * Math.random()).toString(16);\r\n        return 'x'.repeat(size).replace(/x/g, randomChar);\r\n      }\r\n      function makeElFocusable(el) {\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          subEl.setAttribute('tabIndex', '0');\r\n        });\r\n      }\r\n      function makeElNotFocusable(el) {\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          subEl.setAttribute('tabIndex', '-1');\r\n        });\r\n      }\r\n      function addElRole(el, role) {\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          subEl.setAttribute('role', role);\r\n        });\r\n      }\r\n      function addElRoleDescription(el, description) {\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          subEl.setAttribute('aria-roledescription', description);\r\n        });\r\n      }\r\n      function addElControls(el, controls) {\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          subEl.setAttribute('aria-controls', controls);\r\n        });\r\n      }\r\n      function addElLabel(el, label) {\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          subEl.setAttribute('aria-label', label);\r\n        });\r\n      }\r\n      function addElId(el, id) {\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          subEl.setAttribute('id', id);\r\n        });\r\n      }\r\n      function addElLive(el, live) {\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          subEl.setAttribute('aria-live', live);\r\n        });\r\n      }\r\n      function disableEl(el) {\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          subEl.setAttribute('aria-disabled', true);\r\n        });\r\n      }\r\n      function enableEl(el) {\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          subEl.setAttribute('aria-disabled', false);\r\n        });\r\n      }\r\n      function onEnterOrSpaceKey(e) {\r\n        if (e.keyCode !== 13 && e.keyCode !== 32) return;\r\n        const params = swiper.params.a11y;\r\n        const targetEl = e.target;\r\n        if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\r\n          if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\r\n        }\r\n        if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\r\n          if (!(swiper.isEnd && !swiper.params.loop)) {\r\n            swiper.slideNext();\r\n          }\r\n          if (swiper.isEnd) {\r\n            notify(params.lastSlideMessage);\r\n          } else {\r\n            notify(params.nextSlideMessage);\r\n          }\r\n        }\r\n        if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\r\n          if (!(swiper.isBeginning && !swiper.params.loop)) {\r\n            swiper.slidePrev();\r\n          }\r\n          if (swiper.isBeginning) {\r\n            notify(params.firstSlideMessage);\r\n          } else {\r\n            notify(params.prevSlideMessage);\r\n          }\r\n        }\r\n        if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\r\n          targetEl.click();\r\n        }\r\n      }\r\n      function updateNavigation() {\r\n        if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\r\n        const {\r\n          nextEl,\r\n          prevEl\r\n        } = swiper.navigation;\r\n        if (prevEl) {\r\n          if (swiper.isBeginning) {\r\n            disableEl(prevEl);\r\n            makeElNotFocusable(prevEl);\r\n          } else {\r\n            enableEl(prevEl);\r\n            makeElFocusable(prevEl);\r\n          }\r\n        }\r\n        if (nextEl) {\r\n          if (swiper.isEnd) {\r\n            disableEl(nextEl);\r\n            makeElNotFocusable(nextEl);\r\n          } else {\r\n            enableEl(nextEl);\r\n            makeElFocusable(nextEl);\r\n          }\r\n        }\r\n      }\r\n      function hasPagination() {\r\n        return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\r\n      }\r\n      function hasClickablePagination() {\r\n        return hasPagination() && swiper.params.pagination.clickable;\r\n      }\r\n      function updatePagination() {\r\n        const params = swiper.params.a11y;\r\n        if (!hasPagination()) return;\r\n        swiper.pagination.bullets.forEach(bulletEl => {\r\n          if (swiper.params.pagination.clickable) {\r\n            makeElFocusable(bulletEl);\r\n            if (!swiper.params.pagination.renderBullet) {\r\n              addElRole(bulletEl, 'button');\r\n              addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\r\n            }\r\n          }\r\n          if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\r\n            bulletEl.setAttribute('aria-current', 'true');\r\n          } else {\r\n            bulletEl.removeAttribute('aria-current');\r\n          }\r\n        });\r\n      }\r\n      const initNavEl = (el, wrapperId, message) => {\r\n        makeElFocusable(el);\r\n        if (el.tagName !== 'BUTTON') {\r\n          addElRole(el, 'button');\r\n          el.addEventListener('keydown', onEnterOrSpaceKey);\r\n        }\r\n        addElLabel(el, message);\r\n        addElControls(el, wrapperId);\r\n      };\r\n      const handlePointerDown = () => {\r\n        swiper.a11y.clicked = true;\r\n      };\r\n      const handlePointerUp = () => {\r\n        requestAnimationFrame(() => {\r\n          requestAnimationFrame(() => {\r\n            if (!swiper.destroyed) {\r\n              swiper.a11y.clicked = false;\r\n            }\r\n          });\r\n        });\r\n      };\r\n      const handleFocus = e => {\r\n        if (swiper.a11y.clicked) return;\r\n        const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\r\n        if (!slideEl || !swiper.slides.includes(slideEl)) return;\r\n        const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\r\n        const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\r\n        if (isActive || isVisible) return;\r\n        if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\r\n        if (swiper.isHorizontal()) {\r\n          swiper.el.scrollLeft = 0;\r\n        } else {\r\n          swiper.el.scrollTop = 0;\r\n        }\r\n        swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\r\n      };\r\n      const initSlides = () => {\r\n        const params = swiper.params.a11y;\r\n        if (params.itemRoleDescriptionMessage) {\r\n          addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\r\n        }\r\n        if (params.slideRole) {\r\n          addElRole(swiper.slides, params.slideRole);\r\n        }\r\n        const slidesLength = swiper.slides.length;\r\n        if (params.slideLabelMessage) {\r\n          swiper.slides.forEach((slideEl, index) => {\r\n            const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\r\n            const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\r\n            addElLabel(slideEl, ariaLabelMessage);\r\n          });\r\n        }\r\n      };\r\n      const init = () => {\r\n        const params = swiper.params.a11y;\r\n        if (swiper.isElement) {\r\n          swiper.el.shadowEl.append(liveRegion);\r\n        } else {\r\n          swiper.el.append(liveRegion);\r\n        }\r\n\r\n        // Container\r\n        const containerEl = swiper.el;\r\n        if (params.containerRoleDescriptionMessage) {\r\n          addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\r\n        }\r\n        if (params.containerMessage) {\r\n          addElLabel(containerEl, params.containerMessage);\r\n        }\r\n\r\n        // Wrapper\r\n        const wrapperEl = swiper.wrapperEl;\r\n        const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\r\n        const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\r\n        addElId(wrapperEl, wrapperId);\r\n        addElLive(wrapperEl, live);\r\n\r\n        // Slide\r\n        initSlides();\r\n\r\n        // Navigation\r\n        let {\r\n          nextEl,\r\n          prevEl\r\n        } = swiper.navigation ? swiper.navigation : {};\r\n        nextEl = makeElementsArray(nextEl);\r\n        prevEl = makeElementsArray(prevEl);\r\n        if (nextEl) {\r\n          nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\r\n        }\r\n        if (prevEl) {\r\n          prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\r\n        }\r\n\r\n        // Pagination\r\n        if (hasClickablePagination()) {\r\n          const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\r\n          paginationEl.forEach(el => {\r\n            el.addEventListener('keydown', onEnterOrSpaceKey);\r\n          });\r\n        }\r\n\r\n        // Tab focus\r\n        swiper.el.addEventListener('focus', handleFocus, true);\r\n        swiper.el.addEventListener('pointerdown', handlePointerDown, true);\r\n        swiper.el.addEventListener('pointerup', handlePointerUp, true);\r\n      };\r\n      function destroy() {\r\n        if (liveRegion) liveRegion.remove();\r\n        let {\r\n          nextEl,\r\n          prevEl\r\n        } = swiper.navigation ? swiper.navigation : {};\r\n        nextEl = makeElementsArray(nextEl);\r\n        prevEl = makeElementsArray(prevEl);\r\n        if (nextEl) {\r\n          nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\r\n        }\r\n        if (prevEl) {\r\n          prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\r\n        }\r\n\r\n        // Pagination\r\n        if (hasClickablePagination()) {\r\n          const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\r\n          paginationEl.forEach(el => {\r\n            el.removeEventListener('keydown', onEnterOrSpaceKey);\r\n          });\r\n        }\r\n\r\n        // Tab focus\r\n        swiper.el.removeEventListener('focus', handleFocus, true);\r\n        swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\r\n        swiper.el.removeEventListener('pointerup', handlePointerUp, true);\r\n      }\r\n      on('beforeInit', () => {\r\n        liveRegion = createElement('span', swiper.params.a11y.notificationClass);\r\n        liveRegion.setAttribute('aria-live', 'assertive');\r\n        liveRegion.setAttribute('aria-atomic', 'true');\r\n      });\r\n      on('afterInit', () => {\r\n        if (!swiper.params.a11y.enabled) return;\r\n        init();\r\n      });\r\n      on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\r\n        if (!swiper.params.a11y.enabled) return;\r\n        initSlides();\r\n      });\r\n      on('fromEdge toEdge afterInit lock unlock', () => {\r\n        if (!swiper.params.a11y.enabled) return;\r\n        updateNavigation();\r\n      });\r\n      on('paginationUpdate', () => {\r\n        if (!swiper.params.a11y.enabled) return;\r\n        updatePagination();\r\n      });\r\n      on('destroy', () => {\r\n        if (!swiper.params.a11y.enabled) return;\r\n        destroy();\r\n      });\r\n    }\r\n\r\n    function History(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on\r\n      } = _ref;\r\n      extendParams({\r\n        history: {\r\n          enabled: false,\r\n          root: '',\r\n          replaceState: false,\r\n          key: 'slides',\r\n          keepQuery: false\r\n        }\r\n      });\r\n      let initialized = false;\r\n      let paths = {};\r\n      const slugify = text => {\r\n        return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\r\n      };\r\n      const getPathValues = urlOverride => {\r\n        const window = getWindow();\r\n        let location;\r\n        if (urlOverride) {\r\n          location = new URL(urlOverride);\r\n        } else {\r\n          location = window.location;\r\n        }\r\n        const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\r\n        const total = pathArray.length;\r\n        const key = pathArray[total - 2];\r\n        const value = pathArray[total - 1];\r\n        return {\r\n          key,\r\n          value\r\n        };\r\n      };\r\n      const setHistory = (key, index) => {\r\n        const window = getWindow();\r\n        if (!initialized || !swiper.params.history.enabled) return;\r\n        let location;\r\n        if (swiper.params.url) {\r\n          location = new URL(swiper.params.url);\r\n        } else {\r\n          location = window.location;\r\n        }\r\n        const slide = swiper.slides[index];\r\n        let value = slugify(slide.getAttribute('data-history'));\r\n        if (swiper.params.history.root.length > 0) {\r\n          let root = swiper.params.history.root;\r\n          if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\r\n          value = `${root}/${key ? `${key}/` : ''}${value}`;\r\n        } else if (!location.pathname.includes(key)) {\r\n          value = `${key ? `${key}/` : ''}${value}`;\r\n        }\r\n        if (swiper.params.history.keepQuery) {\r\n          value += location.search;\r\n        }\r\n        const currentState = window.history.state;\r\n        if (currentState && currentState.value === value) {\r\n          return;\r\n        }\r\n        if (swiper.params.history.replaceState) {\r\n          window.history.replaceState({\r\n            value\r\n          }, null, value);\r\n        } else {\r\n          window.history.pushState({\r\n            value\r\n          }, null, value);\r\n        }\r\n      };\r\n      const scrollToSlide = (speed, value, runCallbacks) => {\r\n        if (value) {\r\n          for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\r\n            const slide = swiper.slides[i];\r\n            const slideHistory = slugify(slide.getAttribute('data-history'));\r\n            if (slideHistory === value) {\r\n              const index = swiper.getSlideIndex(slide);\r\n              swiper.slideTo(index, speed, runCallbacks);\r\n            }\r\n          }\r\n        } else {\r\n          swiper.slideTo(0, speed, runCallbacks);\r\n        }\r\n      };\r\n      const setHistoryPopState = () => {\r\n        paths = getPathValues(swiper.params.url);\r\n        scrollToSlide(swiper.params.speed, paths.value, false);\r\n      };\r\n      const init = () => {\r\n        const window = getWindow();\r\n        if (!swiper.params.history) return;\r\n        if (!window.history || !window.history.pushState) {\r\n          swiper.params.history.enabled = false;\r\n          swiper.params.hashNavigation.enabled = true;\r\n          return;\r\n        }\r\n        initialized = true;\r\n        paths = getPathValues(swiper.params.url);\r\n        if (!paths.key && !paths.value) {\r\n          if (!swiper.params.history.replaceState) {\r\n            window.addEventListener('popstate', setHistoryPopState);\r\n          }\r\n          return;\r\n        }\r\n        scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\r\n        if (!swiper.params.history.replaceState) {\r\n          window.addEventListener('popstate', setHistoryPopState);\r\n        }\r\n      };\r\n      const destroy = () => {\r\n        const window = getWindow();\r\n        if (!swiper.params.history.replaceState) {\r\n          window.removeEventListener('popstate', setHistoryPopState);\r\n        }\r\n      };\r\n      on('init', () => {\r\n        if (swiper.params.history.enabled) {\r\n          init();\r\n        }\r\n      });\r\n      on('destroy', () => {\r\n        if (swiper.params.history.enabled) {\r\n          destroy();\r\n        }\r\n      });\r\n      on('transitionEnd _freeModeNoMomentumRelease', () => {\r\n        if (initialized) {\r\n          setHistory(swiper.params.history.key, swiper.activeIndex);\r\n        }\r\n      });\r\n      on('slideChange', () => {\r\n        if (initialized && swiper.params.cssMode) {\r\n          setHistory(swiper.params.history.key, swiper.activeIndex);\r\n        }\r\n      });\r\n    }\r\n\r\n    function HashNavigation(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        emit,\r\n        on\r\n      } = _ref;\r\n      let initialized = false;\r\n      const document = getDocument();\r\n      const window = getWindow();\r\n      extendParams({\r\n        hashNavigation: {\r\n          enabled: false,\r\n          replaceState: false,\r\n          watchState: false,\r\n          getSlideIndex(_s, hash) {\r\n            if (swiper.virtual && swiper.params.virtual.enabled) {\r\n              const slideWithHash = swiper.slides.filter(slideEl => slideEl.getAttribute('data-hash') === hash)[0];\r\n              if (!slideWithHash) return 0;\r\n              const index = parseInt(slideWithHash.getAttribute('data-swiper-slide-index'), 10);\r\n              return index;\r\n            }\r\n            return swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${hash}\"], swiper-slide[data-hash=\"${hash}\"]`)[0]);\r\n          }\r\n        }\r\n      });\r\n      const onHashChange = () => {\r\n        emit('hashChange');\r\n        const newHash = document.location.hash.replace('#', '');\r\n        const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\r\n        const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') : '';\r\n        if (newHash !== activeSlideHash) {\r\n          const newIndex = swiper.params.hashNavigation.getSlideIndex(swiper, newHash);\r\n          if (typeof newIndex === 'undefined' || Number.isNaN(newIndex)) return;\r\n          swiper.slideTo(newIndex);\r\n        }\r\n      };\r\n      const setHash = () => {\r\n        if (!initialized || !swiper.params.hashNavigation.enabled) return;\r\n        const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\r\n        const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') || activeSlideEl.getAttribute('data-history') : '';\r\n        if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\r\n          window.history.replaceState(null, null, `#${activeSlideHash}` || '');\r\n          emit('hashSet');\r\n        } else {\r\n          document.location.hash = activeSlideHash || '';\r\n          emit('hashSet');\r\n        }\r\n      };\r\n      const init = () => {\r\n        if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\r\n        initialized = true;\r\n        const hash = document.location.hash.replace('#', '');\r\n        if (hash) {\r\n          const speed = 0;\r\n          const index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);\r\n          swiper.slideTo(index || 0, speed, swiper.params.runCallbacksOnInit, true);\r\n        }\r\n        if (swiper.params.hashNavigation.watchState) {\r\n          window.addEventListener('hashchange', onHashChange);\r\n        }\r\n      };\r\n      const destroy = () => {\r\n        if (swiper.params.hashNavigation.watchState) {\r\n          window.removeEventListener('hashchange', onHashChange);\r\n        }\r\n      };\r\n      on('init', () => {\r\n        if (swiper.params.hashNavigation.enabled) {\r\n          init();\r\n        }\r\n      });\r\n      on('destroy', () => {\r\n        if (swiper.params.hashNavigation.enabled) {\r\n          destroy();\r\n        }\r\n      });\r\n      on('transitionEnd _freeModeNoMomentumRelease', () => {\r\n        if (initialized) {\r\n          setHash();\r\n        }\r\n      });\r\n      on('slideChange', () => {\r\n        if (initialized && swiper.params.cssMode) {\r\n          setHash();\r\n        }\r\n      });\r\n    }\r\n\r\n    /* eslint no-underscore-dangle: \"off\" */\r\n    function Autoplay(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on,\r\n        emit,\r\n        params\r\n      } = _ref;\r\n      swiper.autoplay = {\r\n        running: false,\r\n        paused: false,\r\n        timeLeft: 0\r\n      };\r\n      extendParams({\r\n        autoplay: {\r\n          enabled: false,\r\n          delay: 3000,\r\n          waitForTransition: true,\r\n          disableOnInteraction: true,\r\n          stopOnLastSlide: false,\r\n          reverseDirection: false,\r\n          pauseOnMouseEnter: false\r\n        }\r\n      });\r\n      let timeout;\r\n      let raf;\r\n      let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\r\n      let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\r\n      let autoplayTimeLeft;\r\n      let autoplayStartTime = new Date().getTime;\r\n      let wasPaused;\r\n      let isTouched;\r\n      let pausedByTouch;\r\n      let touchStartTimeout;\r\n      let slideChanged;\r\n      let pausedByInteraction;\r\n      function onTransitionEnd(e) {\r\n        if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\r\n        if (e.target !== swiper.wrapperEl) return;\r\n        swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\r\n        resume();\r\n      }\r\n      const calcTimeLeft = () => {\r\n        if (swiper.destroyed || !swiper.autoplay.running) return;\r\n        if (swiper.autoplay.paused) {\r\n          wasPaused = true;\r\n        } else if (wasPaused) {\r\n          autoplayDelayCurrent = autoplayTimeLeft;\r\n          wasPaused = false;\r\n        }\r\n        const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\r\n        swiper.autoplay.timeLeft = timeLeft;\r\n        emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\r\n        raf = requestAnimationFrame(() => {\r\n          calcTimeLeft();\r\n        });\r\n      };\r\n      const getSlideDelay = () => {\r\n        let activeSlideEl;\r\n        if (swiper.virtual && swiper.params.virtual.enabled) {\r\n          activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\r\n        } else {\r\n          activeSlideEl = swiper.slides[swiper.activeIndex];\r\n        }\r\n        if (!activeSlideEl) return undefined;\r\n        const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\r\n        return currentSlideDelay;\r\n      };\r\n      const run = delayForce => {\r\n        if (swiper.destroyed || !swiper.autoplay.running) return;\r\n        cancelAnimationFrame(raf);\r\n        calcTimeLeft();\r\n        let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\r\n        autoplayDelayTotal = swiper.params.autoplay.delay;\r\n        autoplayDelayCurrent = swiper.params.autoplay.delay;\r\n        const currentSlideDelay = getSlideDelay();\r\n        if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\r\n          delay = currentSlideDelay;\r\n          autoplayDelayTotal = currentSlideDelay;\r\n          autoplayDelayCurrent = currentSlideDelay;\r\n        }\r\n        autoplayTimeLeft = delay;\r\n        const speed = swiper.params.speed;\r\n        const proceed = () => {\r\n          if (!swiper || swiper.destroyed) return;\r\n          if (swiper.params.autoplay.reverseDirection) {\r\n            if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\r\n              swiper.slidePrev(speed, true, true);\r\n              emit('autoplay');\r\n            } else if (!swiper.params.autoplay.stopOnLastSlide) {\r\n              swiper.slideTo(swiper.slides.length - 1, speed, true, true);\r\n              emit('autoplay');\r\n            }\r\n          } else {\r\n            if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\r\n              swiper.slideNext(speed, true, true);\r\n              emit('autoplay');\r\n            } else if (!swiper.params.autoplay.stopOnLastSlide) {\r\n              swiper.slideTo(0, speed, true, true);\r\n              emit('autoplay');\r\n            }\r\n          }\r\n          if (swiper.params.cssMode) {\r\n            autoplayStartTime = new Date().getTime();\r\n            requestAnimationFrame(() => {\r\n              run();\r\n            });\r\n          }\r\n        };\r\n        if (delay > 0) {\r\n          clearTimeout(timeout);\r\n          timeout = setTimeout(() => {\r\n            proceed();\r\n          }, delay);\r\n        } else {\r\n          requestAnimationFrame(() => {\r\n            proceed();\r\n          });\r\n        }\r\n\r\n        // eslint-disable-next-line\r\n        return delay;\r\n      };\r\n      const start = () => {\r\n        swiper.autoplay.running = true;\r\n        run();\r\n        emit('autoplayStart');\r\n      };\r\n      const stop = () => {\r\n        swiper.autoplay.running = false;\r\n        clearTimeout(timeout);\r\n        cancelAnimationFrame(raf);\r\n        emit('autoplayStop');\r\n      };\r\n      const pause = (internal, reset) => {\r\n        if (swiper.destroyed || !swiper.autoplay.running) return;\r\n        clearTimeout(timeout);\r\n        if (!internal) {\r\n          pausedByInteraction = true;\r\n        }\r\n        const proceed = () => {\r\n          emit('autoplayPause');\r\n          if (swiper.params.autoplay.waitForTransition) {\r\n            swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\r\n          } else {\r\n            resume();\r\n          }\r\n        };\r\n        swiper.autoplay.paused = true;\r\n        if (reset) {\r\n          if (slideChanged) {\r\n            autoplayTimeLeft = swiper.params.autoplay.delay;\r\n          }\r\n          slideChanged = false;\r\n          proceed();\r\n          return;\r\n        }\r\n        const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\r\n        autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\r\n        if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\r\n        if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\r\n        proceed();\r\n      };\r\n      const resume = () => {\r\n        if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\r\n        autoplayStartTime = new Date().getTime();\r\n        if (pausedByInteraction) {\r\n          pausedByInteraction = false;\r\n          run(autoplayTimeLeft);\r\n        } else {\r\n          run();\r\n        }\r\n        swiper.autoplay.paused = false;\r\n        emit('autoplayResume');\r\n      };\r\n      const onVisibilityChange = () => {\r\n        if (swiper.destroyed || !swiper.autoplay.running) return;\r\n        const document = getDocument();\r\n        if (document.visibilityState === 'hidden') {\r\n          pausedByInteraction = true;\r\n          pause(true);\r\n        }\r\n        if (document.visibilityState === 'visible') {\r\n          resume();\r\n        }\r\n      };\r\n      const onPointerEnter = e => {\r\n        if (e.pointerType !== 'mouse') return;\r\n        pausedByInteraction = true;\r\n        pause(true);\r\n      };\r\n      const onPointerLeave = e => {\r\n        if (e.pointerType !== 'mouse') return;\r\n        if (swiper.autoplay.paused) {\r\n          resume();\r\n        }\r\n      };\r\n      const attachMouseEvents = () => {\r\n        if (swiper.params.autoplay.pauseOnMouseEnter) {\r\n          swiper.el.addEventListener('pointerenter', onPointerEnter);\r\n          swiper.el.addEventListener('pointerleave', onPointerLeave);\r\n        }\r\n      };\r\n      const detachMouseEvents = () => {\r\n        swiper.el.removeEventListener('pointerenter', onPointerEnter);\r\n        swiper.el.removeEventListener('pointerleave', onPointerLeave);\r\n      };\r\n      const attachDocumentEvents = () => {\r\n        const document = getDocument();\r\n        document.addEventListener('visibilitychange', onVisibilityChange);\r\n      };\r\n      const detachDocumentEvents = () => {\r\n        const document = getDocument();\r\n        document.removeEventListener('visibilitychange', onVisibilityChange);\r\n      };\r\n      on('init', () => {\r\n        if (swiper.params.autoplay.enabled) {\r\n          attachMouseEvents();\r\n          attachDocumentEvents();\r\n          autoplayStartTime = new Date().getTime();\r\n          start();\r\n        }\r\n      });\r\n      on('destroy', () => {\r\n        detachMouseEvents();\r\n        detachDocumentEvents();\r\n        if (swiper.autoplay.running) {\r\n          stop();\r\n        }\r\n      });\r\n      on('beforeTransitionStart', (_s, speed, internal) => {\r\n        if (swiper.destroyed || !swiper.autoplay.running) return;\r\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\r\n          pause(true, true);\r\n        } else {\r\n          stop();\r\n        }\r\n      });\r\n      on('sliderFirstMove', () => {\r\n        if (swiper.destroyed || !swiper.autoplay.running) return;\r\n        if (swiper.params.autoplay.disableOnInteraction) {\r\n          stop();\r\n          return;\r\n        }\r\n        isTouched = true;\r\n        pausedByTouch = false;\r\n        pausedByInteraction = false;\r\n        touchStartTimeout = setTimeout(() => {\r\n          pausedByInteraction = true;\r\n          pausedByTouch = true;\r\n          pause(true);\r\n        }, 200);\r\n      });\r\n      on('touchEnd', () => {\r\n        if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\r\n        clearTimeout(touchStartTimeout);\r\n        clearTimeout(timeout);\r\n        if (swiper.params.autoplay.disableOnInteraction) {\r\n          pausedByTouch = false;\r\n          isTouched = false;\r\n          return;\r\n        }\r\n        if (pausedByTouch && swiper.params.cssMode) resume();\r\n        pausedByTouch = false;\r\n        isTouched = false;\r\n      });\r\n      on('slideChange', () => {\r\n        if (swiper.destroyed || !swiper.autoplay.running) return;\r\n        slideChanged = true;\r\n      });\r\n      Object.assign(swiper.autoplay, {\r\n        start,\r\n        stop,\r\n        pause,\r\n        resume\r\n      });\r\n    }\r\n\r\n    function Thumb(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on\r\n      } = _ref;\r\n      extendParams({\r\n        thumbs: {\r\n          swiper: null,\r\n          multipleActiveThumbs: true,\r\n          autoScrollOffset: 0,\r\n          slideThumbActiveClass: 'swiper-slide-thumb-active',\r\n          thumbsContainerClass: 'swiper-thumbs'\r\n        }\r\n      });\r\n      let initialized = false;\r\n      let swiperCreated = false;\r\n      swiper.thumbs = {\r\n        swiper: null\r\n      };\r\n      function onThumbClick() {\r\n        const thumbsSwiper = swiper.thumbs.swiper;\r\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\r\n        const clickedIndex = thumbsSwiper.clickedIndex;\r\n        const clickedSlide = thumbsSwiper.clickedSlide;\r\n        if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\r\n        if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\r\n        let slideToIndex;\r\n        if (thumbsSwiper.params.loop) {\r\n          slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\r\n        } else {\r\n          slideToIndex = clickedIndex;\r\n        }\r\n        if (swiper.params.loop) {\r\n          swiper.slideToLoop(slideToIndex);\r\n        } else {\r\n          swiper.slideTo(slideToIndex);\r\n        }\r\n      }\r\n      function init() {\r\n        const {\r\n          thumbs: thumbsParams\r\n        } = swiper.params;\r\n        if (initialized) return false;\r\n        initialized = true;\r\n        const SwiperClass = swiper.constructor;\r\n        if (thumbsParams.swiper instanceof SwiperClass) {\r\n          swiper.thumbs.swiper = thumbsParams.swiper;\r\n          Object.assign(swiper.thumbs.swiper.originalParams, {\r\n            watchSlidesProgress: true,\r\n            slideToClickedSlide: false\r\n          });\r\n          Object.assign(swiper.thumbs.swiper.params, {\r\n            watchSlidesProgress: true,\r\n            slideToClickedSlide: false\r\n          });\r\n          swiper.thumbs.swiper.update();\r\n        } else if (isObject(thumbsParams.swiper)) {\r\n          const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\r\n          Object.assign(thumbsSwiperParams, {\r\n            watchSlidesProgress: true,\r\n            slideToClickedSlide: false\r\n          });\r\n          swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\r\n          swiperCreated = true;\r\n        }\r\n        swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\r\n        swiper.thumbs.swiper.on('tap', onThumbClick);\r\n        return true;\r\n      }\r\n      function update(initial) {\r\n        const thumbsSwiper = swiper.thumbs.swiper;\r\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\r\n        const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\r\n\r\n        // Activate thumbs\r\n        let thumbsToActivate = 1;\r\n        const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\r\n        if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\r\n          thumbsToActivate = swiper.params.slidesPerView;\r\n        }\r\n        if (!swiper.params.thumbs.multipleActiveThumbs) {\r\n          thumbsToActivate = 1;\r\n        }\r\n        thumbsToActivate = Math.floor(thumbsToActivate);\r\n        thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\r\n        if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\r\n          for (let i = 0; i < thumbsToActivate; i += 1) {\r\n            elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\r\n              slideEl.classList.add(thumbActiveClass);\r\n            });\r\n          }\r\n        } else {\r\n          for (let i = 0; i < thumbsToActivate; i += 1) {\r\n            if (thumbsSwiper.slides[swiper.realIndex + i]) {\r\n              thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\r\n            }\r\n          }\r\n        }\r\n        const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\r\n        const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\r\n        if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\r\n          const currentThumbsIndex = thumbsSwiper.activeIndex;\r\n          let newThumbsIndex;\r\n          let direction;\r\n          if (thumbsSwiper.params.loop) {\r\n            const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\r\n            newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\r\n            direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\r\n          } else {\r\n            newThumbsIndex = swiper.realIndex;\r\n            direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\r\n          }\r\n          if (useOffset) {\r\n            newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\r\n          }\r\n          if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\r\n            if (thumbsSwiper.params.centeredSlides) {\r\n              if (newThumbsIndex > currentThumbsIndex) {\r\n                newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\r\n              } else {\r\n                newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\r\n              }\r\n            } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) ;\r\n            thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\r\n          }\r\n        }\r\n      }\r\n      on('beforeInit', () => {\r\n        const {\r\n          thumbs\r\n        } = swiper.params;\r\n        if (!thumbs || !thumbs.swiper) return;\r\n        if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\r\n          const document = getDocument();\r\n          const getThumbsElementAndInit = () => {\r\n            const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\r\n            if (thumbsElement && thumbsElement.swiper) {\r\n              thumbs.swiper = thumbsElement.swiper;\r\n              init();\r\n              update(true);\r\n            } else if (thumbsElement) {\r\n              const onThumbsSwiper = e => {\r\n                thumbs.swiper = e.detail[0];\r\n                thumbsElement.removeEventListener('init', onThumbsSwiper);\r\n                init();\r\n                update(true);\r\n                thumbs.swiper.update();\r\n                swiper.update();\r\n              };\r\n              thumbsElement.addEventListener('init', onThumbsSwiper);\r\n            }\r\n            return thumbsElement;\r\n          };\r\n          const watchForThumbsToAppear = () => {\r\n            if (swiper.destroyed) return;\r\n            const thumbsElement = getThumbsElementAndInit();\r\n            if (!thumbsElement) {\r\n              requestAnimationFrame(watchForThumbsToAppear);\r\n            }\r\n          };\r\n          requestAnimationFrame(watchForThumbsToAppear);\r\n        } else {\r\n          init();\r\n          update(true);\r\n        }\r\n      });\r\n      on('slideChange update resize observerUpdate', () => {\r\n        update();\r\n      });\r\n      on('setTransition', (_s, duration) => {\r\n        const thumbsSwiper = swiper.thumbs.swiper;\r\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\r\n        thumbsSwiper.setTransition(duration);\r\n      });\r\n      on('beforeDestroy', () => {\r\n        const thumbsSwiper = swiper.thumbs.swiper;\r\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\r\n        if (swiperCreated) {\r\n          thumbsSwiper.destroy();\r\n        }\r\n      });\r\n      Object.assign(swiper.thumbs, {\r\n        init,\r\n        update\r\n      });\r\n    }\r\n\r\n    function freeMode(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        emit,\r\n        once\r\n      } = _ref;\r\n      extendParams({\r\n        freeMode: {\r\n          enabled: false,\r\n          momentum: true,\r\n          momentumRatio: 1,\r\n          momentumBounce: true,\r\n          momentumBounceRatio: 1,\r\n          momentumVelocityRatio: 1,\r\n          sticky: false,\r\n          minimumVelocity: 0.02\r\n        }\r\n      });\r\n      function onTouchStart() {\r\n        const translate = swiper.getTranslate();\r\n        swiper.setTranslate(translate);\r\n        swiper.setTransition(0);\r\n        swiper.touchEventsData.velocities.length = 0;\r\n        swiper.freeMode.onTouchEnd({\r\n          currentPos: swiper.rtl ? swiper.translate : -swiper.translate\r\n        });\r\n      }\r\n      function onTouchMove() {\r\n        const {\r\n          touchEventsData: data,\r\n          touches\r\n        } = swiper;\r\n        // Velocity\r\n        if (data.velocities.length === 0) {\r\n          data.velocities.push({\r\n            position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\r\n            time: data.touchStartTime\r\n          });\r\n        }\r\n        data.velocities.push({\r\n          position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\r\n          time: now()\r\n        });\r\n      }\r\n      function onTouchEnd(_ref2) {\r\n        let {\r\n          currentPos\r\n        } = _ref2;\r\n        const {\r\n          params,\r\n          wrapperEl,\r\n          rtlTranslate: rtl,\r\n          snapGrid,\r\n          touchEventsData: data\r\n        } = swiper;\r\n        // Time diff\r\n        const touchEndTime = now();\r\n        const timeDiff = touchEndTime - data.touchStartTime;\r\n        if (currentPos < -swiper.minTranslate()) {\r\n          swiper.slideTo(swiper.activeIndex);\r\n          return;\r\n        }\r\n        if (currentPos > -swiper.maxTranslate()) {\r\n          if (swiper.slides.length < snapGrid.length) {\r\n            swiper.slideTo(snapGrid.length - 1);\r\n          } else {\r\n            swiper.slideTo(swiper.slides.length - 1);\r\n          }\r\n          return;\r\n        }\r\n        if (params.freeMode.momentum) {\r\n          if (data.velocities.length > 1) {\r\n            const lastMoveEvent = data.velocities.pop();\r\n            const velocityEvent = data.velocities.pop();\r\n            const distance = lastMoveEvent.position - velocityEvent.position;\r\n            const time = lastMoveEvent.time - velocityEvent.time;\r\n            swiper.velocity = distance / time;\r\n            swiper.velocity /= 2;\r\n            if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\r\n              swiper.velocity = 0;\r\n            }\r\n            // this implies that the user stopped moving a finger then released.\r\n            // There would be no events with distance zero, so the last event is stale.\r\n            if (time > 150 || now() - lastMoveEvent.time > 300) {\r\n              swiper.velocity = 0;\r\n            }\r\n          } else {\r\n            swiper.velocity = 0;\r\n          }\r\n          swiper.velocity *= params.freeMode.momentumVelocityRatio;\r\n          data.velocities.length = 0;\r\n          let momentumDuration = 1000 * params.freeMode.momentumRatio;\r\n          const momentumDistance = swiper.velocity * momentumDuration;\r\n          let newPosition = swiper.translate + momentumDistance;\r\n          if (rtl) newPosition = -newPosition;\r\n          let doBounce = false;\r\n          let afterBouncePosition;\r\n          const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\r\n          let needsLoopFix;\r\n          if (newPosition < swiper.maxTranslate()) {\r\n            if (params.freeMode.momentumBounce) {\r\n              if (newPosition + swiper.maxTranslate() < -bounceAmount) {\r\n                newPosition = swiper.maxTranslate() - bounceAmount;\r\n              }\r\n              afterBouncePosition = swiper.maxTranslate();\r\n              doBounce = true;\r\n              data.allowMomentumBounce = true;\r\n            } else {\r\n              newPosition = swiper.maxTranslate();\r\n            }\r\n            if (params.loop && params.centeredSlides) needsLoopFix = true;\r\n          } else if (newPosition > swiper.minTranslate()) {\r\n            if (params.freeMode.momentumBounce) {\r\n              if (newPosition - swiper.minTranslate() > bounceAmount) {\r\n                newPosition = swiper.minTranslate() + bounceAmount;\r\n              }\r\n              afterBouncePosition = swiper.minTranslate();\r\n              doBounce = true;\r\n              data.allowMomentumBounce = true;\r\n            } else {\r\n              newPosition = swiper.minTranslate();\r\n            }\r\n            if (params.loop && params.centeredSlides) needsLoopFix = true;\r\n          } else if (params.freeMode.sticky) {\r\n            let nextSlide;\r\n            for (let j = 0; j < snapGrid.length; j += 1) {\r\n              if (snapGrid[j] > -newPosition) {\r\n                nextSlide = j;\r\n                break;\r\n              }\r\n            }\r\n            if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\r\n              newPosition = snapGrid[nextSlide];\r\n            } else {\r\n              newPosition = snapGrid[nextSlide - 1];\r\n            }\r\n            newPosition = -newPosition;\r\n          }\r\n          if (needsLoopFix) {\r\n            once('transitionEnd', () => {\r\n              swiper.loopFix();\r\n            });\r\n          }\r\n          // Fix duration\r\n          if (swiper.velocity !== 0) {\r\n            if (rtl) {\r\n              momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\r\n            } else {\r\n              momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\r\n            }\r\n            if (params.freeMode.sticky) {\r\n              // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\r\n              // event, then durations can be 20+ seconds to slide one (or zero!) slides.\r\n              // It's easy to see this when simulating touch with mouse events. To fix this,\r\n              // limit single-slide swipes to the default slide duration. This also has the\r\n              // nice side effect of matching slide speed if the user stopped moving before\r\n              // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\r\n              // For faster swipes, also apply limits (albeit higher ones).\r\n              const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\r\n              const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\r\n              if (moveDistance < currentSlideSize) {\r\n                momentumDuration = params.speed;\r\n              } else if (moveDistance < 2 * currentSlideSize) {\r\n                momentumDuration = params.speed * 1.5;\r\n              } else {\r\n                momentumDuration = params.speed * 2.5;\r\n              }\r\n            }\r\n          } else if (params.freeMode.sticky) {\r\n            swiper.slideToClosest();\r\n            return;\r\n          }\r\n          if (params.freeMode.momentumBounce && doBounce) {\r\n            swiper.updateProgress(afterBouncePosition);\r\n            swiper.setTransition(momentumDuration);\r\n            swiper.setTranslate(newPosition);\r\n            swiper.transitionStart(true, swiper.swipeDirection);\r\n            swiper.animating = true;\r\n            elementTransitionEnd(wrapperEl, () => {\r\n              if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\r\n              emit('momentumBounce');\r\n              swiper.setTransition(params.speed);\r\n              setTimeout(() => {\r\n                swiper.setTranslate(afterBouncePosition);\r\n                elementTransitionEnd(wrapperEl, () => {\r\n                  if (!swiper || swiper.destroyed) return;\r\n                  swiper.transitionEnd();\r\n                });\r\n              }, 0);\r\n            });\r\n          } else if (swiper.velocity) {\r\n            emit('_freeModeNoMomentumRelease');\r\n            swiper.updateProgress(newPosition);\r\n            swiper.setTransition(momentumDuration);\r\n            swiper.setTranslate(newPosition);\r\n            swiper.transitionStart(true, swiper.swipeDirection);\r\n            if (!swiper.animating) {\r\n              swiper.animating = true;\r\n              elementTransitionEnd(wrapperEl, () => {\r\n                if (!swiper || swiper.destroyed) return;\r\n                swiper.transitionEnd();\r\n              });\r\n            }\r\n          } else {\r\n            swiper.updateProgress(newPosition);\r\n          }\r\n          swiper.updateActiveIndex();\r\n          swiper.updateSlidesClasses();\r\n        } else if (params.freeMode.sticky) {\r\n          swiper.slideToClosest();\r\n          return;\r\n        } else if (params.freeMode) {\r\n          emit('_freeModeNoMomentumRelease');\r\n        }\r\n        if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\r\n          swiper.updateProgress();\r\n          swiper.updateActiveIndex();\r\n          swiper.updateSlidesClasses();\r\n        }\r\n      }\r\n      Object.assign(swiper, {\r\n        freeMode: {\r\n          onTouchStart,\r\n          onTouchMove,\r\n          onTouchEnd\r\n        }\r\n      });\r\n    }\r\n\r\n    function Grid(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams\r\n      } = _ref;\r\n      extendParams({\r\n        grid: {\r\n          rows: 1,\r\n          fill: 'column'\r\n        }\r\n      });\r\n      let slidesNumberEvenToRows;\r\n      let slidesPerRow;\r\n      let numFullColumns;\r\n      const getSpaceBetween = () => {\r\n        let spaceBetween = swiper.params.spaceBetween;\r\n        if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\r\n          spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\r\n        } else if (typeof spaceBetween === 'string') {\r\n          spaceBetween = parseFloat(spaceBetween);\r\n        }\r\n        return spaceBetween;\r\n      };\r\n      const initSlides = slidesLength => {\r\n        const {\r\n          slidesPerView\r\n        } = swiper.params;\r\n        const {\r\n          rows,\r\n          fill\r\n        } = swiper.params.grid;\r\n        slidesPerRow = slidesNumberEvenToRows / rows;\r\n        numFullColumns = Math.floor(slidesLength / rows);\r\n        if (Math.floor(slidesLength / rows) === slidesLength / rows) {\r\n          slidesNumberEvenToRows = slidesLength;\r\n        } else {\r\n          slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\r\n        }\r\n        if (slidesPerView !== 'auto' && fill === 'row') {\r\n          slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\r\n        }\r\n      };\r\n      const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\r\n        const {\r\n          slidesPerGroup\r\n        } = swiper.params;\r\n        const spaceBetween = getSpaceBetween();\r\n        const {\r\n          rows,\r\n          fill\r\n        } = swiper.params.grid;\r\n        // Set slides order\r\n        let newSlideOrderIndex;\r\n        let column;\r\n        let row;\r\n        if (fill === 'row' && slidesPerGroup > 1) {\r\n          const groupIndex = Math.floor(i / (slidesPerGroup * rows));\r\n          const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\r\n          const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\r\n          row = Math.floor(slideIndexInGroup / columnsInGroup);\r\n          column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\r\n          newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\r\n          slide.style.order = newSlideOrderIndex;\r\n        } else if (fill === 'column') {\r\n          column = Math.floor(i / rows);\r\n          row = i - column * rows;\r\n          if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\r\n            row += 1;\r\n            if (row >= rows) {\r\n              row = 0;\r\n              column += 1;\r\n            }\r\n          }\r\n        } else {\r\n          row = Math.floor(i / slidesPerRow);\r\n          column = i - row * slidesPerRow;\r\n        }\r\n        slide.style[getDirectionLabel('margin-top')] = row !== 0 ? spaceBetween && `${spaceBetween}px` : '';\r\n      };\r\n      const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\r\n        const {\r\n          centeredSlides,\r\n          roundLengths\r\n        } = swiper.params;\r\n        const spaceBetween = getSpaceBetween();\r\n        const {\r\n          rows\r\n        } = swiper.params.grid;\r\n        swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\r\n        swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\r\n        swiper.wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\r\n        if (centeredSlides) {\r\n          const newSlidesGrid = [];\r\n          for (let i = 0; i < snapGrid.length; i += 1) {\r\n            let slidesGridItem = snapGrid[i];\r\n            if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\r\n            if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\r\n          }\r\n          snapGrid.splice(0, snapGrid.length);\r\n          snapGrid.push(...newSlidesGrid);\r\n        }\r\n      };\r\n      swiper.grid = {\r\n        initSlides,\r\n        updateSlide,\r\n        updateWrapperSize\r\n      };\r\n    }\r\n\r\n    function appendSlide(slides) {\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        slidesEl\r\n      } = swiper;\r\n      if (params.loop) {\r\n        swiper.loopDestroy();\r\n      }\r\n      const appendElement = slideEl => {\r\n        if (typeof slideEl === 'string') {\r\n          const tempDOM = document.createElement('div');\r\n          tempDOM.innerHTML = slideEl;\r\n          slidesEl.append(tempDOM.children[0]);\r\n          tempDOM.innerHTML = '';\r\n        } else {\r\n          slidesEl.append(slideEl);\r\n        }\r\n      };\r\n      if (typeof slides === 'object' && 'length' in slides) {\r\n        for (let i = 0; i < slides.length; i += 1) {\r\n          if (slides[i]) appendElement(slides[i]);\r\n        }\r\n      } else {\r\n        appendElement(slides);\r\n      }\r\n      swiper.recalcSlides();\r\n      if (params.loop) {\r\n        swiper.loopCreate();\r\n      }\r\n      if (!params.observer || swiper.isElement) {\r\n        swiper.update();\r\n      }\r\n    }\r\n\r\n    function prependSlide(slides) {\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        activeIndex,\r\n        slidesEl\r\n      } = swiper;\r\n      if (params.loop) {\r\n        swiper.loopDestroy();\r\n      }\r\n      let newActiveIndex = activeIndex + 1;\r\n      const prependElement = slideEl => {\r\n        if (typeof slideEl === 'string') {\r\n          const tempDOM = document.createElement('div');\r\n          tempDOM.innerHTML = slideEl;\r\n          slidesEl.prepend(tempDOM.children[0]);\r\n          tempDOM.innerHTML = '';\r\n        } else {\r\n          slidesEl.prepend(slideEl);\r\n        }\r\n      };\r\n      if (typeof slides === 'object' && 'length' in slides) {\r\n        for (let i = 0; i < slides.length; i += 1) {\r\n          if (slides[i]) prependElement(slides[i]);\r\n        }\r\n        newActiveIndex = activeIndex + slides.length;\r\n      } else {\r\n        prependElement(slides);\r\n      }\r\n      swiper.recalcSlides();\r\n      if (params.loop) {\r\n        swiper.loopCreate();\r\n      }\r\n      if (!params.observer || swiper.isElement) {\r\n        swiper.update();\r\n      }\r\n      swiper.slideTo(newActiveIndex, 0, false);\r\n    }\r\n\r\n    function addSlide(index, slides) {\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        activeIndex,\r\n        slidesEl\r\n      } = swiper;\r\n      let activeIndexBuffer = activeIndex;\r\n      if (params.loop) {\r\n        activeIndexBuffer -= swiper.loopedSlides;\r\n        swiper.loopDestroy();\r\n        swiper.recalcSlides();\r\n      }\r\n      const baseLength = swiper.slides.length;\r\n      if (index <= 0) {\r\n        swiper.prependSlide(slides);\r\n        return;\r\n      }\r\n      if (index >= baseLength) {\r\n        swiper.appendSlide(slides);\r\n        return;\r\n      }\r\n      let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\r\n      const slidesBuffer = [];\r\n      for (let i = baseLength - 1; i >= index; i -= 1) {\r\n        const currentSlide = swiper.slides[i];\r\n        currentSlide.remove();\r\n        slidesBuffer.unshift(currentSlide);\r\n      }\r\n      if (typeof slides === 'object' && 'length' in slides) {\r\n        for (let i = 0; i < slides.length; i += 1) {\r\n          if (slides[i]) slidesEl.append(slides[i]);\r\n        }\r\n        newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\r\n      } else {\r\n        slidesEl.append(slides);\r\n      }\r\n      for (let i = 0; i < slidesBuffer.length; i += 1) {\r\n        slidesEl.append(slidesBuffer[i]);\r\n      }\r\n      swiper.recalcSlides();\r\n      if (params.loop) {\r\n        swiper.loopCreate();\r\n      }\r\n      if (!params.observer || swiper.isElement) {\r\n        swiper.update();\r\n      }\r\n      if (params.loop) {\r\n        swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\r\n      } else {\r\n        swiper.slideTo(newActiveIndex, 0, false);\r\n      }\r\n    }\r\n\r\n    function removeSlide(slidesIndexes) {\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        activeIndex\r\n      } = swiper;\r\n      let activeIndexBuffer = activeIndex;\r\n      if (params.loop) {\r\n        activeIndexBuffer -= swiper.loopedSlides;\r\n        swiper.loopDestroy();\r\n      }\r\n      let newActiveIndex = activeIndexBuffer;\r\n      let indexToRemove;\r\n      if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\r\n        for (let i = 0; i < slidesIndexes.length; i += 1) {\r\n          indexToRemove = slidesIndexes[i];\r\n          if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\r\n          if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\r\n        }\r\n        newActiveIndex = Math.max(newActiveIndex, 0);\r\n      } else {\r\n        indexToRemove = slidesIndexes;\r\n        if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\r\n        if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\r\n        newActiveIndex = Math.max(newActiveIndex, 0);\r\n      }\r\n      swiper.recalcSlides();\r\n      if (params.loop) {\r\n        swiper.loopCreate();\r\n      }\r\n      if (!params.observer || swiper.isElement) {\r\n        swiper.update();\r\n      }\r\n      if (params.loop) {\r\n        swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\r\n      } else {\r\n        swiper.slideTo(newActiveIndex, 0, false);\r\n      }\r\n    }\r\n\r\n    function removeAllSlides() {\r\n      const swiper = this;\r\n      const slidesIndexes = [];\r\n      for (let i = 0; i < swiper.slides.length; i += 1) {\r\n        slidesIndexes.push(i);\r\n      }\r\n      swiper.removeSlide(slidesIndexes);\r\n    }\r\n\r\n    function Manipulation(_ref) {\r\n      let {\r\n        swiper\r\n      } = _ref;\r\n      Object.assign(swiper, {\r\n        appendSlide: appendSlide.bind(swiper),\r\n        prependSlide: prependSlide.bind(swiper),\r\n        addSlide: addSlide.bind(swiper),\r\n        removeSlide: removeSlide.bind(swiper),\r\n        removeAllSlides: removeAllSlides.bind(swiper)\r\n      });\r\n    }\r\n\r\n    function effectInit(params) {\r\n      const {\r\n        effect,\r\n        swiper,\r\n        on,\r\n        setTranslate,\r\n        setTransition,\r\n        overwriteParams,\r\n        perspective,\r\n        recreateShadows,\r\n        getEffectParams\r\n      } = params;\r\n      on('beforeInit', () => {\r\n        if (swiper.params.effect !== effect) return;\r\n        swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\r\n        if (perspective && perspective()) {\r\n          swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\r\n        }\r\n        const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\r\n        Object.assign(swiper.params, overwriteParamsResult);\r\n        Object.assign(swiper.originalParams, overwriteParamsResult);\r\n      });\r\n      on('setTranslate', () => {\r\n        if (swiper.params.effect !== effect) return;\r\n        setTranslate();\r\n      });\r\n      on('setTransition', (_s, duration) => {\r\n        if (swiper.params.effect !== effect) return;\r\n        setTransition(duration);\r\n      });\r\n      on('transitionEnd', () => {\r\n        if (swiper.params.effect !== effect) return;\r\n        if (recreateShadows) {\r\n          if (!getEffectParams || !getEffectParams().slideShadows) return;\r\n          // remove shadows\r\n          swiper.slides.forEach(slideEl => {\r\n            slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\r\n          });\r\n          // create new one\r\n          recreateShadows();\r\n        }\r\n      });\r\n      let requireUpdateOnVirtual;\r\n      on('virtualUpdate', () => {\r\n        if (swiper.params.effect !== effect) return;\r\n        if (!swiper.slides.length) {\r\n          requireUpdateOnVirtual = true;\r\n        }\r\n        requestAnimationFrame(() => {\r\n          if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\r\n            setTranslate();\r\n            requireUpdateOnVirtual = false;\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    function effectTarget(effectParams, slideEl) {\r\n      const transformEl = getSlideTransformEl(slideEl);\r\n      if (transformEl !== slideEl) {\r\n        transformEl.style.backfaceVisibility = 'hidden';\r\n        transformEl.style['-webkit-backface-visibility'] = 'hidden';\r\n      }\r\n      return transformEl;\r\n    }\r\n\r\n    function effectVirtualTransitionEnd(_ref) {\r\n      let {\r\n        swiper,\r\n        duration,\r\n        transformElements,\r\n        allSlides\r\n      } = _ref;\r\n      const {\r\n        activeIndex\r\n      } = swiper;\r\n      const getSlide = el => {\r\n        if (!el.parentElement) {\r\n          // assume shadow root\r\n          const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\r\n          return slide;\r\n        }\r\n        return el.parentElement;\r\n      };\r\n      if (swiper.params.virtualTranslate && duration !== 0) {\r\n        let eventTriggered = false;\r\n        let transitionEndTarget;\r\n        if (allSlides) {\r\n          transitionEndTarget = transformElements;\r\n        } else {\r\n          transitionEndTarget = transformElements.filter(transformEl => {\r\n            const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\r\n            return swiper.getSlideIndex(el) === activeIndex;\r\n          });\r\n        }\r\n        transitionEndTarget.forEach(el => {\r\n          elementTransitionEnd(el, () => {\r\n            if (eventTriggered) return;\r\n            if (!swiper || swiper.destroyed) return;\r\n            eventTriggered = true;\r\n            swiper.animating = false;\r\n            const evt = new window.CustomEvent('transitionend', {\r\n              bubbles: true,\r\n              cancelable: true\r\n            });\r\n            swiper.wrapperEl.dispatchEvent(evt);\r\n          });\r\n        });\r\n      }\r\n    }\r\n\r\n    function EffectFade(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on\r\n      } = _ref;\r\n      extendParams({\r\n        fadeEffect: {\r\n          crossFade: false\r\n        }\r\n      });\r\n      const setTranslate = () => {\r\n        const {\r\n          slides\r\n        } = swiper;\r\n        const params = swiper.params.fadeEffect;\r\n        for (let i = 0; i < slides.length; i += 1) {\r\n          const slideEl = swiper.slides[i];\r\n          const offset = slideEl.swiperSlideOffset;\r\n          let tx = -offset;\r\n          if (!swiper.params.virtualTranslate) tx -= swiper.translate;\r\n          let ty = 0;\r\n          if (!swiper.isHorizontal()) {\r\n            ty = tx;\r\n            tx = 0;\r\n          }\r\n          const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\r\n          const targetEl = effectTarget(params, slideEl);\r\n          targetEl.style.opacity = slideOpacity;\r\n          targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\r\n        }\r\n      };\r\n      const setTransition = duration => {\r\n        const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\r\n        transformElements.forEach(el => {\r\n          el.style.transitionDuration = `${duration}ms`;\r\n        });\r\n        effectVirtualTransitionEnd({\r\n          swiper,\r\n          duration,\r\n          transformElements,\r\n          allSlides: true\r\n        });\r\n      };\r\n      effectInit({\r\n        effect: 'fade',\r\n        swiper,\r\n        on,\r\n        setTranslate,\r\n        setTransition,\r\n        overwriteParams: () => ({\r\n          slidesPerView: 1,\r\n          slidesPerGroup: 1,\r\n          watchSlidesProgress: true,\r\n          spaceBetween: 0,\r\n          virtualTranslate: !swiper.params.cssMode\r\n        })\r\n      });\r\n    }\r\n\r\n    function EffectCube(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on\r\n      } = _ref;\r\n      extendParams({\r\n        cubeEffect: {\r\n          slideShadows: true,\r\n          shadow: true,\r\n          shadowOffset: 20,\r\n          shadowScale: 0.94\r\n        }\r\n      });\r\n      const createSlideShadows = (slideEl, progress, isHorizontal) => {\r\n        let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\r\n        let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\r\n        if (!shadowBefore) {\r\n          shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\r\n          slideEl.append(shadowBefore);\r\n        }\r\n        if (!shadowAfter) {\r\n          shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\r\n          slideEl.append(shadowAfter);\r\n        }\r\n        if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\r\n        if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\r\n      };\r\n      const recreateShadows = () => {\r\n        // create new ones\r\n        const isHorizontal = swiper.isHorizontal();\r\n        swiper.slides.forEach(slideEl => {\r\n          const progress = Math.max(Math.min(slideEl.progress, 1), -1);\r\n          createSlideShadows(slideEl, progress, isHorizontal);\r\n        });\r\n      };\r\n      const setTranslate = () => {\r\n        const {\r\n          el,\r\n          wrapperEl,\r\n          slides,\r\n          width: swiperWidth,\r\n          height: swiperHeight,\r\n          rtlTranslate: rtl,\r\n          size: swiperSize,\r\n          browser\r\n        } = swiper;\r\n        const params = swiper.params.cubeEffect;\r\n        const isHorizontal = swiper.isHorizontal();\r\n        const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\r\n        let wrapperRotate = 0;\r\n        let cubeShadowEl;\r\n        if (params.shadow) {\r\n          if (isHorizontal) {\r\n            cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\r\n            if (!cubeShadowEl) {\r\n              cubeShadowEl = createElement('div', 'swiper-cube-shadow');\r\n              swiper.slidesEl.append(cubeShadowEl);\r\n            }\r\n            cubeShadowEl.style.height = `${swiperWidth}px`;\r\n          } else {\r\n            cubeShadowEl = el.querySelector('.swiper-cube-shadow');\r\n            if (!cubeShadowEl) {\r\n              cubeShadowEl = createElement('div', 'swiper-cube-shadow');\r\n              el.append(cubeShadowEl);\r\n            }\r\n          }\r\n        }\r\n        for (let i = 0; i < slides.length; i += 1) {\r\n          const slideEl = slides[i];\r\n          let slideIndex = i;\r\n          if (isVirtual) {\r\n            slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\r\n          }\r\n          let slideAngle = slideIndex * 90;\r\n          let round = Math.floor(slideAngle / 360);\r\n          if (rtl) {\r\n            slideAngle = -slideAngle;\r\n            round = Math.floor(-slideAngle / 360);\r\n          }\r\n          const progress = Math.max(Math.min(slideEl.progress, 1), -1);\r\n          let tx = 0;\r\n          let ty = 0;\r\n          let tz = 0;\r\n          if (slideIndex % 4 === 0) {\r\n            tx = -round * 4 * swiperSize;\r\n            tz = 0;\r\n          } else if ((slideIndex - 1) % 4 === 0) {\r\n            tx = 0;\r\n            tz = -round * 4 * swiperSize;\r\n          } else if ((slideIndex - 2) % 4 === 0) {\r\n            tx = swiperSize + round * 4 * swiperSize;\r\n            tz = swiperSize;\r\n          } else if ((slideIndex - 3) % 4 === 0) {\r\n            tx = -swiperSize;\r\n            tz = 3 * swiperSize + swiperSize * 4 * round;\r\n          }\r\n          if (rtl) {\r\n            tx = -tx;\r\n          }\r\n          if (!isHorizontal) {\r\n            ty = tx;\r\n            tx = 0;\r\n          }\r\n          const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\r\n          if (progress <= 1 && progress > -1) {\r\n            wrapperRotate = slideIndex * 90 + progress * 90;\r\n            if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\r\n          }\r\n          slideEl.style.transform = transform;\r\n          if (params.slideShadows) {\r\n            createSlideShadows(slideEl, progress, isHorizontal);\r\n          }\r\n        }\r\n        wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\r\n        wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\r\n        if (params.shadow) {\r\n          if (isHorizontal) {\r\n            cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\r\n          } else {\r\n            const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\r\n            const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\r\n            const scale1 = params.shadowScale;\r\n            const scale2 = params.shadowScale / multiplier;\r\n            const offset = params.shadowOffset;\r\n            cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\r\n          }\r\n        }\r\n        const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\r\n        wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\r\n        wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\r\n      };\r\n      const setTransition = duration => {\r\n        const {\r\n          el,\r\n          slides\r\n        } = swiper;\r\n        slides.forEach(slideEl => {\r\n          slideEl.style.transitionDuration = `${duration}ms`;\r\n          slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\r\n            subEl.style.transitionDuration = `${duration}ms`;\r\n          });\r\n        });\r\n        if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\r\n          const shadowEl = el.querySelector('.swiper-cube-shadow');\r\n          if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\r\n        }\r\n      };\r\n      effectInit({\r\n        effect: 'cube',\r\n        swiper,\r\n        on,\r\n        setTranslate,\r\n        setTransition,\r\n        recreateShadows,\r\n        getEffectParams: () => swiper.params.cubeEffect,\r\n        perspective: () => true,\r\n        overwriteParams: () => ({\r\n          slidesPerView: 1,\r\n          slidesPerGroup: 1,\r\n          watchSlidesProgress: true,\r\n          resistanceRatio: 0,\r\n          spaceBetween: 0,\r\n          centeredSlides: false,\r\n          virtualTranslate: true\r\n        })\r\n      });\r\n    }\r\n\r\n    function createShadow(params, slideEl, side) {\r\n      const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\r\n      const shadowContainer = getSlideTransformEl(slideEl);\r\n      let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\r\n      if (!shadowEl) {\r\n        shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\r\n        shadowContainer.append(shadowEl);\r\n      }\r\n      return shadowEl;\r\n    }\r\n\r\n    function EffectFlip(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on\r\n      } = _ref;\r\n      extendParams({\r\n        flipEffect: {\r\n          slideShadows: true,\r\n          limitRotation: true\r\n        }\r\n      });\r\n      const createSlideShadows = (slideEl, progress, params) => {\r\n        let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\r\n        let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\r\n        if (!shadowBefore) {\r\n          shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\r\n        }\r\n        if (!shadowAfter) {\r\n          shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\r\n        }\r\n        if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\r\n        if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\r\n      };\r\n      const recreateShadows = () => {\r\n        // Set shadows\r\n        const params = swiper.params.flipEffect;\r\n        swiper.slides.forEach(slideEl => {\r\n          let progress = slideEl.progress;\r\n          if (swiper.params.flipEffect.limitRotation) {\r\n            progress = Math.max(Math.min(slideEl.progress, 1), -1);\r\n          }\r\n          createSlideShadows(slideEl, progress, params);\r\n        });\r\n      };\r\n      const setTranslate = () => {\r\n        const {\r\n          slides,\r\n          rtlTranslate: rtl\r\n        } = swiper;\r\n        const params = swiper.params.flipEffect;\r\n        for (let i = 0; i < slides.length; i += 1) {\r\n          const slideEl = slides[i];\r\n          let progress = slideEl.progress;\r\n          if (swiper.params.flipEffect.limitRotation) {\r\n            progress = Math.max(Math.min(slideEl.progress, 1), -1);\r\n          }\r\n          const offset = slideEl.swiperSlideOffset;\r\n          const rotate = -180 * progress;\r\n          let rotateY = rotate;\r\n          let rotateX = 0;\r\n          let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\r\n          let ty = 0;\r\n          if (!swiper.isHorizontal()) {\r\n            ty = tx;\r\n            tx = 0;\r\n            rotateX = -rotateY;\r\n            rotateY = 0;\r\n          } else if (rtl) {\r\n            rotateY = -rotateY;\r\n          }\r\n          slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\r\n          if (params.slideShadows) {\r\n            createSlideShadows(slideEl, progress, params);\r\n          }\r\n          const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\r\n          const targetEl = effectTarget(params, slideEl);\r\n          targetEl.style.transform = transform;\r\n        }\r\n      };\r\n      const setTransition = duration => {\r\n        const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\r\n        transformElements.forEach(el => {\r\n          el.style.transitionDuration = `${duration}ms`;\r\n          el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\r\n            shadowEl.style.transitionDuration = `${duration}ms`;\r\n          });\r\n        });\r\n        effectVirtualTransitionEnd({\r\n          swiper,\r\n          duration,\r\n          transformElements\r\n        });\r\n      };\r\n      effectInit({\r\n        effect: 'flip',\r\n        swiper,\r\n        on,\r\n        setTranslate,\r\n        setTransition,\r\n        recreateShadows,\r\n        getEffectParams: () => swiper.params.flipEffect,\r\n        perspective: () => true,\r\n        overwriteParams: () => ({\r\n          slidesPerView: 1,\r\n          slidesPerGroup: 1,\r\n          watchSlidesProgress: true,\r\n          spaceBetween: 0,\r\n          virtualTranslate: !swiper.params.cssMode\r\n        })\r\n      });\r\n    }\r\n\r\n    function EffectCoverflow(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on\r\n      } = _ref;\r\n      extendParams({\r\n        coverflowEffect: {\r\n          rotate: 50,\r\n          stretch: 0,\r\n          depth: 100,\r\n          scale: 1,\r\n          modifier: 1,\r\n          slideShadows: true\r\n        }\r\n      });\r\n      const setTranslate = () => {\r\n        const {\r\n          width: swiperWidth,\r\n          height: swiperHeight,\r\n          slides,\r\n          slidesSizesGrid\r\n        } = swiper;\r\n        const params = swiper.params.coverflowEffect;\r\n        const isHorizontal = swiper.isHorizontal();\r\n        const transform = swiper.translate;\r\n        const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\r\n        const rotate = isHorizontal ? params.rotate : -params.rotate;\r\n        const translate = params.depth;\r\n        // Each slide offset from center\r\n        for (let i = 0, length = slides.length; i < length; i += 1) {\r\n          const slideEl = slides[i];\r\n          const slideSize = slidesSizesGrid[i];\r\n          const slideOffset = slideEl.swiperSlideOffset;\r\n          const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\r\n          const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\r\n          let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\r\n          let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\r\n          // var rotateZ = 0\r\n          let translateZ = -translate * Math.abs(offsetMultiplier);\r\n          let stretch = params.stretch;\r\n          // Allow percentage to make a relative stretch for responsive sliders\r\n          if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\r\n            stretch = parseFloat(params.stretch) / 100 * slideSize;\r\n          }\r\n          let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\r\n          let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\r\n          let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\r\n\r\n          // Fix for ultra small values\r\n          if (Math.abs(translateX) < 0.001) translateX = 0;\r\n          if (Math.abs(translateY) < 0.001) translateY = 0;\r\n          if (Math.abs(translateZ) < 0.001) translateZ = 0;\r\n          if (Math.abs(rotateY) < 0.001) rotateY = 0;\r\n          if (Math.abs(rotateX) < 0.001) rotateX = 0;\r\n          if (Math.abs(scale) < 0.001) scale = 0;\r\n          const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\r\n          const targetEl = effectTarget(params, slideEl);\r\n          targetEl.style.transform = slideTransform;\r\n          slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\r\n          if (params.slideShadows) {\r\n            // Set shadows\r\n            let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\r\n            let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\r\n            if (!shadowBeforeEl) {\r\n              shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\r\n            }\r\n            if (!shadowAfterEl) {\r\n              shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\r\n            }\r\n            if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\r\n            if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\r\n          }\r\n        }\r\n      };\r\n      const setTransition = duration => {\r\n        const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\r\n        transformElements.forEach(el => {\r\n          el.style.transitionDuration = `${duration}ms`;\r\n          el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\r\n            shadowEl.style.transitionDuration = `${duration}ms`;\r\n          });\r\n        });\r\n      };\r\n      effectInit({\r\n        effect: 'coverflow',\r\n        swiper,\r\n        on,\r\n        setTranslate,\r\n        setTransition,\r\n        perspective: () => true,\r\n        overwriteParams: () => ({\r\n          watchSlidesProgress: true\r\n        })\r\n      });\r\n    }\r\n\r\n    function EffectCreative(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on\r\n      } = _ref;\r\n      extendParams({\r\n        creativeEffect: {\r\n          limitProgress: 1,\r\n          shadowPerProgress: false,\r\n          progressMultiplier: 1,\r\n          perspective: true,\r\n          prev: {\r\n            translate: [0, 0, 0],\r\n            rotate: [0, 0, 0],\r\n            opacity: 1,\r\n            scale: 1\r\n          },\r\n          next: {\r\n            translate: [0, 0, 0],\r\n            rotate: [0, 0, 0],\r\n            opacity: 1,\r\n            scale: 1\r\n          }\r\n        }\r\n      });\r\n      const getTranslateValue = value => {\r\n        if (typeof value === 'string') return value;\r\n        return `${value}px`;\r\n      };\r\n      const setTranslate = () => {\r\n        const {\r\n          slides,\r\n          wrapperEl,\r\n          slidesSizesGrid\r\n        } = swiper;\r\n        const params = swiper.params.creativeEffect;\r\n        const {\r\n          progressMultiplier: multiplier\r\n        } = params;\r\n        const isCenteredSlides = swiper.params.centeredSlides;\r\n        if (isCenteredSlides) {\r\n          const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\r\n          wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\r\n        }\r\n        for (let i = 0; i < slides.length; i += 1) {\r\n          const slideEl = slides[i];\r\n          const slideProgress = slideEl.progress;\r\n          const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\r\n          let originalProgress = progress;\r\n          if (!isCenteredSlides) {\r\n            originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\r\n          }\r\n          const offset = slideEl.swiperSlideOffset;\r\n          const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\r\n          const r = [0, 0, 0];\r\n          let custom = false;\r\n          if (!swiper.isHorizontal()) {\r\n            t[1] = t[0];\r\n            t[0] = 0;\r\n          }\r\n          let data = {\r\n            translate: [0, 0, 0],\r\n            rotate: [0, 0, 0],\r\n            scale: 1,\r\n            opacity: 1\r\n          };\r\n          if (progress < 0) {\r\n            data = params.next;\r\n            custom = true;\r\n          } else if (progress > 0) {\r\n            data = params.prev;\r\n            custom = true;\r\n          }\r\n          // set translate\r\n          t.forEach((value, index) => {\r\n            t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\r\n          });\r\n          // set rotates\r\n          r.forEach((value, index) => {\r\n            r[index] = data.rotate[index] * Math.abs(progress * multiplier);\r\n          });\r\n          slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\r\n          const translateString = t.join(', ');\r\n          const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\r\n          const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\r\n          const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\r\n          const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\r\n\r\n          // Set shadows\r\n          if (custom && data.shadow || !custom) {\r\n            let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\r\n            if (!shadowEl && data.shadow) {\r\n              shadowEl = createShadow(params, slideEl);\r\n            }\r\n            if (shadowEl) {\r\n              const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\r\n              shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\r\n            }\r\n          }\r\n          const targetEl = effectTarget(params, slideEl);\r\n          targetEl.style.transform = transform;\r\n          targetEl.style.opacity = opacityString;\r\n          if (data.origin) {\r\n            targetEl.style.transformOrigin = data.origin;\r\n          }\r\n        }\r\n      };\r\n      const setTransition = duration => {\r\n        const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\r\n        transformElements.forEach(el => {\r\n          el.style.transitionDuration = `${duration}ms`;\r\n          el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\r\n            shadowEl.style.transitionDuration = `${duration}ms`;\r\n          });\r\n        });\r\n        effectVirtualTransitionEnd({\r\n          swiper,\r\n          duration,\r\n          transformElements,\r\n          allSlides: true\r\n        });\r\n      };\r\n      effectInit({\r\n        effect: 'creative',\r\n        swiper,\r\n        on,\r\n        setTranslate,\r\n        setTransition,\r\n        perspective: () => swiper.params.creativeEffect.perspective,\r\n        overwriteParams: () => ({\r\n          watchSlidesProgress: true,\r\n          virtualTranslate: !swiper.params.cssMode\r\n        })\r\n      });\r\n    }\r\n\r\n    function EffectCards(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on\r\n      } = _ref;\r\n      extendParams({\r\n        cardsEffect: {\r\n          slideShadows: true,\r\n          rotate: true,\r\n          perSlideRotate: 2,\r\n          perSlideOffset: 8\r\n        }\r\n      });\r\n      const setTranslate = () => {\r\n        const {\r\n          slides,\r\n          activeIndex\r\n        } = swiper;\r\n        const params = swiper.params.cardsEffect;\r\n        const {\r\n          startTranslate,\r\n          isTouched\r\n        } = swiper.touchEventsData;\r\n        const currentTranslate = swiper.translate;\r\n        for (let i = 0; i < slides.length; i += 1) {\r\n          const slideEl = slides[i];\r\n          const slideProgress = slideEl.progress;\r\n          const progress = Math.min(Math.max(slideProgress, -4), 4);\r\n          let offset = slideEl.swiperSlideOffset;\r\n          if (swiper.params.centeredSlides && !swiper.params.cssMode) {\r\n            swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\r\n          }\r\n          if (swiper.params.centeredSlides && swiper.params.cssMode) {\r\n            offset -= slides[0].swiperSlideOffset;\r\n          }\r\n          let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\r\n          let tY = 0;\r\n          const tZ = -100 * Math.abs(progress);\r\n          let scale = 1;\r\n          let rotate = -params.perSlideRotate * progress;\r\n          let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\r\n          const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\r\n          const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\r\n          const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\r\n          if (isSwipeToNext || isSwipeToPrev) {\r\n            const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\r\n            rotate += -28 * progress * subProgress;\r\n            scale += -0.5 * subProgress;\r\n            tXAdd += 96 * subProgress;\r\n            tY = `${-25 * subProgress * Math.abs(progress)}%`;\r\n          }\r\n          if (progress < 0) {\r\n            // next\r\n            tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\r\n          } else if (progress > 0) {\r\n            // prev\r\n            tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\r\n          } else {\r\n            tX = `${tX}px`;\r\n          }\r\n          if (!swiper.isHorizontal()) {\r\n            const prevY = tY;\r\n            tY = tX;\r\n            tX = prevY;\r\n          }\r\n          const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\r\n          const transform = `\r\n        translate3d(${tX}, ${tY}, ${tZ}px)\r\n        rotateZ(${params.rotate ? rotate : 0}deg)\r\n        scale(${scaleString})\r\n      `;\r\n          if (params.slideShadows) {\r\n            // Set shadows\r\n            let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\r\n            if (!shadowEl) {\r\n              shadowEl = createShadow(params, slideEl);\r\n            }\r\n            if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\r\n          }\r\n          slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\r\n          const targetEl = effectTarget(params, slideEl);\r\n          targetEl.style.transform = transform;\r\n        }\r\n      };\r\n      const setTransition = duration => {\r\n        const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\r\n        transformElements.forEach(el => {\r\n          el.style.transitionDuration = `${duration}ms`;\r\n          el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\r\n            shadowEl.style.transitionDuration = `${duration}ms`;\r\n          });\r\n        });\r\n        effectVirtualTransitionEnd({\r\n          swiper,\r\n          duration,\r\n          transformElements\r\n        });\r\n      };\r\n      effectInit({\r\n        effect: 'cards',\r\n        swiper,\r\n        on,\r\n        setTranslate,\r\n        setTransition,\r\n        perspective: () => true,\r\n        overwriteParams: () => ({\r\n          watchSlidesProgress: true,\r\n          virtualTranslate: !swiper.params.cssMode\r\n        })\r\n      });\r\n    }\r\n\r\n    // Swiper Class\r\n    const modules = [Virtual, Keyboard, Mousewheel, Navigation, Pagination, Scrollbar, Parallax, Zoom, Controller, A11y, History, HashNavigation, Autoplay, Thumb, freeMode, Grid, Manipulation, EffectFade, EffectCube, EffectFlip, EffectCoverflow, EffectCreative, EffectCards];\r\n    Swiper.use(modules);\r\n\r\n    return Swiper;\r\n\r\n}));\r\n\r\n});\r\n//# sourceMappingURL=swiper-bundle.js.map\r\n"],"names":["define","module","global","factory","this","isObject$1","obj","constructor","Object","extend$1","target","src","keys","forEach","key","length","ssrDocument","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","getDocument","doc","document","ssrWindow","navigator","userAgent","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","id","getWindow","win","window","nextTick","delay","now","getTranslate","el","axis","matrix","curTransform","transformMatrix","curStyle","currentStyle","getComputedStyle$1","WebKitCSSMatrix","transform","webkitTransform","split","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","parseFloat","m42","isObject","o","prototype","call","slice","isNode","node","HTMLElement","nodeType","extend","to","arguments","undefined","noExtend","i","nextSource","keysArray","filter","indexOf","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","__swiper__","setCSSProperty","varName","varValue","setProperty","animateCSSModeScroll","_ref","swiper","targetPosition","side","startPosition","translate","time","startTime","duration","params","speed","wrapperEl","scrollSnapType","cssModeFrameID","dir","isOutOfBound","current","animate","getTime","progress","Math","max","min","easeProgress","cos","PI","currentPosition","scrollTo","overflow","getSlideTransformEl","slideEl","shadowEl","elementChildren","element","selector","matches","tag","classes","classList","add","Array","isArray","elementOffset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","elementStyle","prop","elementIndex","child","previousSibling","elementParents","parents","parent","parentElement","push","elementTransitionEnd","fireCallBack","e","elementOuterSize","size","includeMargins","offsetWidth","support","deviceCached","browser","getSupport","smoothScroll","documentElement","touch","DocumentTouch","calcSupport","getDevice","overrides","_temp","platform","ua","device","ios","android","screenWidth","width","screenHeight","height","match","ipad","ipod","iphone","windows","macos","os","calcDevice","getBrowser","needPerspectiveFix","isSafari","toLowerCase","String","includes","major","minor","num","Number","isWebView","test","calcBrowser","eventsEmitter","on","events","handler","priority","self","eventsListeners","destroyed","method","event","once","onceHandler","off","__emitterProxy","_len","args","_key","apply","onAny","eventsAnyListeners","offAny","index","splice","eventHandler","emit","data","context","_len2","_key2","unshift","processLazyPreloader","imageEl","closest","isElement","slideClass","lazyEl","lazyPreloaderClass","remove","unlazy","slides","removeAttribute","preload","amount","lazyPreloadPrevNext","slidesPerView","slidesPerViewDynamic","ceil","activeIndex","slideIndexLastInView","rewind","realIndex","update","updateSize","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","isNaN","assign","updateSlides","getDirectionLabel","property","getDirectionPropertyValue","label","slidesEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginRight","marginBottom","marginTop","centeredSlides","cssMode","gridEnabled","grid","rows","slideSize","initSlides","shouldResetSlideSize","breakpoints","slide","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","floor","swiperSlideSize","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","loop","groups","slidesBefore","slidesAfter","groupSize","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchOverflow","checkOverflow","watchSlidesProgress","updateSlidesOffset","backFaceHiddenClass","containerModifierClass","hasClassBackfaceClassAdded","contains","maxBackfaceHiddenSlides","updateAutoHeight","activeSlides","newHeight","setTransition","getSlideByIndex","getSlideIndexByData","visibleSlides","offsetHeight","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","cssOverflowAdjustment","updateSlidesProgress","offsetCenter","slideVisibleClass","visibleSlidesIndexes","slideOffset","slideProgress","minTranslate","originalSlideProgress","slideBefore","slideAfter","originalProgress","updateProgress","multiplier","translatesDiff","maxTranslate","isBeginning","isEnd","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","firstSlideIndex","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","autoHeight","updateSlidesClasses","getFilteredSlide","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","nextSlide","nextEls","nextElementSibling","next","elementNextAll","prevSlide","prevEls","previousElementSibling","prev","elementPrevAll","emitSlidesClasses","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","getActiveIndexByTranslate","skip","getAttribute","initialized","runCallbacksOnInit","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","translateTo","runCallbacks","translateBounds","internal","animating","preventInteractionOnTransition","newTranslate","isH","behavior","onTranslateToWrapperTransitionEnd","transitionEmit","direction","step","slideTo","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","allowSlideNext","allowSlidePrev","transitionStart","transitionEnd","t","_immediateVirtual","_cssModeVirtualInitialSet","initialSlide","onSlideToWrapperTransitionEnd","slideToLoop","newIndex","slideNext","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","loopFix","_clientLeft","slidePrev","normalize","val","normalizedSnapGrid","prevSnap","prevSnapIndex","prevIndex","lastIndex","slideReset","slideToClosest","threshold","currentSnap","slideToIndex","slideSelector","loopedSlides","getSlideIndex","loopCreate","slideRealIndex","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","swiperLoopMoveDOM","prepend","append","recalcSlides","currentSlideTranslate","diff","touches","controller","control","loopParams","c","loopDestroy","newSlidesOrder","swiperSlideIndex","onTouchStart","touchEventsData","evCache","simulateTouch","pointerType","originalEvent","targetEl","touchEventsTarget","which","button","isTouched","isMoved","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","shadowRoot","noSwipingSelector","isTargetShadow","noSwiping","base","__closestFrom","assignedSlot","found","getRootNode","closestElement","allowClick","swipeHandler","currentX","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","preventDefault","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","focusableElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","freeMode","onTouchMove","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","sqrt","touchAngle","atan2","zoom","cancelable","touchMoveStopPropagation","nested","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","isLoop","startTranslate","evt","bubbles","dispatchEvent","allowMomentumBounce","grabCursor","setGrabCursor","loopFixed","disableParentSwiper","resistanceRatio","resistance","followFinger","onTouchEnd","type","touchEndTime","timeDiff","pathTree","lastClickTime","currentPos","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","navigation","nextEl","prevEl","onResize","setBreakpoint","isVirtualLoop","autoplay","running","paused","resizeTimeout","resume","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","onScroll","onLoad","dummyEventAttached","dummyEventListener","capture","domMethod","swiperMethod","passive","updateOnWindowResize","isGridEnabled","defaults","init","resizeObserver","createElements","url","breakpointsBase","uniqueNavElements","passiveListeners","wrapperClass","_emitClasses","moduleExtendParams","allModulesParams","moduleParamName","moduleParams","auto","prototypes","transition","transitionDuration","moving","isLocked","__preventObserver__","cursor","unsetGrabCursor","attachEvents","bind","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointParams","originalParams","wasMultiRow","isMultiRow","wasEnabled","emitContainerClasses","fill","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","needsReLoop","changeDirection","isEnabled","containerEl","currentHeight","innerHeight","points","point","minRatio","substr","value","sort","b","wasLocked","lastSlideRightEdge","addClasses","classNames","suffixes","entries","prefix","resultClasses","item","prepareClasses","removeClasses","extendedDefaults","Swiper","swipers","newParams","modules","__modules__","mod","extendParams","swiperParams","passedParams","eventName","velocity","trunc","clickTimeout","velocities","imagesToLoad","imagesLoaded","setProgress","cls","className","getSlideClasses","updates","view","exact","spv","breakLoop","translateValue","translated","complete","newDirection","needUpdate","currentDirection","changeLanguageDirection","mount","mounted","getWrapperSelector","trim","destroy","deleteInstance","cleanStyles","object","deleteProps","newDefaults","m","installModule","createElementIfNotDefined","checkProps","classesToSelector","appendSlide","appendElement","tempDOM","innerHTML","observer","prependSlide","prependElement","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","effectInit","overwriteParams","perspective","recreateShadows","getEffectParams","requireUpdateOnVirtual","overwriteParamsResult","_s","slideShadows","effectTarget","effectParams","transformEl","backfaceVisibility","effectVirtualTransitionEnd","transformElements","allSlides","transitionEndTarget","eventTriggered","parentNode","getSlide","createShadow","shadowClass","shadowContainer","prototypeGroup","protoMethod","use","animationFrame","resizeHandler","orientationChangeHandler","ResizeObserver","newWidth","_ref2","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","observers","attach","options","MutationObserver","WebkitMutationObserver","mutations","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","disconnect","cssModeTimeout","cache","renderSlide","renderExternal","renderExternalUpdate","addSlidesBefore","addSlidesAfter","from","offset","force","previousFrom","previousTo","previousSlidesGrid","previousOffset","offsetProp","onRendered","slidesToRender","prependIndexes","appendIndexes","loopFrom","loopTo","domSlidesAssigned","numberOfNewSlides","newCache","cachedIndex","cachedEl","cachedElIndex","handle","kc","keyCode","charCode","pageUpDown","keyboard","isPageUp","isPageDown","isArrowLeft","isArrowRight","isArrowUp","isArrowDown","shiftKey","altKey","ctrlKey","metaKey","onlyInViewport","inView","swiperWidth","swiperHeight","windowWidth","windowHeight","swiperOffset","swiperCoord","returnValue","timeout","mousewheel","releaseOnEdges","invert","forceToAxis","sensitivity","eventsTarget","thresholdDelta","thresholdTime","noMousewheelClass","lastEventBeforeSnap","lastScrollTime","recentWheelEvents","handleMouseEnter","mouseEntered","handleMouseLeave","animateSlider","newEvent","delta","raw","targetElContainsTarget","rtlFactor","sX","sY","pX","pY","detail","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","positions","sign","ignoreWheelEvents","position","sticky","shift","prevEvent","firstEvent","snapToThreshold","autoplayDisableOnInteraction","stop","releaseScroll","hideOnClick","disabledClass","hiddenClass","lockClass","navigationDisabledClass","makeElementsArray","getEl","res","toggleEl","disabled","subEl","tagName","onPrevClick","onNextClick","initButton","destroyButton","pagination","clickable","isHidden","toggle","pfx","bulletSize","bulletElement","renderBullet","renderProgressbar","renderFraction","renderCustom","progressbarOpposite","dynamicBullets","dynamicMainBullets","formatFractionCurrent","number","formatFractionTotal","bulletClass","bulletActiveClass","modifierClass","currentClass","totalClass","progressbarFillClass","progressbarOppositeClass","clickableClass","horizontalClass","verticalClass","paginationDisabledClass","bullets","dynamicBulletIndex","isPaginationDisabled","setSideBullets","bulletEl","onBulletClick","newSlideIndex","currentSlideIndex","total","firstIndex","midIndex","classesToRemove","suffix","s","flat","bullet","bulletIndex","firstDisplayedBullet","lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","subElIndex","fractionEl","textContent","totalEl","progressbarDirection","scale","scaleX","scaleY","progressEl","render","paginationHTML","numberOfBullets","dragStartPos","dragSize","trackSize","divider","dragTimeout","scrollbar","dragEl","newSize","newPos","hide","opacity","display","getPointerPosition","clientX","clientY","setDragPosition","positionRatio","onDragStart","onDragMove","onDragEnd","snapOnRelease","activeListener","passiveListener","eventMethod","swiperEl","dragClass","draggable","scrollbarDisabledClass","parallax","setTransform","p","rotate","currentOpacity","currentScale","_swiper","parallaxEl","parallaxDuration","maxRatio","containerClass","zoomedSlideClass","fakeGestureTouched","fakeGestureMoved","isScaling","gesture","originX","originY","slideWidth","slideHeight","imageWrapEl","image","minX","minY","maxX","maxY","touchesStart","touchesCurrent","prevPositionX","prevPositionY","prevTime","getDistanceBetweenTouches","x1","y1","x2","y2","eventWithinSlide","onGestureStart","scaleStart","getScaleOrigin","onGestureChange","scaleMove","onGestureEnd","eventWithinZoomContainer","scaledWidth","scaledHeight","scaleRatio","onTransitionEnd","zoomIn","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","touchAction","forceZoomRatio","zoomOut","zoomToggle","getListeners","activeListenerWithCapture","defineProperty","get","set","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","momentumDuration","in","out","LinearSpline","binarySearch","maxIndex","minIndex","guess","array","i1","i3","interpolate","removeSpline","spline","inverse","by","controlElement","onControllerSwiper","_t","controlled","controlledTranslate","setControlledTranslate","getInterpolateFunction","isFinite","setControlledTransition","a11y","notificationClass","prevSlideMessage","nextSlideMessage","firstSlideMessage","lastSlideMessage","paginationBulletMessage","slideLabelMessage","containerMessage","containerRoleDescriptionMessage","itemRoleDescriptionMessage","slideRole","clicked","liveRegion","notify","message","notification","makeElFocusable","makeElNotFocusable","addElRole","role","addElRoleDescription","description","addElLabel","disableEl","enableEl","onEnterOrSpaceKey","click","hasPagination","hasClickablePagination","initNavEl","wrapperId","controls","addElControls","handlePointerDown","handlePointerUp","handleFocus","isActive","isVisible","sourceCapabilities","firesTouchEvents","repeat","round","random","live","addElLive","updateNavigation","updatePagination","root","keepQuery","paths","slugify","text","getPathValues","urlOverride","URL","pathArray","part","setHistory","currentState","state","scrollToSlide","setHistoryPopState","hashNavigation","watchState","slideWithHash","onHashChange","newHash","activeSlideEl","setHash","activeSlideHash","raf","timeLeft","waitForTransition","disableOnInteraction","stopOnLastSlide","reverseDirection","pauseOnMouseEnter","autoplayTimeLeft","wasPaused","pausedByTouch","touchStartTimeout","slideChanged","pausedByInteraction","autoplayDelayTotal","autoplayDelayCurrent","autoplayStartTime","calcTimeLeft","run","delayForce","currentSlideDelay","getSlideDelay","proceed","start","pause","reset","onVisibilityChange","visibilityState","onPointerEnter","onPointerLeave","thumbs","multipleActiveThumbs","autoScrollOffset","slideThumbActiveClass","thumbsContainerClass","swiperCreated","onThumbClick","thumbsSwiper","thumbsParams","SwiperClass","thumbsSwiperParams","thumbsToActivate","thumbActiveClass","useOffset","currentThumbsIndex","newThumbsIndex","newThumbsSlide","getThumbsElementAndInit","thumbsElement","onThumbsSwiper","watchForThumbsToAppear","momentum","momentumRatio","momentumBounce","momentumBounceRatio","momentumVelocityRatio","minimumVelocity","lastMoveEvent","pop","velocityEvent","distance","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","j","moveDistance","currentSlideSize","slidesNumberEvenToRows","slidesPerRow","numFullColumns","getSpaceBetween","newSlideOrderIndex","column","row","groupIndex","slideIndexInGroup","columnsInGroup","order","fadeEffect","crossFade","tx","ty","slideOpacity","cubeEffect","shadow","shadowOffset","shadowScale","createSlideShadows","shadowBefore","shadowAfter","cubeShadowEl","wrapperRotate","slideAngle","tz","transformOrigin","shadowAngle","sin","scale1","scale2","zFactor","flipEffect","limitRotation","rotateY","rotateX","zIndex","coverflowEffect","stretch","depth","modifier","center","centerOffset","offsetMultiplier","translateZ","slideTransform","shadowBeforeEl","shadowAfterEl","creativeEffect","limitProgress","shadowPerProgress","progressMultiplier","getTranslateValue","isCenteredSlides","margin","r","custom","translateString","rotateString","scaleString","opacityString","shadowOpacity","cardsEffect","perSlideRotate","perSlideOffset","tX","tY","tZ","tXAdd","isSwipeToNext","isSwipeToPrev","subProgress","exports","amd","globalThis"],"mappings":"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"}